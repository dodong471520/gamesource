H:\work\source\QQ西游\3D QQ西游全套源码\QQ.wim\QQ西遊\servers\DBCenter\DBCenter.h 5 KB H 文件 2010/6/22 11:20:49 2018/5/20 0:11:11 2018/5/20 0:11:11 1
80 	static std::map<std::string, AccountInfo* >							accounts_;
81 	// character name to account info.
82 	static std::map<std::string, AccountInfo*  >						online_char_acc_map_; // 方便跨服交互，服务器名称记录在accountInfo上，[只记录在线的]
83 	static QuestionTables												question_cache_tables;
84 	// world value.

H:\work\source\QQ西游\3D QQ西游全套源码\QRender\QRender\Game\Hdr\GameEvents.h 40 KB H 文件 2011/5/3 17:25:52 2018/5/20 0:11:16 2018/5/20 0:11:16 6
104 GAME_EVENT(CLGE_InstCorpsUpdate)
105 GAME_EVENT(CLGE_PrepareJoinBattle)//准备进入战场
107 GAME_EVENT(CLGE_SignInterBattle)//跨服战场报名
108 GAME_EVENT(CLGE_CancelSignInterBattle)//取消跨服战场报名
109 GAME_EVENT(CLGE_EnterInterBattle)//进入跨服战场
110 GAME_EVENT(CLGE_IpInterBattle)//跨服战场地址
111 GAME_EVENT(CLGE_InterBattleScoreUpdate)//跨服战场积分
112 GAME_EVENT(CLGE_InterBattleM_ScoreUpdate)//跨服战场改变积分
114 // Client selection changed.
115 GAME_EVENT(CLGE_SelChange)				//	unitGuid

H:\work\source\QQ西游\3D QQ西游全套源码\QRender\QRender\Game\Hdr\GameScriptAPI.h 134 KB H 文件 2011/5/9 11:33:28 2018/5/20 0:11:16 2018/5/20 0:11:16 5
3590 GAME_SCRIPT_API( Team, chgMyInfo );
3591 //
3592 GAME_SCRIPT_API(InterBattle, sign);//跨服战争报名
3593 GAME_SCRIPT_API(InterBattle, cancelsign);//取消注册战场
3593 GAME_SCRIPT_API(InterBattle, cancelsign);//取消注册战场
3594 GAME_SCRIPT_API(InterBattle, enter);//进入跨服战场
3595 GAME_SCRIPT_API(InterBattle, getSumScore);//获取跨服战场总积分
3596 GAME_SCRIPT_API(InterBattle, setSumScore);//设置跨服战场总积分
3597 GAME_SCRIPT_API(InterBattle, exit);//退出跨服战场
3598 GAME_SCRIPT_API(InterBattle, IsInterBattle);//是否在战场中
3599 /**

H:\work\source\QQ西游\3D QQ西游全套源码\QRender\QRender\Game\Hdr\QClientState.h 10 KB H 文件 2011/5/3 17:25:52 2018/5/20 0:11:26 2018/5/20 0:11:26 2
244 	static bool					chgLineFlag;
245 	static int					chgGsNameId;
246 	static bool                 chgLineOrInterBattle; //角色是换线还是跨服
247 	static bool                 interBattleTochgLine; //角色是否是从跨服战场到之前的服务器
249 	//static SeparateServerInfo* findCurServerInfoByDbName(QString DbName);
250 	//static bool isCurServerExist(QString DbName);

H:\work\source\QQ西游\3D QQ西游全套源码\QRender\QRender\Game\Hdr\QCSGamePlayMsgMap.h 46 KB H 文件 2011/5/9 11:57:34 2018/5/20 0:11:26 2018/5/20 0:11:26 1
631 QNET_MSG_MAP_ENTRY( QCSGamePlay, SMSG_PREPARE_JOIN_BATTLE, msgPreJoinBattle)
632 QNET_MSG_MAP_ENTRY( QCSGamePlay, SMSG_INST_CORPS_LIST, msgInstCorpsList)
633 //跨服进入战场
634 QNET_MSG_MAP_ENTRY( QCSGamePlay, SMSG_SIGN_INTER_SERVICE_BATTLE, msgSignInterBattle)
635 QNET_MSG_MAP_ENTRY( QCSGamePlay, SMSG_GIVEUP_SIGN_BATTLE_ACK, msgCancelSignInterBattle)

H:\work\source\QQ西游\3D QQ西游全套源码\QRender\QRender\Game\Hdr\QGameEngine.h 14 KB H 文件 2011/5/3 17:25:52 2018/5/20 0:11:26 2018/5/20 0:11:26 3
186 	QString			instServerAddr;	// Inst server address.
187 	int				instServerPort;	// Inst server listen port.
189 	//interBattle记录跨服进战场时的name、ip、port
190 	QString         InterBattleToWorldServerName;
191 	QString         InterBattleToWorldIp;
357 	QTexture*				honorTex;
358 	QTexture*				immueTex;
359 	QTexture*               dhInterBattleScoreModifyTex;        //跨服战场积分增加文字贴图
360 	QTexture*               dhInterBattleScoreFrontTex;        //跨服战场积分增加文字贴图
362 	QTexture*				underLineTex;
364 	//loginCharLvlName

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\DBCenter\DBCenter.h 8 KB H 文件 2011/5/3 17:29:12 2018/5/20 0:09:41 2018/5/20 0:09:41 1
129 	static std::map<std::string, DBAccountInfo* >						accounts_;				//记录所有的账号信息
130 	// character name to account info.
131 	static std::map<std::string, DBAccountInfo*  >						online_char_acc_map_; // 方便跨服交互，服务器名称记录在accountInfo上，[只记录在线的]
132 	static QuestionTables												question_cache_tables;
133 	// world value.

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\DBCenter\DBProxy.h 8 KB H 文件 2011/5/3 17:29:12 2018/5/20 0:09:41 2018/5/20 0:09:41 1
130 EDBExecute_result save_char_complete_ach(__int64 role_id,__int64 iUin,std::vector<char>& complete_binary);
131 EDBExecute_result save_char_ongoing_ach(__int64 role_id,__int64 iUin,std::vector<char>& ongoing_binary);
133 //跨服战场
134 EDBExecute_result fetch_battle_score(DBAction_db_fetch_char_battlescore* context);
135 EDBExecute_result save_battle_score(DBAction_save_char_battlescore* context);

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\ClSvRules.h 68 KB H 文件 2011/5/5 11:29:18 2018/5/20 0:09:41 2018/5/20 0:09:41 1
2216 };
2218 /*
2219 *	CAGE Player RULES (跨服战场)
2220 */
2221 class ClSvPlayerRulesInterServiceBattle : public ClSvPlayerRules

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\GameScriptAPI.h 32 KB H 文件 2011/5/3 17:29:34 2018/5/20 0:09:43 2018/5/20 0:09:43 2
162 // 取服务器名
163 GAME_SCRIPT_API( Sys, world_name);
165 // 设置获取跨服战场胜利的服务器信息
166 GAME_SCRIPT_API( Sys, save_fight_servers_info);
168 /**
1015 //call next
1016 GAME_SCRIPT_API( Action, call_next_action);
1018 //跨服战场相关 
1019 //add battle score
1020 GAME_SCRIPT_API( Player, add_battle_score);

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\QGameServer.h 7 KB H 文件 2011/5/3 17:29:34 2018/5/20 0:09:47 2018/5/20 0:09:47 4
28 //		return true;																												\
29 //	}
30 // 跨服战场起始坐标信息
31 struct BattleStartLoc
32 {
178 	void SendSecondPwdCode( QPlayerController* player, u_char pwd_op );
179 	void ValidateSecondPwdCode( QPlayerController* player, u_short msg_id );
181 	//跨服战场
182 	bool is_InterServiceBattleServer();						//是否是跨服战场服务器
183 	std::vector<BattleStartLoc>			force1_start_loc_;	//势力1起始坐标集合
184 	std::vector<BattleStartLoc>			force2_start_loc_;	//势力2起始坐标集合
184 	std::vector<BattleStartLoc>			force2_start_loc_;	//势力2起始坐标集合
185 	bool load_battle_start_loc(const char* filename);
186 	//跨服战场相关
187 	QString							force1_worldserver_name_;
188 	QString							force2_worldserver_name_;

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\QPlayerCharInfo.h 8 KB H 文件 2011/5/3 17:29:36 2018/5/20 0:09:47 2018/5/20 0:09:47 1
200 	bool						flag_valid_;		// Character valid flag
202 	time_t						login_time_;		// 登录时间
204 	u_short						interServiceBattle_flag_;	//是否注册跨服战场的标示  记录(dbcenter_id) 需要存盘 初始化为0
205 	//寻妖
206 	std::map<u_short, ActiveDegreesInfo>				activedegreesinfo_;		//寻妖

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\QPlayerController.h 33 KB H 文件 2011/5/3 17:29:34 2018/5/20 0:09:47 2018/5/20 0:09:47 2
1005 	Talisman				talisman_[TALISMAN_MAX];//法宝
1007 	u_char get_empty_talisman();
1009 	u_short					interServiceBattle_flag_;	//是否注册跨服战场的标示  记录(dbcenter_id) 需要存盘
1010 	int						battle_score_;			//每场跨服战场的积分
1011 	bool					can_save_battle_score_; //积分是否能存盘
1012 	int						destroyed_tower_num_;

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\GameServer\QPlayerMsgMap.h 29 KB H 文件 2011/5/6 16:40:38 2018/5/20 0:09:47 2018/5/20 0:09:47 1
629 QPLAYER_MSG_ENTRY( CMSG_TALISMAN_SKILL,				cmsg_talisman_skill			)
630 QPLAYER_MSG_ENTRY( CMSG_TALISMAN_GROWTH,			cmsg_talisman_growth		)
632 //跨服战场
633 QPLAYER_MSG_ENTRY( CMSG_SIGN_INTER_SERVICE_BATTLE,	cmsg_sign_inter_service_battle)
634 QPLAYER_MSG_ENTRY( CMSG_ENTER_INTER_SERVICE_BATTLE,	cmsg_enter_inter_service_battle)

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\ServerCommon\ClSvGlobalTypes.h 100 KB H 文件 2011/5/3 17:26:20 2018/5/20 0:09:41 2018/5/20 0:09:41 5
579 	REG_TYPE( GSI_TalismanFeed1)				//第一阶段喂养的次数
580 	REG_TYPE( GSI_TalismanFeed2)				//第一阶段喂养的次数
582 	REG_TYPE( GSI_SignInterServiceBattle_ON )	// 跨服战场报名开关
583 	REG_TYPE( GSI_InterServiceBattle_ON )		// 跨服战场开关
585 	REG_TYPE( GSI_IsInterServiceBattle)			// 是不是跨服战场 0 不是  1 是
587 	REG_TYPE( GSI_InterServiceBattleMinLevel)	// 跨服战场报名最低等级
589 	REG_TYPE( GSI_InterServiceBattleGatewayPort)			// 跨服战场gateway端口
591 	REG_TYPE( GSI_Max )
592 REG_TYPE_END( EGameServerIProp )

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\ServerCommon\QDBCenterProtocol.h 25 KB H 文件 2011/5/6 16:40:34 2018/5/20 0:09:47 2018/5/20 0:09:47 2
437 	//sdk 发送系统公告
438 	DGMSG_SEND_SYSMSG					,
440 	//跨服战场积分
441 	GDMSG_GET_BATTLE_SCORE				,	// role_id
442 	DGMSG_BATTLE_SCORE					,	// role_id  char_name  battle_score
442 	DGMSG_BATTLE_SCORE					,	// role_id  char_name  battle_score
443 	GDMSG_SAVE_BATTLE_SCORE				,	// role_id  char_name  battle_score
445 	//跨服战场 服务器信息
446 	GDMSG_GET_JOIN_BATTLE_SERVER_NAME	,
447 	DGMSG_JOIN_BATTLE_SERVER_NAME		,	// u_char result(0没有取出服务器名字 失败 ； 1 成功) ; QString force1_worldserver_name_    QString force2_worldserver_name_

H:\work\source\QQ西游\3D QQ西游全套源码\servers\servers\ServerCommon\QProtocol.h 100 KB H 文件 2011/5/6 16:40:34 2018/5/20 0:09:47 2018/5/20 0:09:47 5
1418 	SMSG_IN_FORGET_PWD_STATE		= 2627,	// 处于忘记密码状态无法进行此操作
1419 	SMSG_OUT_FORGET_PWD_STATE		= 2628,	// 已经过了忘记密码时间
1421 	CMSG_SIGN_INTER_SERVICE_BATTLE	= 2710, // 跨服战场报名
1422 	SMSG_SIGN_INTER_SERVICE_BATTLE	= 2711,	// 跨服战场报名 回馈   u_char ESignBattleRes
1423 	CMSG_ENTER_INTER_SERVICE_BATTLE	= 2712, // 进入跨服战场
1424 	SMSG_ENTER_SERVICE_BATTLE_ACK	= 2713, // 进入跨服战场 回馈	u_char ESignBattleRes
1425 	SMSG_SERVICE_BATTLE_ADDR		= 2714, // 跨服战场地址   QString:ip u_short:port
1426 	CMSG_GIVEUP_SIGN_INTER_BATTLE	= 2715, // 取消战场注册
1427 	SMSG_GIVEUP_SIGN_BATTLE_ACK		= 2716, // 取消战场注册 回馈

H:\work\source\QQ西游\[src.cool]QQ西遊\servers\DBCenter\DBCenter.h 5 KB H 文件 2010/6/22 11:20:49 2018/7/25 0:04:13 2018/7/25 0:04:13 1
80 	static std::map<std::string, AccountInfo* >							accounts_;
81 	// character name to account info.
82 	static std::map<std::string, AccountInfo*  >						online_char_acc_map_; // 方便跨服交互，服务器名称记录在accountInfo上，[只记录在线的]
83 	static QuestionTables												question_cache_tables;
84 	// world value.

H:\work\source\wxsj2\trunk\Common\DB_Struct.h 41 KB H 文件 2010/7/26 13:54:01 2018/5/3 0:39:36 2018/5/3 0:39:36 1
577 };
578 typedef struct _SKILL_DB_LOAD _SKILL_LIST;
580 //召唤兽跨服专用，不要写数据库
581 struct _Monster_Pet_DB
582 {

H:\work\source\wxsj2\trunk\Server\Server\DB\HumanDB.h 22 KB H 文件 2010/7/26 13:54:41 2018/5/3 0:45:07 2018/5/3 0:45:07 1
401 	_SETTING_DB_LOAD*				m_dbSetting ;	//设置数据
402 	_PRIVATE_INFO_DB_LOAD*			m_dbPrivateInfo;//私人信息
403 	_MONSTER_PET_DB*				m_dbMonsterPet;	//召唤兽跨服专用，不要写数据库
404 	_SOUXIA_DB_LOAD*				m_dbSouXia;		//搜侠录信息 add by gh 2010/05/15
405     _MOUNT_DB_LOAD*                 m_dbMount;      //角色的坐骑信息  [7/1/2010 陈军龙]

H:\work\source\wxsj2\trunk\Server\Server\Obj\Obj_Pet.h 20 KB H 文件 2010/7/26 13:54:59 2018/5/3 0:45:14 2018/5/3 0:45:14 1
143 	virtual VOID		InitAIObj( );
145 	const _PET_DB*		GetPetDB(VOID) const { return &m_PetDB; }
146 	//根据召唤兽当前情况初始化DB,在跨服时使用
147 	VOID				InitMonsterPetDB( _Monster_Pet_DB_Struct& oMonsterPet );
149 	//注意只有存活的对象，才有初始化技能的需要

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\cmtool\Code\BOTPLATFORM\BotInterface.h 31 KB H 文件 2008/5/27 13:54:52 2018/9/21 20:30:33 2018/9/21 20:30:33 4
21 //		2005-02-07	Victor		加入一个 GM 命令接口，使 Bot 有能力直接发出 GM
22 //								指令
23 //		2005-02-17	Victor		开始跨服务器支持，申请消息结构多了一个 GlobalID；
24 //								为使跨服务器聊天成为可能，私聊接口加入 NetID 和
25 //								GlobalID 两个参数
25 //								GlobalID 两个参数
26 //		2005-02-20	Victor		为支持跨服务器，组队消息发生变化，需要 GlobalID
27 //		2005-04-10	Victor		申请/邀请类型号发生变化，修改之
28 //		2005-04-11	Victor		强化技能接口
437 	//   加入 NetID 和 GlobalID 两个参数。根据 818.216.0004.0000 版服务器代码
438 	//   分析服务器的行为后得知，省略 NetID 时 ER 将根据玩家名字设法找到玩家，
439 	//   省略 GlobalID 将不能进行跨服务器私聊。
440 	/////////////////////////////////////////////////
441 	virtual void BotCmd_SayPrivate(LPCSTR pszMessage, LPCTSTR pszTo,

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\cmtool\Code\BOTPLATFORM\MFUI.h 11 KB H 文件 2008/5/27 13:54:53 2018/9/21 20:30:34 2018/9/21 20:30:34 3
19 //								一样得知自己的各种实时更新的数据（体力活啊）
20 //								使用 _MF_WARNING 宏控制机器人平台是否在公共频道输出信息
21 //		2005-02-17	Victor		为使跨服务器聊天成为可能，私聊接口加入 NetID 和
22 //								GlobalID 两个参数
22 //								GlobalID 两个参数
23 //		2005-02-18	Victor		为支持跨服务器切换场景，UI 需要做些额外的工作
24 //		2005-02-20	Victor		为支持跨服务器，组队消息发生变化，需要 GlobalID
25 //		2005-03-29	Victor		加入模块扫描客户端支持
26 //		2005-04-04	Victor		流式传输加入 cookie 支持

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Code\NetServer\Include\NetServerDefinition.h 7 KB H 文件 2008/5/27 13:56:10 2018/9/21 20:32:29 2018/9/21 20:32:29 2
145 };
147 //////////////////////////////////////////////////////////////////////////
148 //跨服务器切场景结构
149 struct ChangeServerData
150 {
166 };
168 //////////////////////////////////////////////////////////////////////////
169 //跨服务器消息类型
170 enum SERVERMSG_TYPE
171 {

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Code\NetServer\Include\NetWorkServer.h 11 KB H 文件 2008/5/27 13:56:10 2018/9/21 20:32:29 2018/9/21 20:32:29 5
52 	WORD m_nGameType;								//游戏类型
53 	char m_sGameOperations[128];					//战区名字
55 	CDMList < ChangeServerData* > g_List_ChangeScen;//跨服务器切场景链表
56 	CRITICAL_SECTION g_csChangeScen;				//跨服务器链表的关键区
58 protected:
59 	//////////////////////////////////////////////////////////////////////////
190 	//pCharacter:					GateServer角色基本信息结构指针
191 	//bRemove:						退出FALSE;断开TRUE
192 	//bChangeServer:				退出游戏FALSE;跨服务器TRUE
193 	//返回值:						0 = 函数处理错误; -1 = 正在退出; -2 = 角色已经退出; 1 = 成功退出
194 	BOOL RemoveCharacter(	int f_iCharacterID, 
273 	}
275 	//////////////////////////////////////////////////////////////////////////
276 	//跨服务器切换场景
277 	//////////////////////////////////////////////////////////////////////////
279 	//添加数据
294 unsigned long GetHostIPAddress();
296 ////////////////////////////////////////////////////////////////////////////
297 ////跨服务器切换场景
298 ////////////////////////////////////////////////////////////////////////////
299 //

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Code\NetServer\Include\SrvrER.h 15 KB H 文件 2008/5/27 13:56:10 2018/9/21 20:32:29 2018/9/21 20:32:29 3
68 	int m_nKey;					// 唯一标识, Mar.10.2003
70 	// liqiang [8/1/2004]
71 	int m_nRoomID;				//跨服务器切换场景入口点
73 	int m_nGlobleCharacterID;	//角色全局ID(GateServer分配)
75 	//GlobleClientID
86 	int m_authID;				//网络识别ID验证使用
87     
88 	// liqiang是否跨服务器切场景 [11/26/2004]
89 	int m_bChangeS;
89 	int m_bChangeS;
91 	// liqiang退出时,是否为跨服务器退出 [1/21/2005]
92 	BOOL m_bChangeServer;
94 	// liqiang增加计费类型 [5/31/2005]

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Publish\Include\NetServerDefinition.h 7 KB H 文件 2006/11/28 11:16:34 2018/9/21 20:32:30 2018/9/21 20:32:30 2
144 };
146 //////////////////////////////////////////////////////////////////////////
147 //跨服务器切场景结构
148 struct ChangeServerData
149 {
165 };
167 //////////////////////////////////////////////////////////////////////////
168 //跨服务器消息类型
169 enum SERVERMSG_TYPE
170 {

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Publish\Include\NetWorkServer.h 11 KB H 文件 2006/5/25 17:22:52 2018/9/21 20:32:30 2018/9/21 20:32:30 5
52 	WORD m_nGameType;								//游戏类型
53 	char m_sGameOperations[128];					//战区名字
55 	CDMList < ChangeServerData* > g_List_ChangeScen;//跨服务器切场景链表
56 	CRITICAL_SECTION g_csChangeScen;				//跨服务器链表的关键区
58 protected:
59 	//////////////////////////////////////////////////////////////////////////
190 	//pCharacter:					GateServer角色基本信息结构指针
191 	//bRemove:						退出FALSE;断开TRUE
192 	//bChangeServer:				退出游戏FALSE;跨服务器TRUE
193 	//返回值:						0 = 函数处理错误; -1 = 正在退出; -2 = 角色已经退出; 1 = 成功退出
194 	BOOL RemoveCharacter(	int f_iCharacterID, 
273 	}
275 	//////////////////////////////////////////////////////////////////////////
276 	//跨服务器切换场景
277 	//////////////////////////////////////////////////////////////////////////
279 	//添加数据
294 unsigned long GetHostIPAddress();
296 ////////////////////////////////////////////////////////////////////////////
297 ////跨服务器切换场景
298 ////////////////////////////////////////////////////////////////////////////
299 //

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\GmSDK\Publish\Include\SrvrER.h 15 KB H 文件 2006/5/25 17:22:52 2018/9/21 20:32:30 2018/9/21 20:32:30 3
68 	int m_nKey;					// 唯一标识, Mar.10.2003
70 	// liqiang [8/1/2004]
71 	int m_nRoomID;				//跨服务器切换场景入口点
73 	int m_nGlobleCharacterID;	//角色全局ID(GateServer分配)
75 	//GlobleClientID
86 	int m_authID;				//网络识别ID验证使用
87     
88 	// liqiang是否跨服务器切场景 [11/26/2004]
89 	int m_bChangeS;
89 	int m_bChangeS;
91 	// liqiang退出时,是否为跨服务器退出 [1/21/2005]
92 	BOOL m_bChangeServer;
94 	// liqiang增加计费类型 [5/31/2005]

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\easyrpg_test\er_test\Include\ERLocal.h 103 KB H 文件 2009/12/10 0:11:03 2018/9/21 20:32:33 2018/9/21 20:32:33 1
1467 	int m_nProdModulus[4]; // 4个打造系数
1468 //--------------------------------------------------------------------------
1469 // [WangXiaoye] 跨服务器并没有初始化 [2006-5-16:10-28]
1470 private:
1471 	BOOL	bChangSceneButNotInitUi;

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\easyrpg_test\er_test\Include\ERMate.h 12 KB H 文件 2008/5/27 13:58:19 2018/9/21 20:32:33 2018/9/21 20:32:33 1
49 int ERM_MateDismiss(CERObject *pObject1, CERObject *pObject2 = NULL);
51 ////////////////////////////////////////////////////////////////////////////////
52 // 处理配偶跨服务器发送来的消息
53 // pObject		:	发给谁的消息？
54 // code			:	通知码

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\easyrpg_test\er_test\Include\EROptCmd.h 27 KB H 文件 2008/5/27 13:58:19 2018/9/21 20:32:33 2018/9/21 20:32:33 9
473 	CMD_GUI_GMONLINE	= 1590,
474 	CMD_GUI_GMREPLY		= 1591,
475 	CMD_GUI_NOTIFY_SPAN_SERVER	= 1592,	// 跨服务器通知
476 	// Jun.12.2003 wubanghai
477 	CMD_GUI_ADD_E		= 1593,	// 添加技能强化效果
507 	CMD_GUI_FECHANGE	= 1611, // 更改五行 add by xufeng 8.8.2004
508 	// liqiang [8/11/2004]
509 	CMD_GUI_STARTCHANGE	= 1612,	//开始跨服务器切换场景时,需要给Client发送开始切换.
510 	CMD_GUI_ENDCHANGE	= 1613,	//结束跨服务器切换场景时,需要给Client发送结束切换.
511 	// liqiang [9/2/2004]
512 	CMD_GUI_ERRORCHANGE	= 1614,	//切换服务器失败，需要给Client发送
529 	//	MASTER_QUERY_MASTER,	// 查自己的师徒关系
530 	//	MASTER_QUERY_PRENTICE,	// 查自己的师徒关系
531 	//	MASTER_ASK,				// 跨服子命令: 请求
532 	//	MASTER_ACCEPT,			// 同意
533 	//	MASTER_REJECT,			// 拒绝
764 	MASTER_QUERY_MASTER,	// 查自己的师徒关系
765 	MASTER_QUERY_PRENTICE,	// 查自己的师徒关系
766 	MASTER_ASK,				// 跨服子命令: 请求
767 	MASTER_ACCEPT,			// 同意
768 	MASTER_REJECT,			// 拒绝
781 	MATE_DISMISS,			// 配偶分手
782 } MATE_NOTIFY;
784 //跨服消息
785 enum _SERVER_MESSAGE_
786 {
790 	SERVER_CHAT_NATIONAL,				// 国家频道，聊天信息
791 	SERVER_WHOIS,						// 全服务器角色查询
792 	SERVER_FACTION,						// 跨服务器的帮派操作
793 	SERVER_CHAT,						// 跨服务器聊天
794 	SERVER_CHAT_WORLD,					// 世界频道
794 	SERVER_CHAT_WORLD,					// 世界频道
795 	SERVER_MSG,                         //跨服务器消息
796 	// 2005-06-06 added by Victor.
797 	SERVER_BROADCAST_WORLD,				// 世界广播

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\easyrpg_test\er_test\Include\ERRandom.h 50 KB H 文件 2008/5/27 13:58:20 2018/9/21 20:32:33 2018/9/21 20:32:33 1
1139 //判断场景是否打开(通过别名查找)
1140 BOOL IsARoomOpen( const char* f_ARoom );
1142 //发送跨服务器切换场景
1143 BOOL SendChangeScen( const char* f_Room, int f_NetID, int f_RoomID , int x=-1 , int y =-1 );
1145 // liqiang属性报警表 [10/23/2004]

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\easyrpg_test\er_test\Include\ERUser.h 16 KB H 文件 2008/5/27 13:58:20 2018/9/21 20:32:33 2018/9/21 20:32:33 2
101 	int m_nKey;					// 唯一标识, Mar.10.2003（作废）
103 	//  [8/1/2004]
104 	int m_nRoomID;				//跨服务器切换场景入口点
106 	int m_nGlobleCharacterID;	//角色全局ID(GateServer分配)
108 	//GlobleClientID
118 	// liqiang [11/10/2004]
119 	int m_authID;				//网路识别ID验证使用
121 	// liqiang是否跨服务器切场景 [11/26/2004]
122 	int m_bChangeS;
124 	int m_bChangeServer;

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\Include\ERLocal.h 103 KB H 文件 2008/5/27 13:58:19 2018/9/21 20:32:33 2018/9/21 20:32:33 1
1467 	int m_nProdModulus[4]; // 4个打造系数
1468 //--------------------------------------------------------------------------
1469 // [WangXiaoye] 跨服务器并没有初始化 [2006-5-16:10-28]
1470 private:
1471 	BOOL	bChangSceneButNotInitUi;

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\Include\ERMate.h 12 KB H 文件 2008/5/27 13:58:19 2018/9/21 20:32:33 2018/9/21 20:32:33 1
49 int ERM_MateDismiss(CERObject *pObject1, CERObject *pObject2 = NULL);
51 ////////////////////////////////////////////////////////////////////////////////
52 // 处理配偶跨服务器发送来的消息
53 // pObject		:	发给谁的消息？
54 // code			:	通知码

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\Include\EROptCmd.h 27 KB H 文件 2008/5/27 13:58:19 2018/9/21 20:32:33 2018/9/21 20:32:33 9
473 	CMD_GUI_GMONLINE	= 1590,
474 	CMD_GUI_GMREPLY		= 1591,
475 	CMD_GUI_NOTIFY_SPAN_SERVER	= 1592,	// 跨服务器通知
476 	// Jun.12.2003 wubanghai
477 	CMD_GUI_ADD_E		= 1593,	// 添加技能强化效果
507 	CMD_GUI_FECHANGE	= 1611, // 更改五行 add by xufeng 8.8.2004
508 	// liqiang [8/11/2004]
509 	CMD_GUI_STARTCHANGE	= 1612,	//开始跨服务器切换场景时,需要给Client发送开始切换.
510 	CMD_GUI_ENDCHANGE	= 1613,	//结束跨服务器切换场景时,需要给Client发送结束切换.
511 	// liqiang [9/2/2004]
512 	CMD_GUI_ERRORCHANGE	= 1614,	//切换服务器失败，需要给Client发送
529 	//	MASTER_QUERY_MASTER,	// 查自己的师徒关系
530 	//	MASTER_QUERY_PRENTICE,	// 查自己的师徒关系
531 	//	MASTER_ASK,				// 跨服子命令: 请求
532 	//	MASTER_ACCEPT,			// 同意
533 	//	MASTER_REJECT,			// 拒绝
764 	MASTER_QUERY_MASTER,	// 查自己的师徒关系
765 	MASTER_QUERY_PRENTICE,	// 查自己的师徒关系
766 	MASTER_ASK,				// 跨服子命令: 请求
767 	MASTER_ACCEPT,			// 同意
768 	MASTER_REJECT,			// 拒绝
781 	MATE_DISMISS,			// 配偶分手
782 } MATE_NOTIFY;
784 //跨服消息
785 enum _SERVER_MESSAGE_
786 {
790 	SERVER_CHAT_NATIONAL,				// 国家频道，聊天信息
791 	SERVER_WHOIS,						// 全服务器角色查询
792 	SERVER_FACTION,						// 跨服务器的帮派操作
793 	SERVER_CHAT,						// 跨服务器聊天
794 	SERVER_CHAT_WORLD,					// 世界频道
794 	SERVER_CHAT_WORLD,					// 世界频道
795 	SERVER_MSG,                         //跨服务器消息
796 	// 2005-06-06 added by Victor.
797 	SERVER_BROADCAST_WORLD,				// 世界广播

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\Include\ERRandom.h 50 KB H 文件 2008/5/27 13:58:20 2018/9/21 20:32:33 2018/9/21 20:32:33 1
1139 //判断场景是否打开(通过别名查找)
1140 BOOL IsARoomOpen( const char* f_ARoom );
1142 //发送跨服务器切换场景
1143 BOOL SendChangeScen( const char* f_Room, int f_NetID, int f_RoomID , int x=-1 , int y =-1 );
1145 // liqiang属性报警表 [10/23/2004]

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\ER\Include\ERUser.h 16 KB H 文件 2008/5/27 13:58:20 2018/9/21 20:32:33 2018/9/21 20:32:33 2
101 	int m_nKey;					// 唯一标识, Mar.10.2003（作废）
103 	//  [8/1/2004]
104 	int m_nRoomID;				//跨服务器切换场景入口点
106 	int m_nGlobleCharacterID;	//角色全局ID(GateServer分配)
108 	//GlobleClientID
118 	// liqiang [11/10/2004]
119 	int m_authID;				//网路识别ID验证使用
121 	// liqiang是否跨服务器切场景 [11/26/2004]
122 	int m_bChangeS;
124 	int m_bChangeServer;

H:\work\source\凤舞天骄\[src.cool]凤舞天骄\Prj_TJ2\Code\Server\GS\Include\Player.h 2 KB H 文件 2008/5/27 13:58:24 2018/9/21 20:32:34 2018/9/21 20:32:34 1
40 	void AIChooseEnemy();
42 private:
43 	DWORD	m_dwGlobalID;		//玩家的全局ID。跨服务器操作时需要
45 	// Jan 13th , EL.AHong.F 添加职业和头像
46 	BYTE	m_byProfession;				// 人物职业

H:\work\source\剑网3\剑网3完整源代码\Source\Common\SO3World\Src\KPlayer.h 43 KB H 文件 2010/11/10 21:57:16 2018/9/26 20:26:41 2018/9/26 20:26:41 5
55 	gsWaitForPermit,		    // 登陆时正在等待GC的确认
56     gsWaitForRoleData,		    // 登录时正在等待Goddess的回包
57     gsWaitForLoginLoading,      // 登录(或跨服)流程中等待客户端载入
58 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入
60 	gsPlaying,				    // 正在游戏中
58 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入
60 	gsPlaying,				    // 正在游戏中
62 	gsSearchMap,			    // 正在搜索地图,不一定需要跨服
63     gsWaitForTransmissionSave,  // 保存数据准备跨服
64 	gsWaitForTransmissionGuid,	// 跨服时正在等待目标服务器返回GUID
66 	gsDeleting,				    // 客户端断线引起的延时登出
68 	gsTotal
659     int     m_nLastSyncLocalTeamMemberPosX;
660     int     m_nLastSyncLocalTeamMemberPosY;
661     // 跨服同步数据的上一次同步数值
662     int     m_nLastSyncGlobalTeamLifePercent;
663     int     m_nLastSyncGlobalTeamManaPercent;

H:\work\source\剑网3\剑网3完整源代码\Source\Server\SO3GameCenter\KMapCopy.h 4 KB H 文件 2009/12/16 6:13:56 2018/9/26 20:26:40 2018/9/26 20:26:40 2
15 // 关于副本的Owner问题:
16 // 1. 玩家换地图进入副本
17 //    1.1 不跨服的话,在SearchMap时即可切换Owner,或者在CreateMapRespond的时候
18 //    1.2 跨服的话,在ConfirmLogin的时候处理Owner切换
19 // 2. 玩家在副本中上线可能发生队长切换,这个就在组队代码中做了
20 // 3. 队长切换,这个需要在组队代码中处理,注意,队长切换在登录的时候也可能发生

H:\work\source\剑网3\剑网3完整源代码\Source\Server\SO3GameCenter\KRole.h 4 KB H 文件 2009/12/16 6:13:56 2018/9/26 20:26:42 2018/9/26 20:26:42 1
24 	rsLG_WaitForPermit,
25 	rsLG_WaitForLogin,
27 	//CG = ChangeGameserver，跨服流程相关状态
28 	rsCG_WaitForCreateMap,
29 	rsCG_WaitForPlayerData,

H:\work\source\剑网3\剑网3完整源代码\Source\Server\SO3GameServer\Test\TestProject\Robot\SO3World\Global.h 12 KB H 文件 2007/4/23 20:32:50 2018/9/26 20:26:36 2018/9/26 20:26:36 1
376 #define DEFAULT_GRAVITY			(8 * 512 / GAME_FPS / GAME_FPS)	//单位：点/帧^2
377 #define LOGOUT_WAITING_TIME		(GAME_FPS * 20)	//玩家下线等待20秒
378 #define DISCONNECT_TIME			(GAME_FPS * 4)	//跨服断线等待时间
379 #define LOGIN_TIME_OUT			(GAME_FPS * 200)	//登陆超时时间
381 //新旧方位转换表

H:\work\source\剑网3\剑网3完整源代码\Source\Server\SO3GameServer\Test\TestProject\Robot\SO3World\GS_Client_Protocol.h 60 KB H 文件 2007/4/23 20:32:50 2018/9/26 20:26:36 2018/9/26 20:26:36 4
24     g2c_frame_signal,				// 帧间隔
25     g2c_terrain_test,               // 测试协议,用于检测 服务端<==>客户端 障碍信息的一致性
27     // 登陆＆跨服＆踢号的相关协议
28     g2c_sync_player_base_info,	    // 登录时同步玩家数据
29     g2c_sync_quest_state,			// 登录时同步任务状态
30     g2c_sync_quest_list,			// 登陆时同步任务列表
32     g2c_kick_self_out,				// 踢号通知
33     g2c_change_game_server,			// 跨服通知
35     // 同步相关协议
36     g2c_sync_region_player,	        // 将一个Region中的所有玩家同步到客户端
205 {
206     client_gs_connection_begin = 0,
208     // 登陆＆跨服＆踢号相关协议
209     c2g_apply_player_data,			// 登录时请求玩家数据
210     c2g_ack_player_data,			// 确认同步玩家数据完成
356 {
358 };
360 //跨服通知
361 struct G2C_CHANGE_GAME_SERVER : DOWNWARDS_PROTOCOL_HEADER
362 {

H:\work\source\剑网3\剑网3完整源代码\Source\Server\SO3GameServer\Test\TestProject\Robot\SO3World\KPlayer.h 10 KB H 文件 2007/4/23 20:32:50 2018/9/26 20:26:41 2018/9/26 20:26:41 5
31 	gsSyncData,				//正在向客户端同步角色数据
33 	gsPlaying,				//正在游戏中
35 	gsSearchMap,			//正在搜索地图,不一定需要跨服
36 	gsTransferData,			//跨服时正在传输角色数据
38 	gsLogouting,			//客户端主动请求的延时登出,连接仍然在
39 	gsDeleting,				//客户端断线引起的延时登出
38 	gsLogouting,			//客户端主动请求的延时登出,连接仍然在
39 	gsDeleting,				//客户端断线引起的延时登出
40 	gsWaitForDisconnect,	//跨服时源服务器等待客户端主动断线
42 	gsTotal
43 };
108 	//玩家游戏状态
109 	GAME_STATUS			m_eGameStatus;
110 	//计时器,一共4个地方使用:断线/主动登出/跨服时等待客户端主动断线/登陆时
111 	int					m_nTimer;
112 	
204 	//<----------------------- 聊天接口 --------------------------------
206 private:
207 	//跨服时保存旧坐标,供恢复用
208 	struct KOldPosition
209 	{

H:\work\source\剑网3\剑网3完整源代码\Source\Tools\GameDesignerEditor\AtlKG3DEngineProxy\IndeHeader\SO3World\KFellowship.h 13 KB H 文件 2009/7/17 18:10:22 2018/9/26 20:26:37 2018/9/26 20:26:37 1
26 // 的 Cache。如果一个玩家的好友数据同时存在于两个 GameServer 进程，
27 // 则有可能发生数据覆盖的错误。不过我们的游戏保证了一个玩家不会
28 // 同时在两个 GameServer 进程出现。但是在跨服务和玩家退出游戏的时
29 // 候必须要小心处理。
30 //

H:\work\source\剑网3\剑网3完整源代码\Source\Tools\GameDesignerEditor\AtlKG3DEngineProxy\IndeSource\SO3World\KPlayer.h 37 KB H 文件 2009/7/17 18:14:28 2018/9/26 20:26:41 2018/9/26 20:26:41 6
48 	gsWaitForPermit,		    // 登陆时正在等待GC的确认
49     gsWaitForRoleData,		    // 登录时正在等待Goddess的回包
50     gsWaitForLoginLoading,      // 登录(或跨服)流程中等待客户端载入
51 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入
53 	gsPlaying,				    // 正在游戏中
51 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入
53 	gsPlaying,				    // 正在游戏中
55 	gsSearchMap,			    // 正在搜索地图,不一定需要跨服
56     gsSaveDataForTransmission,  // 保存数据准备跨服
57 	gsTransmission,			    // 跨服时正在传输角色数据
59 	gsDeleting,				    // 客户端断线引起的延时登出
59 	gsDeleting,				    // 客户端断线引起的延时登出
60 	gsWaitForDisconnect,	    // 跨服时源服务器等待客户端主动断线
62 	gsTotal
63 };
602     int     m_nLastSyncLocalPartyMemberPosX;
603     int     m_nLastSyncLocalPartyMemberPosY;
604     // 跨服同步数据的上一次同步数值
605     int     m_nLastSyncGlobalPartyLifePercent;
606     int     m_nLastSyncGlobalPartyManaPercent;

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\ChatDefine.h 20 KB H 文件 2013/12/12 11:35:58 2018/7/30 11:42:08 2018/7/30 11:42:08 2
353     //购买幻兽礼包广播
354     BT_391  = 391,
356     //跨服封神战
357     BT_392 = 392,
357     BT_392 = 392,
359     //跨服仙道会传闻
360     BT_393 = 393,
362     BT_394 = 394,//幸运轮盘开启

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\GameDefine.h 57 KB H 文件 2013/12/12 11:35:58 2018/7/30 11:42:08 2018/7/30 11:42:08 9
62     SCENE_KICK_OUT,                        //场景有问题,T人下线
63     GET_PROXY_ERROR,                       //获取发送代理错误
64     CROSS_SCENE_CLOSE,                     //跨服场景关闭
65     EXCEED_IP_LIMIT,                       //超过了最大IP数
66     UNKNOWN_REASON                         //未知原因
504     PROPERTY_PET_EQ_LEVEL_TITLE,//宠物装备目标等级1024
505     PROPERTY_PET_TEMP_CAMP,     //宠物临时阵营1025
506     PROPERTY_CROSS_CAMP,        //跨服阵营1026
507     PROPERTY_CROSS_ARENA_IDX,   //跨服竞技场的排名1027
509 	//其它属性
510 	PROPERTY_OTHER = 2000,
976     ITEM_FLOW_RECORD_GOLD_VIP_ACTIVITY_OBTAIN       = 224,  //黄金vip活动奖励
977     ITEM_FLOW_RECORD_GOLD_VIP_LEVEP_UP_LOSS         = 225,  //升级黄金vip失去
978     ITEM_FLOW_RECORD_CROSS_XIAN_DAO_HUI_OBTAIN      = 226,  //跨服仙道会获得
979     ITEM_FLOW_RECORD_CROSS_XIAN_DAO_HUI_TOP3_OBTAIN = 227,  //跨服仙道会前三共享奖励
980     ITEM_FLOW_RECORD_UPDATE_GOD_DEMON_LEVEL_LOSS    = 228,  //提升神魔等级消耗
981     ITEM_FLOW_RECORD_ENHANCE_GOD_DEMON_LELEL_LOSS   = 229,  //进化神魔等级消耗
998 	ITEM_FLOW_RECORD_EQUIPMENT_SMELT_LOSS           = 248,  //装备熔锻失去
999 	ITEM_FLOW_RECORD_SHEN_BING_LOSS			        = 249,	//神兵升级消耗
1000 	ITEM_FLOW_RECORD_CROSS_ARENA_OBTAIN             = 250,  //获得跨服竞技场奖励
1001 	ITEM_FLOW_RECORD_ADD_FAIRY_EQUIP_LUCK_LOSS      = 251,  //增加仙器祝福值失去
1002 	ITEM_FLOW_RECORD_ADD_FAIRY_EQUIP_EXP_LOSS       = 252,  //增加仙器化翼经验失去
1077     CREDIT_SEVEN_LOGIN,			   		   //七天登录
1078     CREDIT_FUND,						   //投资计划
1079     CREDIT_CROSS_MVM_BATTLE,               //跨服先道会
1080     CREDIT_CROSS_CITY,                     //攻城战奖励
1081 	CREDIT_FROM_TOTAL
1132 enum CONFFICIENT_TYPE
1133 {
1134 	CONFFICIENT_TYPE_XDH = 0,	//跨服仙道会减系数
1135 	CONFFICIENT_TYPE_ZYZ,		//跨服阵营战减系数
1136 	MAX_CONFFICIENT_TYPE		//荣誉值减系数类型总数
1137 };

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\GameErrno.h 54 KB H 文件 2013/12/12 11:35:58 2018/7/30 11:42:08 2018/7/30 11:42:08 1
534 #define ERR_RING_ARENA_PLAYER_HAS_BET                          17103   //已经压过某玩家
535 #define ERR_RING_ARENA_BET_MONEY_FAIL                          17104   //押注的铜钱不对
536 #define ERR_CROSS_OP_NOT_SUPPORT                               18001   //跨服场景中不能进行此操作
537 #define ERR_HUASHEN_ID_ERROR                                   18100   //化身：部位id错误
538 #define ERR_HUASHEN_LEVEL_ERROR                                18101   //化身：部位已经达最高等级

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\GameStruct_Human.h 6 KB H 文件 2013/12/12 11:35:58 2018/7/30 11:42:08 2018/7/30 11:42:08 1
81     ADD_SHEN_BING_PROPERTY,				// 神兵加成
82     ADD_LONG_MAI_PROPERTY,              // 龙脉加成
83     ADD_CROSS_ARENA_PROPERTY,           // 跨服竞技场加成
84     ADD_HUASHEN_NIEPAN_PROPERTY,        // 化身涅磐属性加成
85     ADD_MODULE_MAX_FLAG

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\GameTimer.h 2 KB H 文件 2013/8/5 11:25:45 2018/7/30 11:42:08 2018/7/30 11:42:08 1
19 const uint32 GAME_SCENE_STAT_TIMER_ID             = 30002;  //场景统计定时器
20 const uint32 GAME_SCENE_SAVE_TIMER_ID             = 30003;  //场景玩家保存定时器
21 const uint32 GAME_LOAD_CROSS_INFO_TIMER_ID        = 30004;  //加载跨服匹配数据
23 //WorldServer相关, 40000~49999
24 const uint32 WORLD_SESSION_TICK_TIMER_ID          = 40001;  //世界服Session Tick定时器

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\ScheduleDefine.h 7 KB H 文件 2013/12/12 11:35:58 2018/7/30 11:42:08 2018/7/30 11:42:08 4
40 const uint32 OPEN_GROUP_BUY_ID                  = 10045; //开启周末团购
41 const uint32 CLOSE_GROUP_BUY_ID                 = 10046; //关闭周末团购
42 const uint32 CROSS_1V1_OPEN_SCHEDULE_ID         = 10060; //开启跨服1v1
43 const uint32 CROSS_1V1_CLOSE_SCHEDULE_ID        = 10061; //关闭跨服1v1
44 const uint32 ACTIVITY_REFRESH_MONSTER_ID        = 10062; //节日活动刷出野外怪物
44 const uint32 ACTIVITY_REFRESH_MONSTER_ID        = 10062; //节日活动刷出野外怪物
45 const uint32 CROSS_1V1_OPEN_CAMP_COPY_ID        = 10063; //开启跨服阵营战
46 const uint32 CROSS_1V1_CLOSE_CAMP_COPY_ID       = 10064; //关闭跨服阵营战
47 const uint32 CROSS_1V1_LOAD_CROSS_ARENA_ID      = 10065; //cross从DBC获取排行榜数据
48 const uint32 CROSS_1V1_CLEAN_CROSS_ARENA_ID     = 10066; //cross从DBC获取排行榜数据

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\Config\GlobalConfig.h 7 KB H 文件 2013/12/12 11:35:56 2018/7/30 11:42:08 2018/7/30 11:42:08 2
106     uint32 MVMWinScore;             //3v3胜方获得积分
107     uint32 MVMLossScore;            //3v3负方获得积分
108     uint32 crossTvTMapId;           //跨服1v1地图id
109     uint32 crossTvTCopyId;          //跨服1v1副本id
110     uint32 CopyPoolInitSize;        //各个副本的初始化大小
111     uint32 CopyPoolIncrSize;        //各个副本扩充大小

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\Config\SrvConfig.h 6 KB H 文件 2013/9/16 11:24:38 2018/7/30 11:42:08 2018/7/30 11:42:08 3
167 	uint32    openServerTime;   //开服时间
168 	int32     deployMode;       //部署模式(0为单实例,>0为多实例)
169 	int32     serverType;       //服务器类型,0表示普通服务,1表示跨服服务
170 	WorldInfo worldInfo;        //世界信息
171 	uint32    sid;              //服ID
171 	uint32    sid;              //服ID
172 	uint32    areaId;           //区域ID
173 	uint32    crossId;          //跨服ID
174 	string    crossDBAddr;      //跨服数据库地址
175 	LogData   logData;          //日志配置项数据
177 	map<uint32, DBCServerData>   dbcServerDataMap;    //数据服配置项数据

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\Protocol\Opcodes.h 151 KB H 文件 2013/12/12 11:35:57 2018/7/30 11:42:08 2018/7/30 11:42:08 14
790     const uint16 PWUpdateRegisterLinkNumberNotify = 20036;   //更新注册link number
791     const uint16 PWNewActivityNofity              = 20038;   //新活动通知
792     const uint16 CGAddCrossServerReq              = 20037;   //打开跨服请求
793     const uint16 CGOpenCrossSceneReq              = 20039;   //打开跨服场景
794     const uint16 CGCloseCrossSceneReq             = 20041;   //关闭跨服场景
795     const uint16 CGRemoveCrossServerReq           = 20043;   //移除某个Server
796     const uint16 GGPingServerReq                  = 20044;   //ping某个服
797     const uint16 GGPingServerRsp                  = 20045;   //ping某个响应
798     const uint16 GGReportServerInfoNotify         = 20046;   //报告服务器状态
799     const uint16 GGCrossServerStartNotify         = 20047;   //跨服进程启动通知
800     const uint16 GGCrossServerStopNotify          = 20048;   //跨服服务器停止通知
801     const uint16 GGOpenCross1v1Req                = 20049;   //开启跨服1v1
802     const uint16 GGCloseCross1v1Req               = 20050;   //关闭跨服1v1
803     const uint16 GGReportSrvVersionReq            = 20051;   //上报服务器版本
804     const uint16 GGKickOutAllSrvPlayer            = 20052;   //踢掉该服务器上面的所有人
1799     const uint16 WCRingArenaRankRewardNotify    = 19105;   //活动结束奖励结果
1800     const uint16 WCRingArenaRankNotify          = 17104;   //擂台排行通知
1801     //跨服1V1模块(26 message)
1802     const uint16 CGCross1v1MatchingReq           = 18000;   //开始跨服1v1匹配请求
1803     const uint16 GCCross1v1MatchingRsp           = 18001;   //跨服1v1匹配返回
1804     const uint16 GCCross1v1MatchingErrRsp        = 18003;   //3v3竞技场匹配失败返回
1805     const uint16 GCCross1v1StatusNotify          = 18005;   //竞技场匹配终止
1815     const uint16 CGCross1v1GetBounesReq          = 18020;   //获取众神竞技场奖励请求
1816     const uint16 CGCross1v1LeaveAthleticsReq     = 18023;   //匹配中离开3v3竞技场,不受强退惩罚
1817     const uint16 CGCross1v1ServerDetailReq       = 18027;   //跨服服务器说明
1818     const uint16 GCCross1v1ServerDetailRsp       = 18028;   //跨服服务器说明返回
1819     const uint16 CGCross1v1GetLastRankListReq    = 18029;   //获取上场战报
1820     const uint16 GCCross1v1GetLastRankListRsp    = 18030;   //获取上场战报信息返回
1819     const uint16 CGCross1v1GetLastRankListReq    = 18029;   //获取上场战报
1820     const uint16 GCCross1v1GetLastRankListRsp    = 18030;   //获取上场战报信息返回
1821     const uint16 GWCross1v1RankResultNotify      = 18031;   //跨服1v1结果通知
1822     const uint16 CWCross1v1GetTop3ShareRewardReq = 18033;   //获取前三奖励
1822     const uint16 CWCross1v1GetTop3ShareRewardReq = 18033;   //获取前三奖励
1823     const uint16 WCCross1v1GetTop3ShareRewardRsp = 18035;   //跨服前三奖励返回
1824     const uint16 WDCross1v1GetPlayerInfoReq      = 18036;   //世界服向数据服获得前X名玩家信息
1825     const uint16 DWCross1v1GetPlayerInfoRsp      = 18037;   //获得前X名玩家信息返回

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\Protocol\ProtocolMessage.h 1,650 KB H 文件 2013/12/12 11:35:57 2018/7/30 11:42:08 2018/7/30 11:42:08 24
1106         uint32 honorTitle;
1107         uint32 foot;                        //脚印
1108         uint8 crossCamp;                   //跨服阵营
1109         uint8 crossArenaLevel;             //跨服竞技场排名
1111         int byteSize()
1112         {
1454         uint8 kingLevel;
1455         uint8 winCity;                     //是否为攻城战胜利仙盟成员 0，不是， 1，是
1456         uint8 crossArenaLevel;             //跨服竞技场排名
1457         uint32 footprintStyle;              //脚印类型
1459         int byteSize()
9861         return w;
9862     }
9864     //跨服玩家信息镜像信息
9865     struct Cross1v1PlayerMirrorInfo 
9866     {
10463         //帝王索引
10464         uint8 kingIndex;
10465         //跨服竞技场索引
10466         uint16 crossArenaIndex;
10468         int byteSize()
34210         }
34211     };
34213     //打开跨服请求
34214     struct CGAddCrossServerReq : public IceUtilEx::Message
34215     {
34250         }
34251     };
34253     //打开跨服场景
34254     struct CGOpenCrossSceneReq : public IceUtilEx::Message
34255     {
34282         }
34283     };
34285     //关闭跨服场景
34286     struct CGCloseCrossSceneReq : public IceUtilEx::Message
34287     {
34400     struct GGReportServerInfoNotify : public IceUtilEx::Message
34401     {
34402         //跨服服务器信息
34403         CrossServerInfo crossServerInfo;
34405         int byteSize()
34420         }
34421     };
34423     //跨服进程启动通知
34424     struct GGCrossServerStartNotify : public IceUtilEx::Message
34425     {
34424     struct GGCrossServerStartNotify : public IceUtilEx::Message
34425     {
34426         //跨服中心版本号
34427         string version;
34429         int byteSize()
34444         }
34445     };
34447     //跨服服务器停止通知
34448     struct GGCrossServerStopNotify : public IceUtilEx::Message
34449     {
34462         }
34463     };
34465     //开启跨服1v1
34466     struct GGOpenCross1v1Req : public IceUtilEx::Message
34467     {
34480         }
34481     };
34483     //关闭跨服1v1
34484     struct GGCloseCross1v1Req : public IceUtilEx::Message
34485     {
34623     struct GWReportServerInfoNotify : public IceUtilEx::Message
34624     {
34625         //跨服信息列表
34626         vector<CrossServerInfo> crossSrvInfoList;
34628         int byteSize()
64543     };
64545     /**
64546     * ● 跨服1V1模块(26 message)
64547     */
64547     */
64549     //开始跨服1v1匹配请求
64550     struct CGCross1v1MatchingReq : public IceUtilEx::Message
64551     {
64564         }
64565     };
64567     //跨服1v1匹配返回
64568     struct GCCross1v1MatchingRsp : public IceUtilEx::Message
64569     {
65102         }
65103     };
65105     //跨服服务器说明
65106     struct CGCross1v1ServerDetailReq : public IceUtilEx::Message
65107     {
65120         }
65121     };
65123     //跨服服务器说明返回
65124     struct GCCross1v1ServerDetailRsp : public IceUtilEx::Message
65125     {
65124     struct GCCross1v1ServerDetailRsp : public IceUtilEx::Message
65125     {
65126         //跨服服务器列表
65127         vector<CrossServerInfo> crossServerInfoList;
65128         //下次开启时间倒计时
65242         }
65243     };
65245     //跨服1v1结果通知
65246     struct GWCross1v1RankResultNotify : public IceUtilEx::Message
65247     {
65246     struct GWCross1v1RankResultNotify : public IceUtilEx::Message
65247     {
65248         //跨服1v1结果列表
65249         vector<RankPlayerMinInfo> rankPlayerMinInfoList;
65250         //前三列表
65314         }
65315     };
65317     //跨服前三奖励返回
65318     struct WCCross1v1GetTop3ShareRewardRsp : public IceUtilEx::Message
65319     {

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\Common\Proxy\ProxyManager.h 7 KB H 文件 2013/11/4 11:01:59 2018/7/30 11:42:08 2018/7/30 11:42:08 13
106 	bool   getPublishProxy(string topicName, CDP::AdminCtrlPrx& proxy);
108 public:
109 	//注册跨服Proxy
110 	ProxyManager* regCrossProxy(int32 sid, string platformName, string srvName, string regIp, int32 regPort);
110 	ProxyManager* regCrossProxy(int32 sid, string platformName, string srvName, string regIp, int32 regPort);
112 	//去注册跨服Proxy
113 	void          unregCrossProxy(int32 sid);
113 	void          unregCrossProxy(int32 sid);
115 	//去注册所有跨服Proxy
116 	void          unregAllCrossProxy();
116 	void          unregAllCrossProxy();
118 	//获取跨服Proxy
119 	ProxyManager* getCrossProxy(int32 id);
121 	//获取该proxy的服ID
148 	//获取该服的注册表端口
149 	int32         getRegPort();
151 	//全部打开跨服场景
152 	void          openCrossSceneNotify(uint32 sceneId);
152 	void          openCrossSceneNotify(uint32 sceneId);
154 	//单服打开跨服场景
155 	void          openCrossSceneNotify(int32 sid, uint32 sceneId);
155 	void          openCrossSceneNotify(int32 sid, uint32 sceneId);
157 	//全部关闭跨服场景
158 	void          closeCrossSceneNotify(uint32 sceneId);
158 	void          closeCrossSceneNotify(uint32 sceneId);
160 	//全部关闭跨服场景
161 	void          closeCrossSceneNotify(int32 sid, uint32 sceneId);
161 	void          closeCrossSceneNotify(int32 sid, uint32 sceneId);
163 	//检测跨服中所有服的生死
164 	void          pingCrossServer();
164 	void          pingCrossServer();
166 	//检测跨服服务器返回
167 	void          pingCrossServerRsp(int32 sid);
169 	//设置上次ping返回时间
207 	int32                          _srvId;          //服务实例id
208 	string                         _strSrvId;       //字符串服务实例id
209 	bool                           _isCross;        //是否跨服
210 	int32                          _lastPingTime;   //上次接收到ping响应的时间,跨服的时候才有用
211 	int32                          _sid;            //服id
212 	string                         _platformName;   //平台名
228 	CDP::LogInterfacePrx           _logProxy;       //日志服代理
230 	Mutex                          _crossMutex;
231 	std::map<int32, ProxyManager*> _crossManagerMap;//跨服管理器
232 	string                         _regIP;
233 	int32                          _regPort;

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\DBCServer\Core\DBCManager.h 19 KB H 文件 2013/12/12 11:35:45 2018/7/30 11:42:08 2018/7/30 11:42:08 1
159     virtual void saveActivityInfo_async(const ::CDP::AMD_PlayerCached_saveActivityInfoPtr&, const ::CDP::ActivityInfoT&, const ::Ice::Current& = ::Ice::Current());
160     virtual void loadPhpConsumeRankInfos_async(const ::CDP::AMD_PlayerCached_loadPhpConsumeRankInfosPtr&, const ::Ice::Current& = ::Ice::Current());
161     //跨服
162     virtual void loadCrossInfo_async(const ::CDP::AMD_PlayerCached_loadCrossInfoPtr&, const ::Ice::Current& = ::Ice::Current());
163     virtual void saveServerInfo_async(const ::CDP::AMD_PlayerCached_saveServerInfoPtr&, const ::CDP::ServerInfo&, const ::Ice::Current& = ::Ice::Current());

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\DBCServer\Core\Instance.h 3 KB H 文件 2013/8/12 11:14:22 2018/7/30 11:42:08 2018/7/30 11:42:08 1
33 extern GameDatabaseWorkerPool  g_RankDatabase;         //排行榜数据库
34 extern GameDatabaseWorkerPool  g_OthersDatabase;       //其它数据库：礼包
35 extern CrossDatabaseWorkerPool g_CrossDatabase;        //跨服数据库
36 extern DBCManagerPtr           g_pDBCManager;          //DBC管理器
37 extern ProxyManager*           g_pProxyManager;        //Ice代理管理器

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\DBCServer\Core\Rank\RankManager.h 10 KB H 文件 2013/11/18 10:45:17 2018/7/30 11:42:08 2018/7/30 11:42:08 1
163 	void  handleScheduleUpdateNotify(const CDP::Message& msg);    //排行榜更新
164 	void  handleGetRankSMDetail(const CDP::Message& msg);         //获取上榜神魔详细信息
166 	void  handleCross1v1GetPlayerInfo(const CDP::Message& msg);   //跨服竞技场玩家列表获得
168 private:
169 	//初始化消息注册表

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\GameServer\Extends\Instance.h 6 KB H 文件 2013/12/12 11:35:54 2018/7/30 11:42:10 2018/7/30 11:42:10 1
84 extern FourImageConfig              g_FourImageConfig;              //四象星谱配置
85 extern DuJiePropertyConfig          g_DujiePropertyConfig;          //渡劫系统关卡加属性配置
86 extern CrossServerManager*          g_pCrossServerManager;          //跨服信息管理器
87 extern RobotStrengthConfig          g_RobotStrengthConfig;          //怪物强化属性管理器
88 extern GodDemonConfig               g_godDemonConfig;               //神魔变配置管理

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\GameServer\Extends\GameEngine\Scene\Scene.h 15 KB H 文件 2013/12/12 11:35:50 2018/7/30 11:42:10 2018/7/30 11:42:10 3
77 	uint32       getSceneType();
78 	bool         isKicking();
79 	void         pingCrossServer(int64 curTime);   //在这里检查跨服中各个服的状态
81 	// 副本相关
82 	COPY_TYPE    getCopyType();
288 	//场景定时器
289 	CMyTimer		  _sceneTimer;	   //场景逻辑定时器
290 	CMyTimer          _crossPingTimer; //跨服ping定时器
292 	//场景各种管理器
293 	SessionManager*   _sessionManager;  //场景session管理器
299 	DuelManager*      _duelManager;     //切磋管理器
300 	NpcShopManager*   _npcShopManager;  //npc神秘商店
301 	CrossTvTManager*  _crossTvTManager; //跨服1v1管理器
303 	IceUtilEx::RandomGenerator* _heightRandGen;
304 	IceUtilEx::RandomGenerator* _widthRandGen;

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\GameServer\Extends\GameEngine\Scene\SceneThread.h 4 KB H 文件 2013/9/2 11:10:21 2018/7/30 11:42:10 2018/7/30 11:42:10 3
63 	//添加跨线程切换场景消息
64 	void            addChangeSceneMsg(const CDP::Message& message);
65 	//添加加载跨服数据列表
66 	void            addLoadCrossInfoRspMsg(const CDP::CrossInfoList& crossInfoList);
67 	//ice调用,接收来自其他服务的调用
93 	uint32              _tickUserTimerId;     //tick定时器id
94 	uint32              _saveUserTimerId;     //场景玩家保存定时器id
95 	uint32              _loadCrossInfoUserTimerID; //加载跨服数据定时器id
96 	uint32              _cross1v1UserTimerID; //跨服1v1启停定时id
97 	uint32              _statUserTimerId;     //统计定时器id
98 	uint32              _cachedSceneTimerId;  //副本实例缓存定时器id

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\GameServer\Extends\GameEngine\Session\GameSession.h 39 KB H 文件 2013/12/12 11:35:46 2018/7/30 11:42:10 2018/7/30 11:42:10 3
60 	void        logoutInSwitch();              //跨进程切换场景登录
61 	void        dealStuckHuman(Scene* newScene);
63 	void        setCrossProxy(ProxyManager* crossProxy); //设置跨服代理
64 	ProxyManager* getCrossProxy();             //获取跨服proxy
65 	int32       getSID();                      //获取该服ID
66 	void        setStatus(int32 status);       //设置Session状态
626 	void handleLearnMarrySkill(const CDP::Message& msg);
627 	void handleAddMarrySkillExp(const CDP::Message& msg);
629 	//=======跨服1v1模块=====================
630 	void handleCrossTvTMatching(const CDP::Message& msg);
631 	void handleCrossTvTCancel(const CDP::Message& msg);

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\WorldServer\Extends\Copy\MVMAthleticsManager.h 10 KB H 文件 2013/8/26 11:28:28 2018/7/30 11:42:11 2018/7/30 11:42:11 9
185 	//关闭天神竞技场
186 	void   closeMvMAthletics();
187 	//管理跨服1v1图标用
188 	void   openCross1v1();
189 	void   closeCross1v1();
270 	//增加奖励
271 	void   addBounes(PlayerID_t playerId, uint32 rank);
273 	//增加跨服先道会奖励
274 	void   addCrossBounes(PlayerID_t playerId, uint32 rank);
274 	void   addCrossBounes(PlayerID_t playerId, uint32 rank);
276 	//添加跨服前3所在服的奖励
277 	//void   addCrossTop3Bounes(PlayerID_t playerId);
279 	//在线奖励通知
279 	//在线奖励通知
280 	void   onlineBounesNotify();
282 	//在线跨服先道会奖励通知
283 	void   onlineCrossBounesNotify();
285 	//序列化数据到string
325 	PlayerMatchedMap            _playerLastMatchedMap; //玩家已经匹配队列
327 	vector<Proto::PlayerMirrorInfo> _top3List;      //前三名镜像
328 	vector<Proto::PlayerMirrorInfo> _crossTop3List; //跨服战前三名镜像
330 	vector<Proto::RankPlayerMinInfo> _lastCrossRankList; //上场战报
330 	vector<Proto::RankPlayerMinInfo> _lastCrossRankList; //上场战报
331 	BounesMap        _crossBounesMap;         //跨服奖励
332 	BounesFlagMap    _crossTop3BounesFlagMap; //跨服前三奖励标记表
333 	bool             _crossTvTStatus;         //跨服1v1开启状态
334 	int32            _crossTvTOpenTime;       //跨服1v1开启时间
335 };
337 #endif

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\WorldServer\Extends\Player\PlayerManager.h 9 KB H 文件 2013/12/12 11:36:00 2018/7/30 11:42:11 2018/7/30 11:42:11 5
246     //计算前5荣誉值玩家列表
247     void               calcTopHonourList();
249     //通知跨服服务器
250     void               notifyInfo2CrossCenter();
252     //获取本服的战力评估
252     //获取本服的战力评估
253     uint32             getPowerEvaluation();
255     //设置跨服状态
256     void               setCrossStatus(bool status);
257     bool               getCrossStatus();
256     void               setCrossStatus(bool status);
257     bool               getCrossStatus();
259     //更新各个跨服服务器的状态
260     void               updateCrossServerInfo(vector<Proto::CrossServerInfo>& crossServerInfoList);
261     vector<Proto::CrossServerInfo> getCrossServerInfo(int32 sid);
280     void  calculateReachLV();
282 protected:
283     bool               _crossStatus;              //跨服状态
284     PlayerIDMap        _playerIdMap;              //玩家ID -> Player表
285 	PlayerRoleNameMap  _playerRoleNameMap;        //玩家角色名 -> Player表
299     bool               _isOpenCampPowerCalc;      //是否开始计算阵营战斗力
300     bool               _isCampPowerFitForChange;  //阵营战斗力是否可以开启转换
302     map<int32, Proto::CrossServerInfo> _crossServerMap; //跨服信息列表
303 };
305 #endif

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Components\WorldServer\Extends\Session\WorldSession.h 35 KB H 文件 2013/12/12 11:35:59 2018/7/30 11:42:11 2018/7/30 11:42:11 1
481     void handeGroupBuy(const CDP::Message& msg);
482 	
483 	//===============跨服先道会模块==========================
484     void handleCross1v1ServerDetailReq(const CDP::Message& msg);       //获取服务器信息
485     void handleCross1v1GetBounesReq(const CDP::Message& msg);          //登录时查看奖励

H:\work\source\古剑奇侠\[src.cool]古剑奇侠\Server\Code\CoreDevPlatform\src\Tools\CrossMatchTool\CrossMatch.h 3 KB H 文件 2013/9/2 11:10:16 2018/7/30 11:42:18 2018/7/30 11:42:18 3
39 };
41 const int MinServersInBigPlatform = 12;
43 //跨服匹配
44 class CrossMatch
45 {
75     Database* db;
77     std::map<int32, ServerList>* allServers;    //所有服务器表
78     std::map<int32, NodeList>*   allCrossNode;  //所有跨服表
79     
80     std::map<int32, ServerList>  oldGroupList;  //那些被合服的服务器集合
86     MatchNode currentOldMatchNode[3]; //老服的 0 1 2
87     MatchNode currentNewMatchNode[3]; //新服的 0 1 2
89     int32 currentCrossId; //当前的跨服id
90     std::vector<int32> closedCrossList;
92     int32 currentMaxCrossId;

H:\work\source\大唐豪侠\datang client full code\GAME\GacShell\CGameFov.h 25 KB H 文件 2005/7/21 21:46:36 2018/9/18 17:10:50 2018/9/18 17:10:50 1
371 	// 玩家更换装备，Follower对象
372 	unsigned int OnPlayerChangeEquipment(const void* pData,unsigned uSize);
373 	// 准备跨服务器
374 	unsigned int OnPrepareTransfer(const void* pData,unsigned uSize);
376 	unsigned int OnNetCheck(const void* pData,unsigned uSize);

H:\work\source\大唐豪侠\datang client full code\GAME\GasShell\CGameScene.h 18 KB H 文件 2005/7/21 21:46:38 2018/9/18 17:10:50 2018/9/18 17:10:50 1
19 class CGameServer;
20 class CChatServer;
21 // 作为目标Scene接受到跨服务器事件传来的玩家信息，超时时会删除接受到的玩家信息
22 class CGasReceivedPlayerInfoJob
23 {

H:\work\source\大唐豪侠\datang client full code\GAME\GasShell\CPlayerInfoServer.h 1 KB H 文件 2005/6/17 12:29:16 2018/9/18 17:10:50 2018/9/18 17:10:50 1
5 #include "CTimer.h"
6 #include "GameAsyncDBProtocol.h"
8 //<summary>该类用于在登录流程和跨服务器流程中暂存主角信息。该类主角的完整游戏属性。</summary>
9 //<remarks></remarks>
10 class CGasFovInfo;

H:\work\source\大唐豪侠\datang client full code\GAME\GasShell\CPlayerServer.h 37 KB H 文件 2005/7/21 21:46:40 2018/9/18 17:10:51 2018/9/18 17:10:51 1
740 	// 存储任务信息中的变长部分
741 	bool	WriteTaskInfoExt(char** ppBuffer);
743 	// 载入主角信息，可能是从数据库读取，也可能是跨服务器引起的
744 	bool	LoadInfo(CObjectCreateInfo& ocs);
745 	// 载入基本游戏逻辑中的变长数据

H:\work\source\大神传\[src.cool]大神传\yl_32\LibQrt\Include\Protocol\BishopGameServerProtocol.h 22 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:11:46 2018/7/27 0:11:46 1
47     G2B_PLAYER_ENTER_GAME,                  // 玩家进入游戏, ref : tagEnterGame
48     G2B_PLAYER_LEAVE_GAME,                  // 玩家离开游戏, ref : tagLeaveGame
49     G2B_PRE_TRANSFER_SERVER,                // 跨服通知(这个玩家即将跨到我这里来了), ref : tagRegisterAccount (新: + RELAY_DATA + tagPermitPlayerExchange)
50     G2B_EXT_POINTS_OPERATION,               // 请求附加点操作, ref : tagChangeExtPoint
51     G2B_ADD_PLAYER_TO_BLACK_LIST,           // 将指定帐号加入黑名单, ref : TDenyAccount

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\gameworld\onlinegamemodule\crosssv\kcrosssvctrl.h 2 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:03 2018/7/27 0:12:03 1
31 	KPlayer& m_rcPlayer;	// 所属玩家
33 private:
34 	std::map<KITEM_INDEX, INT> m_mapDropItems;		// 跨服时掉落的道具记录
36 private:
37 	BOOL GetDropItemsDataSize(SIZE_T& uUsedSize);

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\gameworld\onlinegamemodule\item2\kbasproptbl.h 19 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:03 2018/7/27 0:12:03 1
142 struct KBASICPROP_MEDICINE : KBASICPROP_OTHER					// 药品基本属性
143 {
144 	INT			nCanUseInBZone;									// 能否在跨服战场使用
145 	KBPT_MED_ATTRIB		aryAttrib[emMEDICINE_COUNT_ATTRIB];		// 药品的属性
146 };

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\gameworld\onlinegamemodule\item2\kitem.h 21 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:03 2018/7/27 0:12:03 2
233 	BOOL			m_bTemporary;								// 是否临时装备 (临时装备不存盘)
234 	BOOL			m_bInvalid;									// 装备失效标志，该标志仅对穿在身上的装备有效，其余情况均不用考虑失效
235 	BOOL			m_bCanUseInBZone;							// 跨服能否使用标志
236 	CHAR			m_szFullName[256];							// 道具的全名（包括后缀名）
237 	CHAR			m_szCustom[KD_ITEM_MAX_CUSTOM_LENGTH + 1];	// 自定义字符串类型
336 	BOOL	IsStackable(VOID) CONST;																		// 是否可叠放物品
337 	BOOL	IsInvalid(VOID) CONST;																			// 装备是否失效
338 	BOOL	CanUseInBZone(VOID) CONST				{ return m_bCanUseInBZone; }								// 装备是否在跨服战场中失效
339 	BOOL	IsUseRandom(VOID) CONST					{ return IsUseRandom(GetIndex()); }						// 该道具是否使用随机属性（关系到GenInfo存档意义是否魔法属性索引）
340 	INT		GetStarLevel(VOID) CONST				{ return m_nStarLevel; }								// 获得道具星级

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\gameworld\onlinegamemodule\item2\kplayeritem.h 29 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:03 2018/7/27 0:12:03 2
34 	emKEARN_NPC_DROP,		// 怪物提落
35 	emKEARN_PICK,			// 玩家拾取
36 	emKEARN_EXCHANGE_BACK,	// 跨服归还
37 	emKEARN_GIVE,			// Give给予
38 	emKEARN_STALL_SELL,		// 贩卖获得
102 	emKADDITEM_PET_EQUIP,	// 宠物装备
103 	emKADDITEM_PET_ITEM,	// 宠物道具
104 	emKADDITEM_BATTLE_ZONE,	// 跨服道具
106 	emKADDITEM_BYSCRIPT = 100, // 脚本增加
107 	emKADDITEM_BYSCRIPT_PEEL_EQUIP,		//装备剥离

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\gameworld\onlinegameworld\kplayerbaseprocess.h 5 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:04 2018/7/27 0:12:04 1
47 	BOOL ProcessBeginning(KPlayer* pPlayer, LPCBYTE pData, UINT uDataLen); // 玩家登录状态
48 	BOOL ProcessPlaying(KPlayer* pPlayer, LPCBYTE pData, UINT uDataLen); // 玩家游戏状态
49 	BOOL ProcessExchanging(KPlayer* pPlayer, LPCBYTE pData, UINT uDataLen); // 玩家跨服状态
51 	// -------------------------------On Receiving Protocols Begin----------------------------
52 	BOOL PtcSyncEnd(KPlayer* pPlayer, LPCBYTE pbData, UINT uDataLen);

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\config\gamedef.h 29 KB H 文件 2016/10/19 13:21:11 2018/7/27 0:12:05 2018/7/27 0:12:05 2
49 #define KD_PLAYER_ID_MASK	0x00000000	// 玩家 ID掩码
50 #define KD_DOODAD_ID_MASK	0xC0000000	// 小物件 ID掩码
51 #define BZONE_PLAYER_ID_MASK	0x40000000	// 战区跨服玩家Id掩码
53 #define IS_NPC(dwId)		((dwId & KD_ID_MASK) == KD_NPC_ID_MASK)
54 #define IS_PLAYER(dwId)		((dwId & KD_ID_MASK) == KD_PLAYER_ID_MASK || (dwId & KD_ID_MASK) == BZONE_PLAYER_ID_MASK)
53 #define IS_NPC(dwId)		((dwId & KD_ID_MASK) == KD_NPC_ID_MASK)
54 #define IS_PLAYER(dwId)		((dwId & KD_ID_MASK) == KD_PLAYER_ID_MASK || (dwId & KD_ID_MASK) == BZONE_PLAYER_ID_MASK)
55 #define IS_BZONE_PLAYER(dwId)		((dwId & KD_ID_MASK) == BZONE_PLAYER_ID_MASK) // 是否漫游玩家（战区内跨服状态）
56 #define IS_DOODAD(dwId)		((dwId & KD_ID_MASK) == KD_DOODAD_ID_MASK)
57 //////////////////////////////////////////////////////////////////////////

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\config\kcharacterdef.h 21 KB H 文件 2016/10/19 13:21:26 2018/7/27 0:12:05 2018/7/27 0:12:05 3
405 	// End
406 	emCHARACTER_FACTION_BATTLE_RANK,                            // 门派竞技排名
407 	emCHARACTER_GLOBAL_BATTLE_SCORE,                            // 跨服战场积分
408 	emKCHARACTER_TASK_MAP_SAVED_END,							// 存盘变量结束ID
410 	// UnSaved，以下非存盘变量枚举可变更，但要同步修改脚本
421 	emKCHARACTER_CHAT_GLOBAL_SPEAKER,
422 	emCHARACTER_FACTION_BATTLE_RANK,                            // 门派竞技排名
423 	emCHARACTER_GLOBAL_BATTLE_SCORE,                            // 跨服战场积分
424 };
425 // 配置需要同步给他人（周围玩家）的变量，若修改需修改协议版本
481 	emKCHARACTER_CTRL_PLAYER_BLADE,		// 变身
483 	emKCHARACTER_CTRL_GEM,		//宝石
485 	emKCHARACTER_CTRL_CROSS_SV,		// 跨服相关
487 	emKCHARACTER_CTRL_ARTIFACT,		//神器
489 	emKCHARACTER_CTRL_PLAYER_ESCORT,	// 修仙

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\gclogicbase\kgcplayercommon.h 3 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:05 2018/7/27 0:12:05 1
32 {
33 	emKGCPLAYER_TASK_DWORD_RANK,		// 水平
34 	emKGCPLAYER_TASK_DWORD_SOURCE_ID,		// 源服务器玩家Id（仅跨服有效）
36 	//emKGCPLAYER_TASK_DWORD_SYSMAILID,	// 最近一次收到的系统邮件ID
37 	//emKGCPLAYER_TASK_DWORD_MAILLOCK,	// 锁住的邮件

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\onlinegamemodule\qplayerteam.h 4 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:05 2018/7/27 0:12:05 1
80 	int     m_nLastSyncLocalTeamMemberPosX;
81 	int     m_nLastSyncLocalTeamMemberPosY;
82 	// 跨服同步数据的上一次同步数值
83 	int     m_nLastSyncGlobalTeamLifePercent;
84 	int     m_nLastSyncGlobalTeamManaPercent;

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\onlinegameworld\kbaseprotocol.h 13 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:05 2018/7/27 0:12:05 1
52 	emPLAYERBASE_S2C_PING,					// 回ping
53 	emKPBP_S2C_FRAME_SIGNAL,		// 帧同步信号
54 	emPLAYERBASE_S2C_CHANGE_SERVER,			// 跨服通知
56 	emKPBP_S2C_SYNC_SELF,		// 场景同步 自己位置状态
57 	emKPBP_S2C_SYNC_LEAVE, // 场景同步 sobj离开场景

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\onlinegameworld\kplayer.h 6 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:05 2018/7/27 0:12:05 6
22 	gsWaitForPermit,		    // 登陆时正在等待GC的确认 2
23 	gsWaitForRoleData,		    // 登录时正在等待Goddess的回包 3
24 	gsWaitForLoginLoading,      // 登录(或跨服)流程中等待客户端载入 4
25 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入 5
27 	gsPlaying,				    // 正在游戏中 6
25 	gsWaitForNewMapLoading,     // 切换地图过程中等待客户端载入 5
27 	gsPlaying,				    // 正在游戏中 6
29 	gsSearchMap,			    // 正在搜索地图,不一定需要跨服 7
30 	gsWaitForTransmissionSave,  // 保存数据准备跨服 8
31 	gsWaitForTransmissionGuid,	// 跨服时正在等待目标服务器返回GUID  9 
33 	gsWaitForBZoneTransferSave, // 战区跨服保存 10 
35 	gsDeleting,				    // 客户端断线引起的延时登出 11
37 };
121 	DWORD m_dwKinMasterId;
122 	BYTE m_byIsKinMaster;
124 	INT				m_nTimer; // 跨服等闲置状态计时器
125 public:
126 	//场景对象距离过远时 走近再出场景对象对话框，这里记录走路停止后 需要延迟对话的场景对象ID

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\serverbase\protocol\Relay_GS_Protocol.h 68 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:09 2018/7/27 0:12:09 15
243     s2r_achievement_global_announce_request,
245     s2r_designation_global_announce_request,
247 	// ---------------- 跨服战场相关 --------------------------------------
248 	s2r_bzone_transfer_request,
249 	s2r_bzone_return_request,
251 	s2r_get_multi_award_request,
252 	s2r_get_crosssv_exdata_request,
254 	// ---------------- 跨服组队相关 --------------------------------------
255 	s2r_create_overall_team_request,		// 创建跨服队伍
256 	s2r_join_overall_team_request,
257 	s2r_leave_overall_team_request,
509 	r2s_get_server_record_respond,
510 	r2s_get_all_purchase_buy_respond,
512 	// ---------------------   跨服组队相关   -----------------------------
513 	r2s_sync_overall_teams,
514 	r2s_sync_overall_teamops_result,
641 	BOOL        bToThisServer; // 是否在本服创建地图
642 };
644 // 玩家跨服务器,源服务器发出跨服请求(附带角色基本数据)
645 struct S2R_TRANSFER_PLAYER_REQUEST : INTERNAL_PROTOCOL_HEADER
646 {
656     KRoleBaseInfo   RoleBaseInfo;
657 };
659 // 玩家跨服返回原服务器
660 struct S2R_BZONE_RETURN_REQUEST : INTERNAL_PROTOCOL_HEADER
661 {
677 	DWORD dwRoleId;
678 };
680 // 玩家跨服务器,源服务器发出跨服请求(附带角色基本数据)
681 struct S2R_BZONE_TRANSFER_REQUEST : INTERNAL_PROTOCOL_HEADER
682 {
688 	BYTE			byRoleData[0];
689 };
691 // 玩家跨服时,目标服务器的响应消息
692 struct S2R_TRANSFER_PLAYER_RESPOND : INTERNAL_PROTOCOL_HEADER
693 {
1617     int         nBattleFieldSide;
1618 };
1620 // 玩家跨服务器,GameCenter转发源服务器发出的跨服请求(附带角色基本数据)
1621 struct R2S_TRANSFER_PLAYER_REQUEST : INTERNAL_PROTOCOL_HEADER
1622 {
1639 	KRoleBaseInfo   BaseInfo;
1640 };
1642 // 玩家跨服时,GameCenter转发目标服务器的响应消息
1643 struct R2S_TRANSFER_PLAYER_RESPOND : INTERNAL_PROTOCOL_HEADER
1644 {
2544 	DWORD dwGold;
2545 };
2547 //----------------------------跨服组队相关-----------------------------------
2548 struct S2R_CREATE_OVERALL_TEAM_REQUEST : public INTERNAL_PROTOCOL_HEADER
2549 {
2667 	BYTE byOnline;
2668 };
2670 // 跨服请求
2671 struct R2S_MULTI_TRANS_REQUEST : IDENTITY_HEADER
2672 {

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\include\serverbase\protocol\RelayMasterProtocol.h 9 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:09 2018/7/27 0:12:09 8
38 	r2m_sync_role_data,
40 	r2m_bzone_protocol_end,
42 	// 跨服组队协议
43 	r2m_overall_queue_protocol_begin,
43 	r2m_overall_queue_protocol_begin,
45 	r2m_overall_create_team_request,			// 申请创建跨服队伍
46 	r2m_overall_join_team_request,
47 	r2m_overall_leave_team_request,
78 	m2r_bzone_return_request,
80 	m2r_bzone_protocol_end,
82 	// 跨服排队相关
83 	m2r_overall_queue_protocol_begin,
83 	m2r_overall_queue_protocol_begin,
85 	m2r_sync_multi_teams,		// 同步跨服组队信息
86 	m2r_sync_teamops_result,
87 	m2r_sync_player_overall_team,
138 	BYTE byExData[0];
139 };
141 // 玩家跨服时,目标服务器的响应消息
142 struct R2M_TRANSFER_PLAYER_RESPOND : IDENTITY_HEADER
143 {
160 	BYTE    byData[];
161 };
163 // -------------------- 跨服组队协议 --------------------
165 // 创建队伍
166 struct R2M_OVERALL_CREATE_TEAM_REQUEST : IDENTITY_HEADER
356 	KRoleBaseInfo   BaseInfo;
357 };
359 // 玩家跨服时,GameCenter转发目标服务器的响应消息
360 struct M2R_TRANSFER_PLAYER_RESPOND : IDENTITY_HEADER
361 {
367 	GUID		Guid;
368 };
370 // 玩家跨服时,GameCenter转发目标服务器的响应消息
371 struct R2M_BZONE_RETURN_RESPOND : IDENTITY_HEADER
372 {

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\server\coordinator2\KRole.h 4 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:10 2018/7/27 0:12:10 1
19 	rsLG_WaitForPermit,
20 	rsLG_WaitForLogin,
22 	//CG = ChangeGameserver，跨服流程相关状态
23 	rsCG_WaitForCreateMap,
24 	rsCG_WaitForPlayerData,

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\server\coordinator2\MapCopy.h 4 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:10 2018/7/27 0:12:10 2
12 // 关于副本的Owner问题:
13 // 1. 玩家换地图进入副本
14 //    1.1 不跨服的话,在SearchMap时即可切换Owner,或者在CreateMapRespond的时候
15 //    1.2 跨服的话,在ConfirmLogin的时候处理Owner切换
16 // 2. 玩家在副本中上线可能发生队长切换,这个就在组队代码中做了
17 // 3. 队长切换,这个需要在组队代码中处理,注意,队长切换在登录的时候也可能发生

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\server\coordinator2\overallqueue\kqueuedef.h 2 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:10 2018/7/27 0:12:10 1
34 	std::list<KOVERALL_MEMBER> listMembers;
35 };
38 // 玩家跨服过来所需要的信息
39 struct KCROSS_SV_ROLEINFO
40 {

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\server\coordinator2\overallqueue\kqueuemaster.h 3 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:10 2018/7/27 0:12:10 2
65 	MAP_OVERALL_TEAMS m_mapAllTeams;
67 	std::map<DWORD, INT> m_mapJoinIndex;	// <nCombinedIdx, nInstanceMapId> 玩家报名的索引
69 	std::map<DWORD, KCROSS_SV_ROLEINFO> m_mapCrossSvInfos;		// 跨服信息 <nCombinedIdx, 跨服信息>
71 public:
72 	INT GetInstanceMapCopyIdx(INT nConnIdx, DWORD dwRoleId);

H:\work\source\大神传\[src.cool]大神传\yl_32\sourcecode\server\coordinator2\overallqueue\kqueueslave.h 2 KB H 文件 2016/2/23 2:04:58 2018/7/27 0:12:10 2018/7/27 0:12:10 1
37 	BOOL OnStartMissionRemoteRequest(BYTE* pbyData, size_t uDataLen);
39 public:
41 	// 申请创建跨服队伍
42 	BOOL DoCreateOverallTeamRequest(INT nPlayerId, LPCTSTR szPlayerName, BYTE byPlayerLevel,  BYTE byPlayerSex, INT nFightScore, INT nMapId, INT nRequireFightScore);
44 	// 申请加入

H:\work\source\屠龙\[src.cool]屠龙OL源码\back-end__TL\qzserver\world\WorldData\User.h 9 KB H 文件 2011/12/15 16:51:17 2012/5/9 8:57:31 2012/5/9 8:57:31 1
13 	US_NONE = 0 ,		//空
14 	US_HOLDUSERDATA ,	//拥有当前玩家的档案信息
15 	US_CHANGESCENE,		//跨服务器切换场景
16 	US_NORMAL ,			//玩家正在游戏中，一切正常
17 	US_OFFLINE ,		//玩家处于断线状态中

H:\work\source\幻想学园\[src.cool]幻想学园\su-p\include\summer\common\nmsgnpc.h 12 KB H 文件 2008/8/11 10:24:17 2018/9/25 17:39:18 2018/9/25 17:39:18 1
406 		REBIRTH,		//转生
407 		LEARNPETSKILL,	//宠物技能学习
408 		LUARENEW,		//脚本更新, nValueX是否跨服务器更新0:跨>0不跨, nValueY脚本文件名长度
409 		REDUCEENDURE,	//减耐久度
410 		LEVELUP,		//升级

H:\work\source\幻想物语\xwzg1\xwzgServerSource\MsgServer\MSGSERVER\MAPGROUPKERNEL\Network\MsgItem.h 7 KB H 文件 2011/2/22 13:40:48 2018/8/1 19:40:59 2018/8/1 19:40:59 2
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
103 };
105 class CMsgItem : public CNetMsg  

H:\work\source\幻想物语\xwzg1\xwzgServerSource\MsgServer\MSGSERVER\WORLDKERNEL\NETWORK2\MsgItem.h 7 KB H 文件 2011/2/22 13:40:42 2018/8/1 19:40:59 2018/8/1 19:40:59 2
100 		ITEMACT_BOOTH_BUYEUDE			=109,
101 		ITEMACT_BOOTH_CHGEUDE			=110,
102 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
103 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
105 };
107 class CMsgItem : public world_kernel::CNetMsg  

H:\work\source\幻想物语\xwzg1\xwzgServerSource\RelationServer\MsgItem.h 7 KB H 文件 2011/2/23 16:12:30 2018/8/1 19:40:59 2018/8/1 19:40:59 1
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 };
104 class CMsgItem : public CNetMsg  

H:\work\source\征三国\征三国\Common\CenterGameMessage.h 52 KB H 文件 2014/6/12 19:29:46 2018/7/1 11:27:49 2018/7/1 11:27:49 1
61     S2S_NOTIYANTIADDICTIONTIMEINFO,         // 通知游戏服务器反沉迷的阶段时间
63     GS2GS_BANSPEAK,                         // 禁言
64     GS2GS_CALLPALYER,                       // 跨服拉人
65     CS2GS_CREATETEAM,                       // 创建队伍
67     GS2CS_DRAWFROMPLATFORM_QUERY,         // 领取东西请求

H:\work\source\征三国\征三国\Common\GlobalDef.h 147 KB H 文件 2014/6/18 16:14:47 2018/7/1 11:27:50 2018/7/1 11:27:50 1
844     TeamMaxManipleCount = 4,		//一个团4个小队
845     TeamUpdateInterval = 2000,		//队员信息2秒刷新一次
846     TeamUpdateToCenter = 5000,      //为了缓解跨服同步压力,队员信息5秒同步一次
847     TeamSelfUpdate = 100000,        //队伍创建后每60秒检查一次是否还有效
849     ReleaseSpaceTime = 1000,    

H:\work\source\征三国\征三国\Common\MessageDefine.h 379 KB H 文件 2014/6/23 11:19:54 2018/7/1 11:27:50 2018/7/1 11:27:50 1
7542     {
7543         Result_Success = 0,     // 成功
7544         Result_Fail,            // 不在线,跨服, 或者不在有效范围内 ,都失败
7545     };
7547     uint8 chAssignResult;

H:\work\source\征三国\征三国\Contrib\MeCommon\Include\MapConfig.h 19 KB H 文件 2013/10/16 23:17:06 2018/7/1 11:28:16 2018/7/1 11:28:16 1
144             EPKM_Challenge_PK   =  8,    // 个人擂台地图
145             EPKM_Contend_PK     =  9,    // 争夺战PK
146             EPKM_CrossServer_PK =  10,   // 跨服PK战
147             EPKM_WorldBattle_PK =  11,	 // 世界战场PK模式
149             EPKM_End = 0xF,

H:\work\source\征三国\征三国\Server\Common\GraphicCodeCheck.h 8 KB H 文件 2013/4/28 21:54:53 2018/7/1 11:28:20 2018/7/1 11:28:20 1
25     ECheckState state;
26     uint32      dwFightStatusTime; // 战斗状态时间
27     uint32      onMapTime;         // 在地图的时间 以后要做跨服同步
28     uint32      m_dwSendCheckTime; // 图片发送到客户端时间
29 };

H:\work\source\征三国\征三国\Server\Common\TeammanagerEx.h 12 KB H 文件 2013/4/28 21:54:53 2018/7/1 11:28:20 2018/7/1 11:28:20 1
166     uint32 m_dwNextUpdateSelfTime;                              // 检查队伍时间
167     uint32 m_dwStopUpdateTeamMemberTime;                        // 间隔多少时间停止更新队员信息
168     uint32 m_dwSessionId;                                       // 跨服间使用的sessionid
169     bool m_bCorps;                                              // 是否是团
170     uint8 m_nAssignModeType;                                    // 当前队伍的分配模式

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Server\MsgServer_Npc_new\MSGSERVER\MAPGROUPKERNEL\Network\MsgItem.h 7 KB H 文件 2011/2/22 13:40:48 2018/8/16 0:57:29 2018/8/16 0:57:29 2
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
103 };
105 class CMsgItem : public CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Server\MsgServer_Npc_new\MSGSERVER\WORLDKERNEL\NETWORK2\MsgItem.h 7 KB H 文件 2011/2/22 13:40:42 2018/8/16 0:57:30 2018/8/16 0:57:30 2
100 		ITEMACT_BOOTH_BUYEUDE			=109,
101 		ITEMACT_BOOTH_CHGEUDE			=110,
102 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
103 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
105 };
107 class CMsgItem : public world_kernel::CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Server\reServer\MsgItem.h 7 KB H 文件 2011/2/23 16:12:30 2018/8/16 0:57:30 2018/8/16 0:57:30 1
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 };
104 class CMsgItem : public CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_gateway\MSGSERVER\MAPGROUPKERNEL\Network\MsgItem.h 7 KB H 文件 2011/2/22 13:40:48 2018/8/16 0:57:45 2018/8/16 0:57:45 2
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
103 };
105 class CMsgItem : public CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_gateway\MSGSERVER\WORLDKERNEL\NETWORK2\MsgItem.h 7 KB H 文件 2011/2/22 13:40:42 2018/8/16 0:57:46 2018/8/16 0:57:46 2
100 		ITEMACT_BOOTH_BUYEUDE			=109,
101 		ITEMACT_BOOTH_CHGEUDE			=110,
102 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
103 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
105 };
107 class CMsgItem : public world_kernel::CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_log\MSGSERVER\MAPGROUPKERNEL\Network\MsgItem.h 7 KB H 文件 2011/2/22 13:40:48 2018/8/16 0:57:47 2018/8/16 0:57:47 2
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
103 };
105 class CMsgItem : public CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_log\MSGSERVER\WORLDKERNEL\NETWORK2\MsgItem.h 7 KB H 文件 2011/2/22 13:40:42 2018/8/16 0:57:47 2018/8/16 0:57:47 2
100 		ITEMACT_BOOTH_BUYEUDE			=109,
101 		ITEMACT_BOOTH_CHGEUDE			=110,
102 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
103 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
105 };
107 class CMsgItem : public world_kernel::CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_new\MSGSERVER\MAPGROUPKERNEL\Network\MsgItem.h 7 KB H 文件 2011/8/3 10:43:16 2018/8/16 0:57:48 2018/8/16 0:57:48 2
99 		ITEMACT_BOOTH_BUYEUDE			=109,
100 		ITEMACT_BOOTH_CHGEUDE			=110,
101 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
102 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
103 };
105 class CMsgItem : public CNetMsg  

H:\work\source\御剑江湖\[src.cool]御剑江湖\yjjh\Toolz\MsgServer_new\MSGSERVER\WORLDKERNEL\NETWORK2\MsgItem.h 7 KB H 文件 2011/2/22 13:40:42 2018/8/16 0:57:49 2018/8/16 0:57:49 2
100 		ITEMACT_BOOTH_BUYEUDE			=109,
101 		ITEMACT_BOOTH_CHGEUDE			=110,
102 		ITEMACT_QUERYEUDEMONINFO		=111,///跨服查询宠物信息
103 		ITEMACT_QUERYITEMINFO			=112,///跨服查询道具信息
105 };
107 class CMsgItem : public world_kernel::CNetMsg  

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameDataRelation.h 17 KB H 文件 2013/3/9 12:56:32 2018/9/13 20:28:00 2018/9/13 20:28:00 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
916 	
917 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
919 	/* 跨服副本组队 */
920 	ut_id_room		m_nSignUpID;
921 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameDataStructGuild.h 5 KB H 文件 2013/3/9 12:56:33 2018/9/13 20:28:00 2018/9/13 20:28:00 1
45 	int32		m_nStrength;		
46 	int32		m_nShiMing;
48 	// 跨服联赛信息 [11/9/2012 sunlei]
49 	int32       m_nMLeagueTopIndex;
50 	int32       m_nMLeagueWinTimes;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/9 12:56:37 2018/9/13 20:28:00 2018/9/13 20:28:00 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
70 	STT_XINSHOULIBAO,							//新手礼包

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameScriptFunctionMySelf.h 20 KB H 文件 2013/3/9 12:56:55 2018/9/13 20:28:03 2018/9/13 20:28:03 1
324 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
325 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
327 	//退出跨服关卡
328 	int32			ExitRoom(LuaPlus::LuaState *state);
330 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameTableData.h 129 KB H 文件 2013/3/9 12:57:07 2018/9/13 20:28:03 2018/9/13 20:28:03 1
2784 	int32 m_nActivePoint;       //星座名称	
2785 };
2787 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2788 #define TABLE_WORLD_NAME	(1017)
2789 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\GameTableDefine.h 16 KB H 文件 2013/3/9 12:57:07 2018/9/13 20:28:03 2018/9/13 20:28:03 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/9 12:58:00 2018/9/13 20:28:04 2018/9/13 20:28:04 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\Guild.h 37 KB H 文件 2013/3/9 12:58:51 2018/9/13 20:28:05 2018/9/13 20:28:05 1
1059 	BOOL GuildBusSkillConsumeGuildResource(int32 nSkillID, int32 nType);
1060 	
1061 	// 跨服联赛比赛开始倒计时 [2/4/2013 sunlei]
1062 	void SetLeagueMatchStartCD(int32 nCDTime);
1063 	int32 GetLeagueMatchStartCD();

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\GuildCenter.h 4 KB H 文件 2013/3/9 12:58:52 2018/9/13 20:28:05 2018/9/13 20:28:05 1
87 	ut_id_guild		OnUserLogin(PLAYER *pKPlayer,SArchiveLoader_Player* pDBHuman);
89 	int32 GetKingIDs(SNID_t* pID,uint32 nSize);
90 	// 设置家族跨服联赛状态
91 	void SetLeagueGuildState(int32 nState,BOOL bToClient=false);
92 	/*

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/9 12:58:58 2018/9/13 20:28:05 2018/9/13 20:28:05 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MKManager.h 4 KB H 文件 2013/3/9 12:58:58 2018/9/13 20:28:05 2018/9/13 20:28:05 3
81 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
82 extern MKManager<LostItemMK> g_LostItemMKManager;
84 //跨服战积分相关
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
88 //跨服战积分相关
89 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
90 extern MKManager<SubstituteMK>			g_SubstituteMKManager;
97 extern ArchiveNodePool<GlobalValMK>		g_GlobalValMKPool;
98 extern MKManager<GlobalValMK>			g_GlobalValMKPoolManager;
100 // 跨服联赛 [11/24/2012 sunlei]
101 extern ArchiveNodePool<MPVPLeaguePointMK>		g_MPVPLeaguePointMKPool;
102 extern MKManager<MPVPLeaguePointMK>			g_MPVPLeaguePointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/9 12:58:58 2018/9/13 20:28:05 2018/9/13 20:28:05 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/9 12:58:58 2018/9/13 20:28:05 2018/9/13 20:28:05 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/9 12:58:59 2018/9/13 20:28:05 2018/9/13 20:28:05 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/9 12:58:59 2018/9/13 20:28:05 2018/9/13 20:28:05 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/9 12:58:59 2018/9/13 20:28:05 2018/9/13 20:28:05 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/9 12:59:01 2018/9/13 20:28:05 2018/9/13 20:28:05 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\PVPLeagueMatchManager.h 6 KB H 文件 2013/3/9 12:59:04 2018/9/13 20:28:05 2018/9/13 20:28:05 2
207 	STRU_MAPLIST<ut_id_guild,20> m_nLostList;// 淘汰队伍表
208 	ut_id_connector m_nCMapServerID;// 负责联赛统计的服务器ID
209 	STRU_MAPLIST<MATCH_INFO,256> m_nSceneList; // 跨服场景列表
210 	STRU_MAPLIST<MATCH_RESULT_STAT,20> m_nResult;   // 跨服赛本服战队，比赛结果统计
211 	IntegerHashMap m_PreResult; // 前次联赛结果
212 	ulong m_nTimeRefresh;      // 同步DBS数据频率

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/9 12:59:07 2018/9/13 20:28:05 2018/9/13 20:28:05 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\GMCommand.h 16 KB H 文件 2013/3/9 13:00:16 2018/9/13 20:28:06 2018/9/13 20:28:06 1
286 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
287 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
289 	// 增加帮会跨服战胜利次数
290 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
292 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/9 13:00:33 2018/9/13 20:28:07 2018/9/13 20:28:07 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\LuaFunction.h 391 KB H 文件 2013/3/9 13:00:44 2018/9/13 20:28:07 2018/9/13 20:28:07 10
9276 int32	LuaFunction_SetGuildParam( Lua_State *L);
9278 /**
9279 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9280 * @param	mapid_t	 mapid	整数  场景id
9281 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9287 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9289 /**
9290 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9291 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9292 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10380 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10382 /**
10383 * @brief	跨服PVP注册场景
10384 * @param	int32				nType	战场类型
10385 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10388 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10390 /**
10391 * @brief	请求进入跨服帮会战场
10392 * @param	ut_id_map	 mapId	玩家所在场景ID
10393 * @param	ut_id_obj	 selfId	玩家ObjID
10396 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10398 /**
10399 * @brief	跨服帮战报名
10400 * @param	ut_id_map	 mapId	玩家所在场景ID
10401 * @param	ut_id_obj	 selfId	玩家ObjID
10404 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10406 /**
10407 * @brief	通知GL跨服帮战结果
10408 * @param	ut_id_map	 mapId	玩家所在场景ID
10409 * @param	ut_id		 WorldID 赢方世界ID
10415 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10417 /**
10418 * @brief	跨服帮会战赛季当前周数
10419 * @param	无参数
10420 * @return	int
10422 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10424 /**
10425 * @brief	获取跨服帮战当前赛季的比赛场次
10426 * @return	int
10427 */
10703 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10705 /**
10706 跨服副本搜索
10707 * @param1	ut_id_map mapId
10708 * @param2 ut_id_obj objId
13143 //************************************
13144 // FullName:  LuaScript::LuaFunction_MPVPLeagueRegisterMap
13145 // describe:  跨服联赛 设置进入战场倒计时
13146 //************************************
13147 int32   LuaFunction_MPVPLeagueSetEnterSceneCutDown(Lua_State *L);

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/9 13:00:57 2018/9/13 20:28:07 2018/9/13 20:28:07 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/9 13:00:58 2018/9/13 20:28:07 2018/9/13 20:28:07 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/9 13:00:58 2018/9/13 20:28:07 2018/9/13 20:28:07 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/9 13:00:58 2018/9/13 20:28:07 2018/9/13 20:28:07 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/9 13:01:26 2018/9/13 20:28:08 2018/9/13 20:28:08 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Define.h 51 KB H 文件 2013/3/9 13:01:43 2018/9/13 20:28:08 2018/9/13 20:28:08 5
345 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
346 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
347 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
348 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
349 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
350 #define MPVP_JOIN_TIME_SIZE					(6)
350 #define MPVP_JOIN_TIME_SIZE					(6)
351 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
353 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
355 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
357 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Enum.h 97 KB H 文件 2013/3/9 13:01:45 2018/9/13 20:28:08 2018/9/13 20:28:08 11
827 	ST_GARDEN_MK				= 20,
828 	ST_GLOBAL_MK				= 21,
829 	ST_MPVPLEAGUE_MK            = 22,// 跨服联赛 [11/24/2012 sunlei]
830 	ST_SLGBATTLE_MK             = 23,
831 };
2468 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2470 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2472 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2473 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2474 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2475 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2476 	GD_GUILD_MLEAGUE_TOPLIST                = 106,      // 跨服联赛排名
2477 	GD_GUILD_MLEAGUE_RESULT_WIN             = 107,      // 跨服联赛胜利次数
2478 	GD_GUILD_MLEAGUE_RESULT_REWARD          = 108,      // 跨服联赛奖励是否领取
2479 	GD_GUILD_MLEAGUE_RESULT_WIN_TOTAL_COUNT = 109,      // 跨服联赛胜利场次
2480 	GD_GUILD_MLEAGUE_JOIN_TOTAL_COUNT       = 110,      // 跨服联赛参加次数
2481 	GD_GUILD_MLEAGUE_STATE                  = 111,      // 跨服联赛状态，0：没有活动，1：有活动未报名，2：有活动已报名,3:开始进入比赛，4：比赛开始
2482 	
2483 	GD_GUILD_CALLBOSS_COUNT					= 112,		// 帮会召唤恶龙计次

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\MessageDefine.h 66 KB H 文件 2013/3/9 13:01:46 2018/9/13 20:28:08 2018/9/13 20:28:08 17
154 	END_MESSAGE_DD,
156 	BEGIN_MESSAGE_GG																=  750,
157 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
158 	MESSAGE_GG_MAPNOTIFY															=  752,///<
159 	MESSAGE_GS_ASKDATA															=  753,///<
457 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
458 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
459 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
460 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
461 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
892 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
893 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
894 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
895 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
896 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1132 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1133 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1134 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1135 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 脚本加载
1136 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1139 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1140 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1141 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1142 	MESSAGE_GX_GARDEN															= 3127,//家园
1143 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1145 	MESSAGE_GX_CHANNELMERIDIAN													= 3130,//经脉
1146 	MESSAGE_GX_MASK																= 3131,//面具(塔罗封印)
1147 	MESSAGE_GX_PVPLEAGUEMATCH                                                   = 3132,//跨服联赛
1148 	MESSAGE_GX_WORLD_LEAGUEMATCH                                                = 3133,//跨服联赛,世界内通知消息
1149 	MESSAGE_GX_SLG																= 3134,//SLG
1150 	
1289 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1290 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1291 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1292 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1293 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1295 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1296 	MESSAGE_XG_RETMAC															= 4144,
1297 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1298 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1299 	MESSAGE_XG_GARDEN															= 4147,//家园
1300 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1303 	MESSAGE_XG_MASK																= 4151,//面具(塔罗封印)
1304 	MESSAGE_XG_RELOAD_CONFIG_REQUEST											= 4152,// MapServer向GL发送Reload配置的请求
1305 	MESSAGE_XG_PVPLEAGUEMATCH                                                   = 4153,//跨服联赛
1306 	MESSAGE_XG_WORLD_LEAGUEMATCH                                                = 4154,//跨服联赛,世界内通知消息
1307 	MESSAGE_XG_SLG																= 4155,//SLG
1310 	END_MESSAGE_XG,
1307 	MESSAGE_XG_SLG																= 4155,//SLG
1310 	END_MESSAGE_XG,
1312 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1313 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1314 	END_PACKET_MG,
1313 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1314 	END_PACKET_MG,
1316 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1317 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1318 	END_PACKET_GM,
1317 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1318 	END_PACKET_GM,
1320 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1321 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1322 	END_PACKET_MGM,
1321 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1322 	END_PACKET_MGM,
1324 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1325 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1326 	END_PACKET_XGM,
1325 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1326 	END_PACKET_XGM,
1328 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1329 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1331 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\MPVPBattleDefine.h 7 KB H 文件 2013/3/9 13:01:46 2018/9/13 20:28:14 2018/9/13 20:28:14 32
19 	MPVP_BATTLE_SIGNUP, 								// 报名请求
20 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
21 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
22 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
23 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
24 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
25 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
26 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
27 };
29 enum MPVP_BATTLE_STATECODE
50 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
51 };
53 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
54 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
55 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
56 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
57 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
58 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
59 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
60 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
62 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
63 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
64 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
65 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
66 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
67 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
68 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
69 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
71 #define MPVPLEAGUE_MATCH_CONFIGTYPE     23              // 跨服联赛
73 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
74 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
75 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
76 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
77 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
77 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
78 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
79 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
80 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
81 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
82 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
83 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
85 #define MPLEAGUE_TEAM_SIZE             100              // 联赛队伍，人数
107 	}
108 };
111 #define MPVPLEAGUE_MATCHCOUNT			1024			// 跨服 联赛 队伍上限
112 struct	MPVPLEAGUE_MATCH_RESULT
113 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\StructDB.h 204 KB H 文件 2018/10/3 17:21:19 2018/9/13 20:28:14 2018/9/13 20:28:14 3
6020 };
6022 /************************************************************************/
6023 /* 跨服战积分的DB存储结构                                               */
6024 /************************************************************************/	
6026 enum MPVPPOINT_SHM_USE_STATS 
6040 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
6041 	int32	m_nTotalWinTimes;							//总共获胜的场次
6042 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
6043 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
6044 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引
6779 	MPVPLEAGUEPOINT_ADDNEW = 0, MPVPLEAGUEPOINT_DELETE, MPVPLEAGUEPOINT_SAVED,
6780 };
6781 // 跨服联赛 [11/24/2012 sunlei]
6782 struct MPVPLeaguePointDB
6783 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\StructGuild.h 105 KB H 文件 2013/3/9 13:01:58 2018/9/13 20:28:14 2018/9/13 20:28:14 9
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	
1273 	int32		m_nMBattleForward;
1274 	
1275 	// 跨服赛 上次排名
1276 	int32      m_nLMLeagueTopIndex;
1276 	int32      m_nLMLeagueTopIndex;
1277 	// 跨服赛 上次胜利次数
1278 	int32      m_nLMLeagueWinTimes;
1278 	int32      m_nLMLeagueWinTimes;
1279 	// 跨服联赛奖励
1280 	int32      m_nLMLeagueReward;
1280 	int32      m_nLMLeagueReward;
1281 	// 跨服联赛累计获胜次数
1282 	int32      m_nLMLeagueWinTotalTimes;
1282 	int32      m_nLMLeagueWinTotalTimes;
1283 	// 跨服联赛累计参加次数
1284 	int32      m_nLMLeagueTotalJoinTimes;
1285 	// 联赛状态  0：没有活动，1：有活动未报名，2：有活动已报名,3:开始进入比赛，4：比赛开始

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/9 13:01:59 2018/9/13 20:28:14 2018/9/13 20:28:14 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/9 13:01:58 2018/9/13 20:28:14 2018/9/13 20:28:14 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\StructTopList.h 10 KB H 文件 2013/3/9 13:02:03 2018/9/13 20:28:14 2018/9/13 20:28:14 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/9 13:59:20 2018/9/13 20:28:08 2018/9/13 20:28:08 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/9 13:59:20 2018/9/13 20:28:08 2018/9/13 20:28:08 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Core\act_define.h 32 KB H 文件 2013/3/9 13:59:25 2018/9/13 20:28:08 2018/9/13 20:28:08 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Core\FileConfigConst.h 25 KB H 文件 2013/3/9 13:59:23 2018/9/13 20:28:08 2018/9/13 20:28:08 1
279 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
280 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
281 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
283 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
284 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Core\ScriptIDConst.h 32 KB H 文件 2013/3/9 13:59:24 2018/9/13 20:28:08 2018/9/13 20:28:08 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
327 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
328 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
330 //跨服 2v2 战场 by rj 2010-9-21
331 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
332 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Core\Setting.h 44 KB H 文件 2013/3/9 13:59:25 2018/9/13 20:28:08 2018/9/13 20:28:08 25
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
505 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
506 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
507 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
509 	char	m_strCountryName[COUATTRIBUTE_NUMBER][MAX_KHAN_CHARACTER_NAME];	// 国家名称
511 	float	m_nBaseAttrCoefficient;						// 宠物基础属性影响攻击系数
1413 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1414 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1416 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1418 struct MULTIGROUP_SERVER_INFO
1419 {
1439 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1440 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1441 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1442 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1443 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1444 	int32					m_nMaxMGuildMapCnt;
1446 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1444 	int32					m_nMaxMGuildMapCnt;
1446 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1447 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1448 	BOOL                    m_MapLeagueToogle;  // 是否开启跨服联赛服务
1449 	MULTIGROUP_CONFIG()
1450 	{
1492 		return INVALID_KHAN_INDEX;
1493 	}
1495 	//当前服务器是否跨服关卡报名服务器
1496 	BOOL IsSignUpServer(void)
1497 	{
1498 		if (m_nGroupCount <=0 )
1499 		{
1500 			//不是跨服服务器
1501 			return FALSE;
1502 		}
1509 		return FALSE;
1510 	}
1512 	//当前开不开跨服副本MAP
1513 	BOOL IsMultMapOpen()
1514 	{
1515 		if (m_nGroupCount <=0 )
1516 		{
1517 			//不是跨服服务器
1518 			return FALSE;
1519 		}
1525 		return FALSE;
1526 	}
1528 	// 是否是跨服联赛服务器 [10/29/2012 sunlei]
1529 	BOOL IsLeagueCenterServer()
1530 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\DataBase\ArchiveInterface.h 57 KB H 文件 2013/3/9 13:59:27 2018/9/13 20:28:08 2018/9/13 20:28:08 2
1315 };
1317 /************************************************************************/
1318 /* 跨服战积分存档结构                                                   */
1319 /************************************************************************/
1320 class MPVPPointInfo	:
1613 };
1615 /************************************************************************/
1616 /* 跨服联赛结果存库结构                                                   */
1617 /************************************************************************/
1618 class MPVPLeaguePointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\DataBase\SqlStatement.h 9 KB H 文件 2013/3/9 13:59:28 2018/9/13 20:28:08 2018/9/13 20:28:08 2
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表
55 #define GLOBALVAL_TABLE					"t_globalval"			// 全局变量表
56 #define MASK_TABLE						"t_mask"				// 面具表
57 #define MPVPLEAGUEPOINT_TABLE			"t_mpvpleague_result"			// 跨服联赛结果 [11/24/2012 sunlei]
58 #define SLG_BUILDINFO_TABLE				"t_slg_buildinfo"		// slg玩法-建筑表
59 #define SOLDIER_TABLE					"t_soldier"				// 士兵（兵种）表

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/9 14:01:22 2018/9/13 20:28:11 2018/9/13 20:28:11 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/9 14:03:00 2018/9/13 20:28:13 2018/9/13 20:28:13 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\han3_tgwc\src\khan2-share\TAB\TabDefine_Map_Misc.h 57 KB H 文件 2013/3/9 14:03:19 2018/9/13 20:28:14 2018/9/13 20:28:14 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 11:23:07 2018/9/13 20:31:21 2018/9/13 20:31:21 1
2652 	int32 m_nActivePoint;       //星座名称	
2653 };
2655 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2656 #define TABLE_WORLD_NAME	(1017)
2657 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 11:23:08 2018/9/13 20:31:21 2018/9/13 20:31:21 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 11:26:18 2018/9/13 20:31:24 2018/9/13 20:31:24 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 11:26:29 2018/9/13 20:31:25 2018/9/13 20:31:25 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 11:26:41 2018/9/13 20:31:25 2018/9/13 20:31:25 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 11:26:41 2018/9/13 20:31:25 2018/9/13 20:31:25 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 11:27:25 2018/9/13 20:31:26 2018/9/13 20:31:26 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
445 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
446 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
447 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
448 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
449 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
790 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
791 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
792 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
793 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
794 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
938 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
939 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
940 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
942 	END_MESSAGE_GX,
944 	BEGIN_MESSAGE_XG																= 4000,
1080 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1081 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1082 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1083 	END_MESSAGE_XG,
1085 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 11:27:24 2018/9/13 20:31:31 2018/9/13 20:31:31 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 14:30:52 2018/9/13 20:31:26 2018/9/13 20:31:26 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 14:30:52 2018/9/13 20:31:26 2018/9/13 20:31:26 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 14:30:56 2018/9/13 20:31:26 2018/9/13 20:31:26 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 14:30:56 2018/9/13 20:31:26 2018/9/13 20:31:26 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\AE\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 14:30:56 2018/9/13 20:31:26 2018/9/13 20:31:26 2
1030 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1031 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1032 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1033 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1035 	MULTIGROUP_CONFIG()
1036 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 11:29:02 2018/9/13 20:32:34 2018/9/13 20:32:34 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 11:29:02 2018/9/13 20:32:34 2018/9/13 20:32:34 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 11:37:53 2018/9/13 20:33:20 2018/9/13 20:33:20 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 11:37:53 2018/9/13 20:33:20 2018/9/13 20:33:20 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 11:41:17 2018/9/13 20:33:23 2018/9/13 20:33:23 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-mapserver\LuaFunction.h 263 KB H 文件 2013/3/10 11:41:28 2018/9/13 20:33:24 2018/9/13 20:33:24 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 11:41:39 2018/9/13 20:33:24 2018/9/13 20:33:24 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 11:41:40 2018/9/13 20:33:24 2018/9/13 20:33:24 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 11:42:29 2018/9/13 20:33:25 2018/9/13 20:33:25 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 11:42:29 2018/9/13 20:33:30 2018/9/13 20:33:30 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 20:50:53 2018/9/13 20:33:25 2018/9/13 20:33:25 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 20:50:53 2018/9/13 20:33:25 2018/9/13 20:33:25 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 20:50:58 2018/9/13 20:33:25 2018/9/13 20:33:25 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 20:50:57 2018/9/13 20:33:25 2018/9/13 20:33:25 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_CB\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 20:50:58 2018/9/13 20:33:25 2018/9/13 20:33:25 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 11:43:18 2018/9/13 20:33:32 2018/9/13 20:33:32 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 11:43:23 2018/9/13 20:33:32 2018/9/13 20:33:32 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\GameScriptFunctionMySelf.h 16 KB H 文件 2013/3/10 11:43:44 2018/9/13 20:33:32 2018/9/13 20:33:32 1
314 	/* 玩家关卡技能 */
315 	int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
317 	//退出跨服关卡
318 	int32			ExitRoom(LuaPlus::LuaState *state);
320 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\GameTableData.h 90 KB H 文件 2013/3/10 11:43:54 2018/9/13 20:33:32 2018/9/13 20:33:32 1
2664 	int32 m_nActivePoint;       //星座名称	
2665 };
2667 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2668 #define TABLE_WORLD_NAME	(1017)
2669 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 11:43:54 2018/9/13 20:33:32 2018/9/13 20:33:32 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 11:44:40 2018/9/13 20:33:34 2018/9/13 20:33:34 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 11:45:34 2018/9/13 20:33:34 2018/9/13 20:33:34 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 11:45:34 2018/9/13 20:33:34 2018/9/13 20:33:34 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 11:45:35 2018/9/13 20:33:34 2018/9/13 20:33:34 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 11:45:35 2018/9/13 20:33:34 2018/9/13 20:33:34 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 11:45:35 2018/9/13 20:33:34 2018/9/13 20:33:34 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 11:45:36 2018/9/13 20:33:34 2018/9/13 20:33:34 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 11:45:36 2018/9/13 20:33:34 2018/9/13 20:33:34 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 11:45:38 2018/9/13 20:33:34 2018/9/13 20:33:34 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 11:45:43 2018/9/13 20:33:34 2018/9/13 20:33:34 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 11:46:49 2018/9/13 20:33:36 2018/9/13 20:33:36 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 11:47:05 2018/9/13 20:33:36 2018/9/13 20:33:36 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\LuaFunction.h 298 KB H 文件 2013/3/10 11:47:18 2018/9/13 20:33:36 2018/9/13 20:33:36 9
9005 int32	LuaFunction_SetGuildParam( Lua_State *L);
9007 /**
9008 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9009 * @param	mapid_t	 mapid	整数  场景id
9010 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9016 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9018 /**
9019 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9020 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9021 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10082 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10084 /**
10085 * @brief	跨服PVP注册场景
10086 * @param	int32				nType	战场类型
10087 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10090 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10092 /**
10093 * @brief	请求进入跨服帮会战场
10094 * @param	ut_id_map	 mapId	玩家所在场景ID
10095 * @param	ut_id_obj	 selfId	玩家ObjID
10098 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10100 /**
10101 * @brief	跨服帮战报名
10102 * @param	ut_id_map	 mapId	玩家所在场景ID
10103 * @param	ut_id_obj	 selfId	玩家ObjID
10106 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10108 /**
10109 * @brief	通知GL跨服帮战结果
10110 * @param	ut_id_map	 mapId	玩家所在场景ID
10111 * @param	ut_id		 WorldID 赢方世界ID
10117 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10119 /**
10120 * @brief	跨服帮会战赛季当前周数
10121 * @param	无参数
10122 * @return	int
10124 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10126 /**
10127 * @brief	获取跨服帮战当前赛季的比赛场次
10128 * @return	int
10129 */
10357 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10359 /**
10360 跨服副本搜索
10361 * @param1	ut_id_map mapId
10362 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 11:47:31 2018/9/13 20:33:36 2018/9/13 20:33:36 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 11:47:31 2018/9/13 20:33:36 2018/9/13 20:33:36 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 11:47:32 2018/9/13 20:33:36 2018/9/13 20:33:36 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 11:47:32 2018/9/13 20:33:36 2018/9/13 20:33:36 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 11:47:58 2018/9/13 20:33:37 2018/9/13 20:33:37 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 11:48:14 2018/9/13 20:33:38 2018/9/13 20:33:38 5
339 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
340 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
341 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
342 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
343 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
344 #define MPVP_JOIN_TIME_SIZE					(6)
344 #define MPVP_JOIN_TIME_SIZE					(6)
345 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
347 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
349 #define MAX_HORSEMONEY_NUM						(999999)
350 #define MAX_XINYU_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Enum.h 84 KB H 文件 2013/3/10 11:48:15 2018/9/13 20:33:38 2018/9/13 20:33:38 4
2365 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2367 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2369 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2370 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2371 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2372 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2374 	GD_GUILD_MAX_COUNT
2375 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\MessageDefine.h 57 KB H 文件 2013/3/10 11:48:17 2018/9/13 20:33:38 2018/9/13 20:33:38 13
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
806 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
807 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
808 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
809 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
810 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
968 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
969 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
970 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
971 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
972 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
975 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
976 	MESSAGE_GX_COLLECT_MAC														= 3125,//
977 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
979 	END_MESSAGE_GX,
981 	BEGIN_MESSAGE_XG																= 4000,
1117 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1118 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1119 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1120 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1121 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1123 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1124 	MESSAGE_XG_RETMAC															= 4144,
1125 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1126 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1128 	END_MESSAGE_XG,
1128 	END_MESSAGE_XG,
1130 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1131 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1132 	END_PACKET_MG,
1131 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1132 	END_PACKET_MG,
1134 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1135 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1136 	END_PACKET_GM,
1135 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1136 	END_PACKET_GM,
1138 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1139 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1140 	END_PACKET_MGM,
1139 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1140 	END_PACKET_MGM,
1142 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1143 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1144 	END_PACKET_XGM,
1143 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1144 	END_PACKET_XGM,
1146 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1147 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1149 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 11:48:16 2018/9/13 20:33:43 2018/9/13 20:33:43 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\StructDB.h 173 KB H 文件 2013/3/10 11:48:27 2018/9/13 20:33:43 2018/9/13 20:33:43 2
5655 };
5657 /************************************************************************/
5658 /* 跨服战积分的DB存储结构                                               */
5659 /************************************************************************/	
5661 enum MPVPPOINT_SHM_USE_STATS 
5675 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5676 	int32	m_nTotalWinTimes;							//总共获胜的场次
5677 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5678 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5679 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 11:48:29 2018/9/13 20:33:43 2018/9/13 20:33:43 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 11:48:31 2018/9/13 20:33:44 2018/9/13 20:33:44 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 11:48:30 2018/9/13 20:33:44 2018/9/13 20:33:44 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 11:48:34 2018/9/13 20:33:44 2018/9/13 20:33:44 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 20:55:03 2018/9/13 20:33:37 2018/9/13 20:33:37 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/10 20:55:03 2018/9/13 20:33:37 2018/9/13 20:33:37 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 20:55:09 2018/9/13 20:33:37 2018/9/13 20:33:37 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
174 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
176 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Core\FileConfigConst.h 20 KB H 文件 2013/3/10 20:55:06 2018/9/13 20:33:37 2018/9/13 20:33:37 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 20:55:08 2018/9/13 20:33:38 2018/9/13 20:33:38 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
229 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
230 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
232 //跨服 2v2 战场 by rj 2010-9-21
233 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
234 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Core\Setting.h 34 KB H 文件 2013/3/10 20:55:08 2018/9/13 20:33:38 2018/9/13 20:33:38 22
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1125 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1126 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1128 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1130 struct MULTIGROUP_SERVER_INFO
1131 {
1149 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1150 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1151 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1152 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1153 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关  
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关  
1157 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1159 	MULTIGROUP_CONFIG()
1160 	{
1202 		return INVALID_KHAN_INDEX;
1203 	}
1205 	//当前服务器是否跨服关卡报名服务器
1206 	BOOL IsSignUpServer(void)
1207 	{
1208 		if (m_nGroupCount <=0 )
1209 		{
1210 			//不是跨服服务器
1211 			return FALSE;
1212 		}
1219 		return FALSE;
1220 	}
1222 	//当前开不开跨服副本MAP
1223 	BOOL IsMultMapOpen()
1224 	{
1225 		if (m_nGroupCount <=0 )
1226 		{
1227 			//不是跨服服务器
1228 			return FALSE;
1229 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/10 20:55:10 2018/9/13 20:33:38 2018/9/13 20:33:38 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 20:55:11 2018/9/13 20:33:38 2018/9/13 20:33:38 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/10 20:57:13 2018/9/13 20:33:41 2018/9/13 20:33:41 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
663 };
666 /************************************************************************/
667 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
668 /************************************************************************/
669 struct MsgMGRoomBattle
689 };
691 /************************************************************************/
692 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
693 /************************************************************************/
694 struct MsgGMRoomBattle
715 };
716 /************************************************************************/
717 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
718 /************************************************************************/
719 struct MsgXGMRoomBattle_ReplyEnter
729 };
730 /************************************************************************/
731 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
732 /************************************************************************/
733 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
743 };
744 /************************************************************************/
745 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
746 /************************************************************************/
747 struct MsgXGMRoomBattle_Leave
757 };
758 /************************************************************************/
759 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
760 /************************************************************************/
761 struct MsgMGMRoomBattle
778 };
779 /************************************************************************/
780 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
781 /************************************************************************/
782 struct MsgXGMRoomBattle
806 };
807 /************************************************************************/
808 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
809 /************************************************************************/
810 struct MsgMGXRoomBattle
841 };
842 /************************************************************************/
843 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
844 /************************************************************************/
845 struct MsgCXRoomBattle
871 };
874 /************************************************************************/
875 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
876 /************************************************************************/
877 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 20:58:55 2018/9/13 20:33:43 2018/9/13 20:33:43 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\EN_TEST\src\khan2-share\TAB\TabDefine_Map_Misc.h 38 KB H 文件 2013/3/10 20:59:15 2018/9/13 20:33:44 2018/9/13 20:33:44 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 11:49:50 2018/9/13 20:34:47 2018/9/13 20:34:47 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 11:49:51 2018/9/13 20:34:47 2018/9/13 20:34:47 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Client\Game\Data\Struct\GameDataStructSystemTip.h 6 KB H 文件 2013/3/11 12:35:39 2018/9/13 20:35:16 2018/9/13 20:35:16 1
66 	STT_KING_ZHAOJI,							/* 国王召集令进入提示 */
67 	STT_GAMEBATTLE_LAIRD_INVITE_PlAYERAID,		/* 领地战邀请外援 */
68 	STT_MPVP2V2_BATTLE,							/* 跨服PVP2v2战场进入提示 2010-9-23 by rj */
69 	STT_NUM,									/* 数量 */
70 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Client\Game\Table\GameTableData.h 95 KB H 文件 2013/3/10 21:40:32 2018/9/13 20:35:20 2018/9/13 20:35:20 1
3379 	int32 m_nActivePoint;       //星座名称	
3380 };
3382 /* 2010-10-19 by rj 跨服玩家服名称显示 */
3383 #define TABLE_WORLD_NAME	(1017)
3384 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Client\Game\Table\GameTableDefine.h 10 KB H 文件 2013/3/10 21:40:32 2018/9/13 20:35:20 2018/9/13 20:35:20 1
416 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
418 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
420 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
421 	{TABLE_WORLD_NAME, "worldname"},
423 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\MapServer\Server\Other\IMPVPBattle.h 1 KB H 文件 2013/3/10 21:43:13 2018/9/13 20:35:25 2018/9/13 20:35:25 5
4 #include "TypeDefine.h"
5 #include "Player.h"
7 // 跨服战场类型
8 enum MPVPBattleType
9 {
8 enum MPVPBattleType
9 {
10 	MPVPBATTLETYPE_2V2 = 0,					// 跨服 2V2
11 	MPVPBATTLETYPE_6V6,						// 跨服 6V6
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
15 #define MPVPBATTLETYPE_NUM			1		// 跨服战场类型数量
17 // 跨服战场基类接口
18 class IMPVPBattle
19 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\MapServer\Server\Other\MPVP2v2Battle.h 8 KB H 文件 2013/3/10 21:43:14 2018/9/13 20:35:25 2018/9/13 20:35:25 2
6 #include "Player.h"
7 #include "IMPVPBattle.h"
9 #define MBATTLE_TYPE_2V2BATTLE			(20)						// 战场时间表中的跨服 2v2 战场类型
10 #define NUM_MPVP2V2_SIGNUP				(2)							// 报名条目数组大小
11 #define MAX_MPVP2V2_SCENECOUNT			(512)						// 开辟场景数组上限
202 	}
203 };
205 // 双人跨服战场派生类
206 class CMPVP2v2Battle: public IMPVPBattle
207 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\MapServer\Server\Other\MPVPBattleManager.h 2 KB H 文件 2013/3/10 21:43:14 2018/9/13 20:35:25 2018/9/13 20:35:25 3
29 	int32		m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVPBattleType nType);		// 以类型方式获得跨服战场类
49 public:
50 	PLAYERLIST	*GetNearTeamMemberList(Player *pPlayer);		// 工具函数，获取附近队友
55 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
57 private:
58 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
59 	PLAYERLIST		m_lsNearTeamMember;							// 附近队友列表
60 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\MessageDefine.h 49 KB H 文件 2013/3/10 10:48:43 2018/9/13 20:35:25 2018/9/13 20:35:25 3
141 	END_PACKET_DD,
143 	BEGIN_PACKET_GG																=  750,
144 	PACKET_GG_MPVP2V2SCENENOTIFY												=  751,///<	// 跨服战场场景线程通知消息 2010-9-23 by rj
145 	PACKET_GG_SCENENOTIFY														=  752,///<
146 	PACKET_GS_ASKDATA															=  753,///<
437 	PACKET_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
438 	PACKET_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
439 	PACKET_CX_MPVP2V2_BATTLE													= 1274,// by rj 2010-9-21 跨服战场
440 	PACKET_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
441 	PACKET_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
759 	PACKET_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
760 	PACKET_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
761 	PACKET_XC_MPVP2V2_BATTLE													= 2326,// by rj 2010-9-21 跨服战场
762 	PACKET_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
763 	PACKET_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 11:55:42 2018/9/13 20:35:25 2018/9/13 20:35:25 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 11:55:43 2018/9/13 20:35:25 2018/9/13 20:35:25 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\Core\act_define.h 26 KB H 文件 2013/3/10 11:55:47 2018/9/13 20:35:25 2018/9/13 20:35:25 1
164 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
165 	eCurrencyAct_GuildSendMail		= 329,  /* 帮主群发邮件扣除现银 */
166 //	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
167 	eCurrencyAct_NUM
168 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\Core\ScriptDef.h 17 KB H 文件 2013/3/10 11:55:46 2018/9/13 20:35:25 2018/9/13 20:35:25 2
62 #define PVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303000)
63 #define PVP2V2_BATTLE_FLOW_SCRIPT_ID						(303001)
65 #define MPVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303100)		// 跨服 2v2 战场 by rj 2010-9-21
66 #define MPVP2V2_BATTLE_FLOW_SCRIPT_ID						(303101)
68 #define PVP6V6_BATTLE_SIGNUP_SCRIPT_ID						(303005)
213 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("OnSignupResult")
214 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
216 //跨服 2v2 战场 by rj 2010-9-21
217 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("OnMBattleMatchInfo")
218 #define DEF_MPVP2V2_BATTLE_BATTLESCENETRANS					("OnMPVP2v2BattleChangeScene")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB1\Share\Core\Setting.h 28 KB H 文件 2013/3/10 11:55:47 2018/9/13 20:35:25 2018/9/13 20:35:25 2
1000 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1001 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1002 	int32					m_nMax2v2SceneCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1003 	int32					m_nMax6v6SceneCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1005 	MULTIGROUP_CONFIG()
1006 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:00:07 2018/9/13 20:35:32 2018/9/13 20:35:32 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:00:07 2018/9/13 20:35:32 2018/9/13 20:35:32 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:02:45 2018/9/13 20:35:35 2018/9/13 20:35:35 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-mapserver\LuaFunction.h 263 KB H 文件 2013/3/10 12:02:55 2018/9/13 20:35:35 2018/9/13 20:35:35 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:03:05 2018/9/13 20:35:35 2018/9/13 20:35:35 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:03:06 2018/9/13 20:35:35 2018/9/13 20:35:35 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 12:03:45 2018/9/13 20:35:36 2018/9/13 20:35:36 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:03:45 2018/9/13 20:35:42 2018/9/13 20:35:42 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 21:43:39 2018/9/13 20:35:36 2018/9/13 20:35:36 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 21:43:39 2018/9/13 20:35:36 2018/9/13 20:35:36 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 21:43:43 2018/9/13 20:35:36 2018/9/13 20:35:36 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 21:43:43 2018/9/13 20:35:36 2018/9/13 20:35:36 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB3\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 21:43:43 2018/9/13 20:35:36 2018/9/13 20:35:36 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 12:04:32 2018/9/13 20:35:43 2018/9/13 20:35:43 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-client\GameTableData.h 86 KB H 文件 2013/3/10 12:04:58 2018/9/13 20:35:44 2018/9/13 20:35:44 1
2655 	int32 m_nActivePoint;       //星座名称	
2656 };
2658 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2659 #define TABLE_WORLD_NAME	(1017)
2660 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 12:04:58 2018/9/13 20:35:44 2018/9/13 20:35:44 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 12:05:39 2018/9/13 20:35:45 2018/9/13 20:35:45 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 12:06:27 2018/9/13 20:35:46 2018/9/13 20:35:46 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 12:06:27 2018/9/13 20:35:46 2018/9/13 20:35:46 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 12:06:28 2018/9/13 20:35:46 2018/9/13 20:35:46 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 12:06:28 2018/9/13 20:35:46 2018/9/13 20:35:46 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 12:06:28 2018/9/13 20:35:46 2018/9/13 20:35:46 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 12:06:28 2018/9/13 20:35:46 2018/9/13 20:35:46 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 12:06:29 2018/9/13 20:35:46 2018/9/13 20:35:46 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 12:06:35 2018/9/13 20:35:46 2018/9/13 20:35:46 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 12:07:35 2018/9/13 20:35:47 2018/9/13 20:35:47 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:07:51 2018/9/13 20:35:47 2018/9/13 20:35:47 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\LuaFunction.h 291 KB H 文件 2013/3/10 12:08:02 2018/9/13 20:35:47 2018/9/13 20:35:47 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10035 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10037 /**
10038 * @brief	跨服PVP注册场景
10039 * @param	int32				nType	战场类型
10040 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10043 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10045 /**
10046 * @brief	请求进入跨服帮会战场
10047 * @param	ut_id_map	 mapId	玩家所在场景ID
10048 * @param	ut_id_obj	 selfId	玩家ObjID
10051 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10053 /**
10054 * @brief	跨服帮战报名
10055 * @param	ut_id_map	 mapId	玩家所在场景ID
10056 * @param	ut_id_obj	 selfId	玩家ObjID
10059 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10061 /**
10062 * @brief	通知GL跨服帮战结果
10063 * @param	ut_id_map	 mapId	玩家所在场景ID
10064 * @param	ut_id		 WorldID 赢方世界ID
10070 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10072 /**
10073 * @brief	跨服帮会战赛季当前周数
10074 * @param	无参数
10075 * @return	int
10077 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10079 /**
10080 * @brief	获取跨服帮战当前赛季的比赛场次
10081 * @return	int
10082 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 12:08:13 2018/9/13 20:35:48 2018/9/13 20:35:48 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:08:13 2018/9/13 20:35:48 2018/9/13 20:35:48 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 12:08:14 2018/9/13 20:35:48 2018/9/13 20:35:48 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:08:14 2018/9/13 20:35:48 2018/9/13 20:35:48 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 12:08:52 2018/9/13 20:35:49 2018/9/13 20:35:49 5
336 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
337 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
338 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
339 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
340 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
341 #define MPVP_JOIN_TIME_SIZE					(6)
341 #define MPVP_JOIN_TIME_SIZE					(6)
342 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
344 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
346 /************************************************************************/
347 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 12:08:54 2018/9/13 20:35:49 2018/9/13 20:35:49 4
2351 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2353 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2355 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2356 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2357 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2358 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2360 	GD_GUILD_MAX_COUNT
2361 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\MessageDefine.h 56 KB H 文件 2013/3/10 12:08:55 2018/9/13 20:35:49 2018/9/13 20:35:49 6
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
961 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
962 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
963 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
964 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
965 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1108 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1109 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1110 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1111 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1112 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1114 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1115 	MESSAGE_XG_RETMAC															= 4144,
1116 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1117 	END_MESSAGE_XG,
1119 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 12:08:54 2018/9/13 20:35:55 2018/9/13 20:35:55 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 12:09:03 2018/9/13 20:35:55 2018/9/13 20:35:55 2
5536 };
5538 /************************************************************************/
5539 /* 跨服战积分的DB存储结构                                               */
5540 /************************************************************************/	
5542 enum MPVPPOINT_SHM_USE_STATS 
5556 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5557 	int32	m_nTotalWinTimes;							//总共获胜的场次
5558 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5559 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5560 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 12:09:05 2018/9/13 20:35:55 2018/9/13 20:35:55 4
1262 	int32       m_nCurMonth;
1264 	int32		m_nLastWeekStrength;
1265 	// 跨服帮战结果
1266 	int32		m_nMBattleResult;
1266 	int32		m_nMBattleResult;
1267 	// 参加跨服帮战时的排名
1268 	int32		m_nLastTopIndex;
1268 	int32		m_nLastTopIndex;
1269 	// 参加跨服帮战的人数
1270 	int32		m_nMBattleJoinCount;
1270 	int32		m_nMBattleJoinCount;
1271 	// 跨服战奖励
1272 	int32		m_nMBattleForward;
1273 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 12:09:06 2018/9/13 20:35:55 2018/9/13 20:35:55 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 12:09:10 2018/9/13 20:35:55 2018/9/13 20:35:55 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 21:47:24 2018/9/13 20:35:48 2018/9/13 20:35:48 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 21:47:24 2018/9/13 20:35:48 2018/9/13 20:35:48 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 21:47:28 2018/9/13 20:35:48 2018/9/13 20:35:48 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 21:47:28 2018/9/13 20:35:49 2018/9/13 20:35:49 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/10 21:47:28 2018/9/13 20:35:49 2018/9/13 20:35:49 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1133 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1134 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1135 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1136 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1137 	int32					m_nMaxMGuildMapCnt;
1139 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/10 21:47:30 2018/9/13 20:35:49 2018/9/13 20:35:49 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 21:47:31 2018/9/13 20:35:49 2018/9/13 20:35:49 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OB5\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 21:50:53 2018/9/13 20:35:55 2018/9/13 20:35:55 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 21:51:36 2018/9/13 20:35:57 2018/9/13 20:35:57 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-client\GameTableData.h 87 KB H 文件 2013/3/10 21:52:03 2018/9/13 20:35:57 2018/9/13 20:35:57 1
2656 	int32 m_nActivePoint;       //星座名称	
2657 };
2659 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2660 #define TABLE_WORLD_NAME	(1017)
2661 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 21:52:03 2018/9/13 20:35:57 2018/9/13 20:35:57 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 21:52:44 2018/9/13 20:35:58 2018/9/13 20:35:58 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 21:53:30 2018/9/13 20:35:59 2018/9/13 20:35:59 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 21:53:30 2018/9/13 20:35:59 2018/9/13 20:35:59 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 21:53:30 2018/9/13 20:35:59 2018/9/13 20:35:59 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 21:53:31 2018/9/13 20:35:59 2018/9/13 20:35:59 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 21:53:31 2018/9/13 20:35:59 2018/9/13 20:35:59 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 21:53:31 2018/9/13 20:35:59 2018/9/13 20:35:59 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 21:53:31 2018/9/13 20:35:59 2018/9/13 20:35:59 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 21:53:37 2018/9/13 20:36:00 2018/9/13 20:36:00 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 21:54:37 2018/9/13 20:36:01 2018/9/13 20:36:01 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 21:54:51 2018/9/13 20:36:01 2018/9/13 20:36:01 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\LuaFunction.h 291 KB H 文件 2013/3/10 21:55:02 2018/9/13 20:36:02 2018/9/13 20:36:02 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10035 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10037 /**
10038 * @brief	跨服PVP注册场景
10039 * @param	int32				nType	战场类型
10040 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10043 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10045 /**
10046 * @brief	请求进入跨服帮会战场
10047 * @param	ut_id_map	 mapId	玩家所在场景ID
10048 * @param	ut_id_obj	 selfId	玩家ObjID
10051 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10053 /**
10054 * @brief	跨服帮战报名
10055 * @param	ut_id_map	 mapId	玩家所在场景ID
10056 * @param	ut_id_obj	 selfId	玩家ObjID
10059 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10061 /**
10062 * @brief	通知GL跨服帮战结果
10063 * @param	ut_id_map	 mapId	玩家所在场景ID
10064 * @param	ut_id		 WorldID 赢方世界ID
10070 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10072 /**
10073 * @brief	跨服帮会战赛季当前周数
10074 * @param	无参数
10075 * @return	int
10077 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10079 /**
10080 * @brief	获取跨服帮战当前赛季的比赛场次
10081 * @return	int
10082 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 21:55:14 2018/9/13 20:36:02 2018/9/13 20:36:02 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 21:55:14 2018/9/13 20:36:02 2018/9/13 20:36:02 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 21:55:15 2018/9/13 20:36:02 2018/9/13 20:36:02 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 21:55:15 2018/9/13 20:36:02 2018/9/13 20:36:02 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 21:55:55 2018/9/13 20:36:03 2018/9/13 20:36:03 5
336 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
337 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
338 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
339 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
340 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
341 #define MPVP_JOIN_TIME_SIZE					(6)
341 #define MPVP_JOIN_TIME_SIZE					(6)
342 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
344 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
346 /************************************************************************/
347 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 21:55:57 2018/9/13 20:36:03 2018/9/13 20:36:03 4
2352 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2354 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2356 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2357 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2358 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2359 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2361 	GD_GUILD_MAX_COUNT
2362 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\MessageDefine.h 56 KB H 文件 2013/3/10 21:55:58 2018/9/13 20:36:03 2018/9/13 20:36:03 6
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
961 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
962 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
963 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
964 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
965 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1108 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1109 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1110 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1111 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1112 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1114 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1115 	MESSAGE_XG_RETMAC															= 4144,
1116 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1117 	END_MESSAGE_XG,
1119 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 21:55:57 2018/9/13 20:36:08 2018/9/13 20:36:08 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 21:56:07 2018/9/13 20:36:09 2018/9/13 20:36:09 2
5536 };
5538 /************************************************************************/
5539 /* 跨服战积分的DB存储结构                                               */
5540 /************************************************************************/	
5542 enum MPVPPOINT_SHM_USE_STATS 
5556 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5557 	int32	m_nTotalWinTimes;							//总共获胜的场次
5558 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5559 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5560 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 21:56:09 2018/9/13 20:36:09 2018/9/13 20:36:09 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 21:56:09 2018/9/13 20:36:09 2018/9/13 20:36:09 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 21:56:13 2018/9/13 20:36:09 2018/9/13 20:36:09 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 12:38:26 2018/9/13 20:36:02 2018/9/13 20:36:02 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 12:38:26 2018/9/13 20:36:02 2018/9/13 20:36:02 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/11 12:38:31 2018/9/13 20:36:02 2018/9/13 20:36:02 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/11 12:38:30 2018/9/13 20:36:03 2018/9/13 20:36:03 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/11 12:38:31 2018/9/13 20:36:03 2018/9/13 20:36:03 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1133 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1134 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1135 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1136 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1137 	int32					m_nMaxMGuildMapCnt;
1139 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/11 12:38:32 2018/9/13 20:36:03 2018/9/13 20:36:03 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 12:38:34 2018/9/13 20:36:03 2018/9/13 20:36:03 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\HK_OBT6\HK_OBT6\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 12:42:27 2018/9/13 20:36:08 2018/9/13 20:36:08 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:10:07 2018/9/13 20:36:11 2018/9/13 20:36:11 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:10:07 2018/9/13 20:36:11 2018/9/13 20:36:11 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:12:49 2018/9/13 20:36:14 2018/9/13 20:36:14 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-mapserver\LuaFunction.h 263 KB H 文件 2013/3/10 12:12:59 2018/9/13 20:36:14 2018/9/13 20:36:14 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:13:09 2018/9/13 20:36:14 2018/9/13 20:36:14 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:13:09 2018/9/13 20:36:15 2018/9/13 20:36:15 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 12:13:46 2018/9/13 20:36:15 2018/9/13 20:36:15 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:13:46 2018/9/13 20:36:21 2018/9/13 20:36:21 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 21:56:28 2018/9/13 20:36:15 2018/9/13 20:36:15 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 21:56:28 2018/9/13 20:36:15 2018/9/13 20:36:15 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 21:56:33 2018/9/13 20:36:15 2018/9/13 20:36:15 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 21:56:32 2018/9/13 20:36:15 2018/9/13 20:36:15 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 21:56:33 2018/9/13 20:36:15 2018/9/13 20:36:15 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 12:14:27 2018/9/13 20:39:03 2018/9/13 20:39:03 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 12:14:31 2018/9/13 20:39:03 2018/9/13 20:39:03 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\GameScriptFunctionMySelf.h 16 KB H 文件 2013/3/10 12:14:47 2018/9/13 20:39:04 2018/9/13 20:39:04 1
314 	/* 玩家关卡技能 */
315 	int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
317 	//退出跨服关卡
318 	int32			ExitRoom(LuaPlus::LuaState *state);
320 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\GameTableData.h 90 KB H 文件 2013/3/10 12:14:57 2018/9/13 20:39:04 2018/9/13 20:39:04 1
2664 	int32 m_nActivePoint;       //星座名称	
2665 };
2667 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2668 #define TABLE_WORLD_NAME	(1017)
2669 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 12:14:57 2018/9/13 20:39:04 2018/9/13 20:39:04 1
352 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
354 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
356 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
357 	{TABLE_WORLD_NAME, "worldname"},
359 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 12:15:35 2018/9/13 20:39:05 2018/9/13 20:39:05 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 12:16:20 2018/9/13 20:39:06 2018/9/13 20:39:06 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 12:16:21 2018/9/13 20:39:06 2018/9/13 20:39:06 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 12:16:21 2018/9/13 20:39:06 2018/9/13 20:39:06 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 12:16:21 2018/9/13 20:39:06 2018/9/13 20:39:06 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 12:16:21 2018/9/13 20:39:06 2018/9/13 20:39:06 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 12:16:22 2018/9/13 20:39:06 2018/9/13 20:39:06 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 12:16:22 2018/9/13 20:39:06 2018/9/13 20:39:06 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 12:16:24 2018/9/13 20:39:06 2018/9/13 20:39:06 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 12:16:28 2018/9/13 20:39:06 2018/9/13 20:39:06 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 12:17:26 2018/9/13 20:39:07 2018/9/13 20:39:07 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:17:42 2018/9/13 20:39:08 2018/9/13 20:39:08 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\LuaFunction.h 298 KB H 文件 2013/3/10 12:17:52 2018/9/13 20:39:08 2018/9/13 20:39:08 9
9005 int32	LuaFunction_SetGuildParam( Lua_State *L);
9007 /**
9008 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9009 * @param	mapid_t	 mapid	整数  场景id
9010 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9016 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9018 /**
9019 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9020 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9021 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10082 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10084 /**
10085 * @brief	跨服PVP注册场景
10086 * @param	int32				nType	战场类型
10087 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10090 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10092 /**
10093 * @brief	请求进入跨服帮会战场
10094 * @param	ut_id_map	 mapId	玩家所在场景ID
10095 * @param	ut_id_obj	 selfId	玩家ObjID
10098 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10100 /**
10101 * @brief	跨服帮战报名
10102 * @param	ut_id_map	 mapId	玩家所在场景ID
10103 * @param	ut_id_obj	 selfId	玩家ObjID
10106 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10108 /**
10109 * @brief	通知GL跨服帮战结果
10110 * @param	ut_id_map	 mapId	玩家所在场景ID
10111 * @param	ut_id		 WorldID 赢方世界ID
10117 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10119 /**
10120 * @brief	跨服帮会战赛季当前周数
10121 * @param	无参数
10122 * @return	int
10124 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10126 /**
10127 * @brief	获取跨服帮战当前赛季的比赛场次
10128 * @return	int
10129 */
10362 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10364 /**
10365 跨服副本搜索
10366 * @param1	ut_id_map mapId
10367 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 12:18:03 2018/9/13 20:39:08 2018/9/13 20:39:08 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:18:04 2018/9/13 20:39:08 2018/9/13 20:39:08 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 12:18:04 2018/9/13 20:39:08 2018/9/13 20:39:08 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:18:05 2018/9/13 20:39:08 2018/9/13 20:39:08 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 12:18:28 2018/9/13 20:39:08 2018/9/13 20:39:08 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 12:18:42 2018/9/13 20:39:09 2018/9/13 20:39:09 5
339 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
340 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
341 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
342 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
343 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
344 #define MPVP_JOIN_TIME_SIZE					(6)
344 #define MPVP_JOIN_TIME_SIZE					(6)
345 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
347 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
349 #define MAX_HORSEMONEY_NUM						(999999)
350 #define MAX_XINYU_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Enum.h 84 KB H 文件 2013/3/10 12:18:43 2018/9/13 20:39:09 2018/9/13 20:39:09 4
2365 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2367 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2369 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2370 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2371 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2372 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2374 	GD_GUILD_MAX_COUNT
2375 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\MessageDefine.h 57 KB H 文件 2013/3/10 12:18:45 2018/9/13 20:39:09 2018/9/13 20:39:09 13
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
807 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
808 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
809 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
810 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
811 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
969 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
970 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
971 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
972 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
973 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
976 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
977 	MESSAGE_GX_COLLECT_MAC														= 3125,//
978 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
980 	END_MESSAGE_GX,
982 	BEGIN_MESSAGE_XG																= 4000,
1118 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1119 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1120 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1121 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1122 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1124 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1125 	MESSAGE_XG_RETMAC															= 4144,
1126 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1127 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1129 	END_MESSAGE_XG,
1129 	END_MESSAGE_XG,
1131 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1132 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1133 	END_PACKET_MG,
1132 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1133 	END_PACKET_MG,
1135 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1136 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1137 	END_PACKET_GM,
1136 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1137 	END_PACKET_GM,
1139 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1140 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1141 	END_PACKET_MGM,
1140 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1141 	END_PACKET_MGM,
1143 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1144 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1145 	END_PACKET_XGM,
1144 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1145 	END_PACKET_XGM,
1147 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1148 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1150 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 12:18:44 2018/9/13 20:39:15 2018/9/13 20:39:15 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\StructDB.h 173 KB H 文件 2013/3/10 12:18:53 2018/9/13 20:39:15 2018/9/13 20:39:15 2
5656 };
5658 /************************************************************************/
5659 /* 跨服战积分的DB存储结构                                               */
5660 /************************************************************************/	
5662 enum MPVPPOINT_SHM_USE_STATS 
5676 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5677 	int32	m_nTotalWinTimes;							//总共获胜的场次
5678 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5679 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5680 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 12:18:55 2018/9/13 20:39:15 2018/9/13 20:39:15 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 12:18:56 2018/9/13 20:39:15 2018/9/13 20:39:15 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 12:18:56 2018/9/13 20:39:15 2018/9/13 20:39:15 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 12:18:59 2018/9/13 20:39:15 2018/9/13 20:39:15 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:00:18 2018/9/13 20:39:09 2018/9/13 20:39:09 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/10 22:00:19 2018/9/13 20:39:09 2018/9/13 20:39:09 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 22:00:23 2018/9/13 20:39:09 2018/9/13 20:39:09 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
174 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
176 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Core\FileConfigConst.h 20 KB H 文件 2013/3/10 22:00:21 2018/9/13 20:39:09 2018/9/13 20:39:09 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 22:00:22 2018/9/13 20:39:09 2018/9/13 20:39:09 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
229 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
230 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
232 //跨服 2v2 战场 by rj 2010-9-21
233 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
234 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Core\Setting.h 34 KB H 文件 2013/3/10 22:00:23 2018/9/13 20:39:09 2018/9/13 20:39:09 22
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1125 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1126 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1128 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1130 struct MULTIGROUP_SERVER_INFO
1131 {
1149 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1150 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1151 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1152 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1153 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1157 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1159 	MULTIGROUP_CONFIG()
1160 	{
1202 		return INVALID_KHAN_INDEX;
1203 	}
1205 	//当前服务器是否跨服关卡报名服务器
1206 	BOOL IsSignUpServer(void)
1207 	{
1208 		if (m_nGroupCount <=0 )
1209 		{
1210 			//不是跨服服务器
1211 			return FALSE;
1212 		}
1219 		return FALSE;
1220 	}
1222 	//当前开不开跨服副本MAP
1223 	BOOL IsMultMapOpen()
1224 	{
1225 		if (m_nGroupCount <=0 )
1226 		{
1227 			//不是跨服服务器
1228 			return FALSE;
1229 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/10 22:00:25 2018/9/13 20:39:09 2018/9/13 20:39:09 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 22:00:26 2018/9/13 20:39:09 2018/9/13 20:39:09 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/10 22:02:15 2018/9/13 20:39:12 2018/9/13 20:39:12 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
663 };
666 /************************************************************************/
667 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
668 /************************************************************************/
669 struct MsgMGRoomBattle
689 };
691 /************************************************************************/
692 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
693 /************************************************************************/
694 struct MsgGMRoomBattle
715 };
716 /************************************************************************/
717 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
718 /************************************************************************/
719 struct MsgXGMRoomBattle_ReplyEnter
729 };
730 /************************************************************************/
731 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
732 /************************************************************************/
733 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
743 };
744 /************************************************************************/
745 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
746 /************************************************************************/
747 struct MsgXGMRoomBattle_Leave
757 };
758 /************************************************************************/
759 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
760 /************************************************************************/
761 struct MsgMGMRoomBattle
778 };
779 /************************************************************************/
780 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
781 /************************************************************************/
782 struct MsgXGMRoomBattle
806 };
807 /************************************************************************/
808 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
809 /************************************************************************/
810 struct MsgMGXRoomBattle
841 };
842 /************************************************************************/
843 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
844 /************************************************************************/
845 struct MsgCXRoomBattle
871 };
874 /************************************************************************/
875 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
876 /************************************************************************/
877 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 22:03:50 2018/9/13 20:39:14 2018/9/13 20:39:14 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KH_OB5\src\khan2-share\TAB\TabDefine_Map_Misc.h 38 KB H 文件 2013/3/10 22:04:07 2018/9/13 20:39:15 2018/9/13 20:39:15 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Client\Game\Data\Struct\GameDataStructSystemTip.h 6 KB H 文件 2013/3/11 12:48:15 2018/9/13 20:36:23 2018/9/13 20:36:23 1
66 	STT_KING_ZHAOJI,							/* 国王召集令进入提示 */
67 	STT_GAMEBATTLE_LAIRD_INVITE_PlAYERAID,		/* 领地战邀请外援 */
68 	STT_MPVP2V2_BATTLE,							/* 跨服PVP2v2战场进入提示 2010-9-23 by rj */
69 	STT_COUNTRY_COLLEAGUE,						/* 国家结盟邀请*/
70 	STT_NUM,									/* 数量 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Client\Game\Table\GameTableData.h 96 KB H 文件 2013/3/10 22:20:24 2018/9/13 20:36:26 2018/9/13 20:36:26 1
3381 	int32 m_nActivePoint;       //星座名称	
3382 };
3384 /* 2010-10-19 by rj 跨服玩家服名称显示 */
3385 #define TABLE_WORLD_NAME	(1017)
3386 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Client\Game\Table\GameTableDefine.h 11 KB H 文件 2013/3/10 22:20:24 2018/9/13 20:36:26 2018/9/13 20:36:26 1
416 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
418 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
420 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
421 	{TABLE_WORLD_NAME, "worldname"},
423 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\MapServer\Server\Other\IMPVPBattle.h 1 KB H 文件 2013/3/10 22:43:46 2018/9/13 20:37:30 2018/9/13 20:37:30 5
4 #include "TypeDefine.h"
5 #include "Player.h"
7 // 跨服战场类型
8 enum MPVPBattleType
9 {
8 enum MPVPBattleType
9 {
10 	MPVPBATTLETYPE_2V2 = 0,					// 跨服 2V2
11 	MPVPBATTLETYPE_6V6,						// 跨服 6V6
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
15 #define MPVPBATTLETYPE_NUM			1		// 跨服战场类型数量
17 // 跨服战场基类接口
18 class IMPVPBattle
19 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\MapServer\Server\Other\MPVP2v2Battle.h 8 KB H 文件 2013/3/10 22:43:47 2018/9/13 20:37:30 2018/9/13 20:37:30 2
6 #include "Player.h"
7 #include "IMPVPBattle.h"
9 #define MBATTLE_TYPE_2V2BATTLE			(20)						// 战场时间表中的跨服 2v2 战场类型
10 #define NUM_MPVP2V2_SIGNUP				(2)							// 报名条目数组大小
11 #define MAX_MPVP2V2_SCENECOUNT			(512)						// 开辟场景数组上限
202 	}
203 };
205 // 双人跨服战场派生类
206 class CMPVP2v2Battle: public IMPVPBattle
207 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\MapServer\Server\Other\MPVPBattleManager.h 2 KB H 文件 2013/3/10 22:43:48 2018/9/13 20:37:30 2018/9/13 20:37:30 3
29 	int32		m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVPBattleType nType);		// 以类型方式获得跨服战场类
49 public:
50 	PLAYERLIST	*GetNearTeamMemberList(Player *pPlayer);		// 工具函数，获取附近队友
55 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
57 private:
58 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
59 	PLAYERLIST		m_lsNearTeamMember;							// 附近队友列表
60 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Share\MessageDefine.h 49 KB H 文件 2013/3/10 10:49:07 2018/9/13 20:37:31 2018/9/13 20:37:31 3
142 	END_PACKET_DD,
144 	BEGIN_PACKET_GG																=  750,
145 	PACKET_GG_MPVP2V2SCENENOTIFY												=  751,///<	// 跨服战场场景线程通知消息 2010-9-23 by rj
146 	PACKET_GG_SCENENOTIFY														=  752,///<
147 	PACKET_GS_ASKDATA															=  753,///<
438 	PACKET_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
439 	PACKET_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
440 	PACKET_CX_MPVP2V2_BATTLE													= 1274,// by rj 2010-9-21 跨服战场
441 	PACKET_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
442 	PACKET_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
763 	PACKET_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
764 	PACKET_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
765 	PACKET_XC_MPVP2V2_BATTLE													= 2326,// by rj 2010-9-21 跨服战场
766 	PACKET_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
767 	PACKET_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 12:39:52 2018/9/13 20:37:30 2018/9/13 20:37:30 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 12:39:52 2018/9/13 20:37:30 2018/9/13 20:37:30 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Share\Core\ScriptDef.h 17 KB H 文件 2013/3/10 12:39:56 2018/9/13 20:37:30 2018/9/13 20:37:30 2
62 #define PVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303000)
63 #define PVP2V2_BATTLE_FLOW_SCRIPT_ID						(303001)
65 #define MPVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303100)		// 跨服 2v2 战场 by rj 2010-9-21
66 #define MPVP2V2_BATTLE_FLOW_SCRIPT_ID						(303101)
68 #define PVP6V6_BATTLE_SIGNUP_SCRIPT_ID						(303005)
213 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("OnSignupResult")
214 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
216 //跨服 2v2 战场 by rj 2010-9-21
217 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("OnMBattleMatchInfo")
218 #define DEF_MPVP2V2_BATTLE_BATTLESCENETRANS					("OnMPVP2v2BattleChangeScene")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\Khan2Unicode\Share\Core\Setting.h 29 KB H 文件 2013/3/10 12:39:56 2018/9/13 20:37:30 2018/9/13 20:37:30 2
1014 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1015 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1016 	int32					m_nMax2v2SceneCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1017 	int32					m_nMax6v6SceneCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1019 	MULTIGROUP_CONFIG()
1020 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 13:48:54 2018/9/13 20:38:02 2018/9/13 20:38:02 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:48:58 2018/9/13 20:38:02 2018/9/13 20:38:02 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
70 	STT_NUM,									

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\GameScriptFunctionMySelf.h 17 KB H 文件 2013/3/10 13:49:14 2018/9/13 20:38:03 2018/9/13 20:38:03 1
319 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
320 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
322 	//退出跨服关卡
323 	int32			ExitRoom(LuaPlus::LuaState *state);
325 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\GameTableData.h 97 KB H 文件 2013/3/10 13:49:24 2018/9/13 20:38:03 2018/9/13 20:38:03 1
2677 	int32 m_nActivePoint;       //星座名称	
2678 };
2680 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2681 #define TABLE_WORLD_NAME	(1017)
2682 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\GameTableDefine.h 13 KB H 文件 2013/3/10 13:49:25 2018/9/13 20:38:03 2018/9/13 20:38:03 1
352 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
354 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
356 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
357 	{TABLE_WORLD_NAME, "worldname"},
359 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:50:07 2018/9/13 20:38:04 2018/9/13 20:38:04 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:50:55 2018/9/13 20:38:05 2018/9/13 20:38:05 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:50:55 2018/9/13 20:38:05 2018/9/13 20:38:05 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:50:55 2018/9/13 20:38:05 2018/9/13 20:38:05 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:50:55 2018/9/13 20:38:05 2018/9/13 20:38:05 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:50:56 2018/9/13 20:38:05 2018/9/13 20:38:05 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:50:56 2018/9/13 20:38:05 2018/9/13 20:38:05 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:50:56 2018/9/13 20:38:05 2018/9/13 20:38:05 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 13:50:58 2018/9/13 20:38:05 2018/9/13 20:38:05 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:51:03 2018/9/13 20:38:05 2018/9/13 20:38:05 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 13:52:03 2018/9/13 20:38:06 2018/9/13 20:38:06 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:52:20 2018/9/13 20:38:07 2018/9/13 20:38:07 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\LuaFunction.h 312 KB H 文件 2013/3/10 13:52:31 2018/9/13 20:38:07 2018/9/13 20:38:07 9
9064 int32	LuaFunction_SetGuildParam( Lua_State *L);
9066 /**
9067 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9068 * @param	mapid_t	 mapid	整数  场景id
9069 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9075 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9077 /**
9078 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9079 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9080 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10141 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10143 /**
10144 * @brief	跨服PVP注册场景
10145 * @param	int32				nType	战场类型
10146 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10149 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10151 /**
10152 * @brief	请求进入跨服帮会战场
10153 * @param	ut_id_map	 mapId	玩家所在场景ID
10154 * @param	ut_id_obj	 selfId	玩家ObjID
10157 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10159 /**
10160 * @brief	跨服帮战报名
10161 * @param	ut_id_map	 mapId	玩家所在场景ID
10162 * @param	ut_id_obj	 selfId	玩家ObjID
10165 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10167 /**
10168 * @brief	通知GL跨服帮战结果
10169 * @param	ut_id_map	 mapId	玩家所在场景ID
10170 * @param	ut_id		 WorldID 赢方世界ID
10176 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10178 /**
10179 * @brief	跨服帮会战赛季当前周数
10180 * @param	无参数
10181 * @return	int
10183 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10185 /**
10186 * @brief	获取跨服帮战当前赛季的比赛场次
10187 * @return	int
10188 */
10421 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10423 /**
10424 跨服副本搜索
10425 * @param1	ut_id_map mapId
10426 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:52:41 2018/9/13 20:38:07 2018/9/13 20:38:07 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:52:42 2018/9/13 20:38:07 2018/9/13 20:38:07 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:52:42 2018/9/13 20:38:07 2018/9/13 20:38:07 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:52:43 2018/9/13 20:38:07 2018/9/13 20:38:07 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 13:53:07 2018/9/13 20:38:08 2018/9/13 20:38:08 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Define.h 40 KB H 文件 2013/3/10 13:53:21 2018/9/13 20:38:08 2018/9/13 20:38:08 6
341 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
342 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
343 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
344 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
345 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
346 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_JOIN_TIME_SIZE					(6)
347 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
349 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
351 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
353 #define MAX_HORSEMONEY_NUM						(999999)
671 #define MAX_GARDEN_ANGLE_FEED_NUM_PERDAY (5)	//守护兽每天的最大喂养次数
672 #define INVALID_GARDEN_NUM (0)					//无效数据
673 #define MAX_SERVER_CONNECTOR_GARDEN (1)			//跨服家园最大数量
674 //-------------------
675 #define MAX_EQUIP_SAVE_TMP_PURPLE_ATTR (3)		//装备紫属性个数保存最大值

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Enum.h 86 KB H 文件 2013/3/10 13:53:23 2018/9/13 20:38:08 2018/9/13 20:38:08 4
2377 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2379 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2381 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2382 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2383 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2384 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2386 	GD_GUILD_MAX_COUNT
2387 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\MessageDefine.h 60 KB H 文件 2013/3/10 13:53:24 2018/9/13 20:38:08 2018/9/13 20:38:08 13
151 	END_MESSAGE_DD,
153 	BEGIN_MESSAGE_GG																=  750,
154 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
155 	MESSAGE_GG_MAPNOTIFY															=  752,///<
156 	MESSAGE_GS_ASKDATA															=  753,///<
454 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
455 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
456 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
457 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
458 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
843 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
844 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
845 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
846 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
847 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1032 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1033 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1034 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1035 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
1036 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1039 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1040 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1041 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1042 	MESSAGE_GX_GARDEN															= 3127,//家园
1043 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1183 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1184 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1185 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1186 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1187 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1189 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1190 	MESSAGE_XG_RETMAC															= 4144,
1191 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1192 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1193 	MESSAGE_XG_GARDEN															= 4147,//家园
1194 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1194 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1196 	END_MESSAGE_XG,
1198 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1199 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1200 	END_PACKET_MG,
1199 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1200 	END_PACKET_MG,
1202 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1203 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1204 	END_PACKET_GM,
1203 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1204 	END_PACKET_GM,
1206 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1207 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1208 	END_PACKET_MGM,
1207 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1208 	END_PACKET_MGM,
1210 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1211 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1212 	END_PACKET_XGM,
1211 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1212 	END_PACKET_XGM,
1214 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1215 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1217 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:53:24 2018/9/13 20:38:16 2018/9/13 20:38:16 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\StructDB.h 176 KB H 文件 2013/3/10 13:53:32 2018/9/13 20:38:16 2018/9/13 20:38:16 2
5686 };
5688 /************************************************************************/
5689 /* 跨服战积分的DB存储结构                                               */
5690 /************************************************************************/	
5692 enum MPVPPOINT_SHM_USE_STATS 
5706 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5707 	int32	m_nTotalWinTimes;							//总共获胜的场次
5708 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5709 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5710 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:53:34 2018/9/13 20:38:16 2018/9/13 20:38:16 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 13:53:35 2018/9/13 20:38:16 2018/9/13 20:38:16 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:53:35 2018/9/13 20:38:16 2018/9/13 20:38:16 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 13:53:38 2018/9/13 20:38:16 2018/9/13 20:38:16 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 11:03:15 2018/9/13 20:38:08 2018/9/13 20:38:08 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 11:03:16 2018/9/13 20:38:08 2018/9/13 20:38:08 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Core\act_define.h 30 KB H 文件 2013/3/11 11:03:21 2018/9/13 20:38:08 2018/9/13 20:38:08 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Core\FileConfigConst.h 21 KB H 文件 2013/3/11 11:03:18 2018/9/13 20:38:08 2018/9/13 20:38:08 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Core\ScriptIDConst.h 22 KB H 文件 2013/3/11 11:03:20 2018/9/13 20:38:08 2018/9/13 20:38:08 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
244 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
245 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
247 //跨服 2v2 战场 by rj 2010-9-21
248 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
249 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Core\Setting.h 37 KB H 文件 2013/3/11 11:03:20 2018/9/13 20:38:08 2018/9/13 20:38:08 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
494 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
495 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
496 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
498 	BASE_SETTING()
499 	{
1184 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1185 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1187 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1189 struct MULTIGROUP_SERVER_INFO
1190 {
1208 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1209 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1210 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1211 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1212 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1213 	int32					m_nMaxMGuildMapCnt;
1215 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1213 	int32					m_nMaxMGuildMapCnt;
1215 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1216 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1218 	MULTIGROUP_CONFIG()
1219 	{
1261 		return INVALID_KHAN_INDEX;
1262 	}
1264 	//当前服务器是否跨服关卡报名服务器
1265 	BOOL IsSignUpServer(void)
1266 	{
1267 		if (m_nGroupCount <=0 )
1268 		{
1269 			//不是跨服服务器
1270 			return FALSE;
1271 		}
1278 		return FALSE;
1279 	}
1281 	//当前开不开跨服副本MAP
1282 	BOOL IsMultMapOpen()
1283 	{
1284 		if (m_nGroupCount <=0 )
1285 		{
1286 			//不是跨服服务器
1287 			return FALSE;
1288 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/11 11:03:22 2018/9/13 20:38:08 2018/9/13 20:38:08 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 11:03:23 2018/9/13 20:38:08 2018/9/13 20:38:08 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 11:05:25 2018/9/13 20:38:12 2018/9/13 20:38:12 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
665 };
668 /************************************************************************/
669 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
670 /************************************************************************/
671 struct MsgMGRoomBattle
691 };
693 /************************************************************************/
694 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
695 /************************************************************************/
696 struct MsgGMRoomBattle
717 };
718 /************************************************************************/
719 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
720 /************************************************************************/
721 struct MsgXGMRoomBattle_ReplyEnter
731 };
732 /************************************************************************/
733 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
734 /************************************************************************/
735 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
745 };
746 /************************************************************************/
747 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
748 /************************************************************************/
749 struct MsgXGMRoomBattle_Leave
759 };
760 /************************************************************************/
761 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
762 /************************************************************************/
763 struct MsgMGMRoomBattle
780 };
781 /************************************************************************/
782 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
783 /************************************************************************/
784 struct MsgXGMRoomBattle
808 };
809 /************************************************************************/
810 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
811 /************************************************************************/
812 struct MsgMGXRoomBattle
843 };
844 /************************************************************************/
845 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
846 /************************************************************************/
847 struct MsgCXRoomBattle
873 };
876 /************************************************************************/
877 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
878 /************************************************************************/
879 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 11:07:13 2018/9/13 20:38:15 2018/9/13 20:38:15 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_hk_cb\src\khan2-share\TAB\TabDefine_Map_Misc.h 41 KB H 文件 2013/3/11 11:07:33 2018/9/13 20:38:16 2018/9/13 20:38:16 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 13:54:15 2018/9/13 20:38:18 2018/9/13 20:38:18 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:54:19 2018/9/13 20:38:18 2018/9/13 20:38:18 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
72 	STT_RECRUIT_INVITE,		

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\GameScriptFunctionMySelf.h 18 KB H 文件 2013/3/10 13:54:36 2018/9/13 20:38:19 2018/9/13 20:38:19 1
321 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
322 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
324 	//退出跨服关卡
325 	int32			ExitRoom(LuaPlus::LuaState *state);
327 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\GameTableData.h 103 KB H 文件 2013/3/10 13:54:47 2018/9/13 20:38:19 2018/9/13 20:38:19 1
2694 	int32 m_nActivePoint;       //星座名称	
2695 };
2697 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2698 #define TABLE_WORLD_NAME	(1017)
2699 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\GameTableDefine.h 13 KB H 文件 2013/3/10 13:54:47 2018/9/13 20:38:19 2018/9/13 20:38:19 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:55:31 2018/9/13 20:38:20 2018/9/13 20:38:20 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:56:23 2018/9/13 20:38:21 2018/9/13 20:38:21 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:56:23 2018/9/13 20:38:21 2018/9/13 20:38:21 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:56:23 2018/9/13 20:38:21 2018/9/13 20:38:21 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:56:23 2018/9/13 20:38:21 2018/9/13 20:38:21 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:56:24 2018/9/13 20:38:21 2018/9/13 20:38:21 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:56:24 2018/9/13 20:38:21 2018/9/13 20:38:21 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:56:24 2018/9/13 20:38:21 2018/9/13 20:38:21 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 13:56:27 2018/9/13 20:38:21 2018/9/13 20:38:21 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:56:31 2018/9/13 20:38:21 2018/9/13 20:38:21 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\GMCommand.h 16 KB H 文件 2013/3/10 13:57:42 2018/9/13 20:38:22 2018/9/13 20:38:22 1
285 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
286 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
288 	// 增加帮会跨服战胜利次数
289 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
291 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:58:01 2018/9/13 20:38:23 2018/9/13 20:38:23 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\LuaFunction.h 330 KB H 文件 2013/3/10 13:58:14 2018/9/13 20:38:23 2018/9/13 20:38:23 9
9155 int32	LuaFunction_SetGuildParam( Lua_State *L);
9157 /**
9158 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9159 * @param	mapid_t	 mapid	整数  场景id
9160 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9166 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9168 /**
9169 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9170 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9171 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10232 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10234 /**
10235 * @brief	跨服PVP注册场景
10236 * @param	int32				nType	战场类型
10237 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10240 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10242 /**
10243 * @brief	请求进入跨服帮会战场
10244 * @param	ut_id_map	 mapId	玩家所在场景ID
10245 * @param	ut_id_obj	 selfId	玩家ObjID
10248 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10250 /**
10251 * @brief	跨服帮战报名
10252 * @param	ut_id_map	 mapId	玩家所在场景ID
10253 * @param	ut_id_obj	 selfId	玩家ObjID
10256 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10258 /**
10259 * @brief	通知GL跨服帮战结果
10260 * @param	ut_id_map	 mapId	玩家所在场景ID
10261 * @param	ut_id		 WorldID 赢方世界ID
10267 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10269 /**
10270 * @brief	跨服帮会战赛季当前周数
10271 * @param	无参数
10272 * @return	int
10274 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10276 /**
10277 * @brief	获取跨服帮战当前赛季的比赛场次
10278 * @return	int
10279 */
10512 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10514 /**
10515 跨服副本搜索
10516 * @param1	ut_id_map mapId
10517 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:58:28 2018/9/13 20:38:23 2018/9/13 20:38:23 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:58:29 2018/9/13 20:38:23 2018/9/13 20:38:23 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:58:30 2018/9/13 20:38:23 2018/9/13 20:38:23 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:58:30 2018/9/13 20:38:23 2018/9/13 20:38:23 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 13:58:59 2018/9/13 20:38:23 2018/9/13 20:38:23 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Define.h 43 KB H 文件 2013/3/10 13:59:18 2018/9/13 20:38:24 2018/9/13 20:38:24 5
341 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
342 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
343 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
344 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
345 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
346 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_JOIN_TIME_SIZE					(6)
347 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
349 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
351 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
353 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Enum.h 88 KB H 文件 2013/3/10 13:59:20 2018/9/13 20:38:24 2018/9/13 20:38:24 4
2384 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2386 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2388 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2389 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2390 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2391 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2393 	GD_GUILD_MAX_COUNT
2394 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\MessageDefine.h 61 KB H 文件 2013/3/10 13:59:21 2018/9/13 20:38:24 2018/9/13 20:38:24 13
151 	END_MESSAGE_DD,
153 	BEGIN_MESSAGE_GG																=  750,
154 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
155 	MESSAGE_GG_MAPNOTIFY															=  752,///<
156 	MESSAGE_GS_ASKDATA															=  753,///<
454 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
455 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
456 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
457 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
458 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
851 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
852 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
853 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
854 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
855 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1046 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1047 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1048 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1049 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 重加载配置
1050 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1053 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1054 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1055 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1056 	MESSAGE_GX_GARDEN															= 3127,//家园
1057 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1198 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1199 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1200 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1201 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1202 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1204 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1205 	MESSAGE_XG_RETMAC															= 4144,
1206 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1207 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1208 	MESSAGE_XG_GARDEN															= 4147,//家园
1209 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1210 	MESSAGE_XG_CHANNELMERIDIAN													= 4149,//经脉
1212 	END_MESSAGE_XG,
1214 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1218 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1222 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1226 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1230 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1231 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1233 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:59:20 2018/9/13 20:38:33 2018/9/13 20:38:33 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\StructDB.h 183 KB H 文件 2013/3/10 13:59:31 2018/9/13 20:38:33 2018/9/13 20:38:33 2
5769 };
5771 /************************************************************************/
5772 /* 跨服战积分的DB存储结构                                               */
5773 /************************************************************************/	
5775 enum MPVPPOINT_SHM_USE_STATS 
5789 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5790 	int32	m_nTotalWinTimes;							//总共获胜的场次
5791 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5792 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5793 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:59:33 2018/9/13 20:38:33 2018/9/13 20:38:33 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 13:59:34 2018/9/13 20:38:33 2018/9/13 20:38:33 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:59:34 2018/9/13 20:38:33 2018/9/13 20:38:33 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\StructTopList.h 10 KB H 文件 2013/3/10 13:59:38 2018/9/13 20:38:33 2018/9/13 20:38:33 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 11:07:46 2018/9/13 20:38:24 2018/9/13 20:38:24 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 11:07:47 2018/9/13 20:38:24 2018/9/13 20:38:24 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Core\act_define.h 32 KB H 文件 2013/3/11 11:07:52 2018/9/13 20:38:24 2018/9/13 20:38:24 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Core\FileConfigConst.h 22 KB H 文件 2013/3/11 11:07:49 2018/9/13 20:38:24 2018/9/13 20:38:24 1
269 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
270 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
271 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
273 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
274 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Core\ScriptIDConst.h 24 KB H 文件 2013/3/11 11:07:50 2018/9/13 20:38:24 2018/9/13 20:38:24 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
253 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
254 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
256 //跨服 2v2 战场 by rj 2010-9-21
257 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
258 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Core\Setting.h 38 KB H 文件 2013/3/11 11:07:51 2018/9/13 20:38:24 2018/9/13 20:38:24 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
500 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
501 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
502 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
504 	BASE_SETTING()
505 	{
1221 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1222 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1224 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1226 struct MULTIGROUP_SERVER_INFO
1227 {
1245 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1246 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1247 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1248 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1249 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1253 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1255 	MULTIGROUP_CONFIG()
1256 	{
1298 		return INVALID_KHAN_INDEX;
1299 	}
1301 	//当前服务器是否跨服关卡报名服务器
1302 	BOOL IsSignUpServer(void)
1303 	{
1304 		if (m_nGroupCount <=0 )
1305 		{
1306 			//不是跨服服务器
1307 			return FALSE;
1308 		}
1315 		return FALSE;
1316 	}
1318 	//当前开不开跨服副本MAP
1319 	BOOL IsMultMapOpen()
1320 	{
1321 		if (m_nGroupCount <=0 )
1322 		{
1323 			//不是跨服服务器
1324 			return FALSE;
1325 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\DataBase\ArchiveInterface.h 48 KB H 文件 2013/3/11 11:07:53 2018/9/13 20:38:24 2018/9/13 20:38:24 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\DataBase\SqlStatement.h 8 KB H 文件 2013/3/11 11:07:54 2018/9/13 20:38:24 2018/9/13 20:38:24 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 11:10:15 2018/9/13 20:38:29 2018/9/13 20:38:29 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 11:12:06 2018/9/13 20:38:32 2018/9/13 20:38:32 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_kr_cb\src\khan2-share\TAB\TabDefine_Map_Misc.h 44 KB H 文件 2013/3/11 11:12:28 2018/9/13 20:38:33 2018/9/13 20:38:33 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 14:00:20 2018/9/13 20:38:35 2018/9/13 20:38:35 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 14:00:24 2018/9/13 20:38:35 2018/9/13 20:38:35 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
70 	STT_NUM,									

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\GameScriptFunctionMySelf.h 17 KB H 文件 2013/3/10 14:00:45 2018/9/13 20:38:35 2018/9/13 20:38:35 1
319 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
320 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
322 	//退出跨服关卡
323 	int32			ExitRoom(LuaPlus::LuaState *state);
325 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\GameTableData.h 97 KB H 文件 2013/3/10 14:00:57 2018/9/13 20:38:35 2018/9/13 20:38:35 1
2677 	int32 m_nActivePoint;       //星座名称	
2678 };
2680 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2681 #define TABLE_WORLD_NAME	(1017)
2682 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\GameTableDefine.h 13 KB H 文件 2013/3/10 14:00:57 2018/9/13 20:38:35 2018/9/13 20:38:35 1
352 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
354 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
356 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
357 	{TABLE_WORLD_NAME, "worldname"},
359 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 14:01:47 2018/9/13 20:38:37 2018/9/13 20:38:37 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 14:02:43 2018/9/13 20:38:38 2018/9/13 20:38:38 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 14:02:44 2018/9/13 20:38:38 2018/9/13 20:38:38 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 14:02:44 2018/9/13 20:38:38 2018/9/13 20:38:38 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 14:02:44 2018/9/13 20:38:38 2018/9/13 20:38:38 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 14:02:45 2018/9/13 20:38:38 2018/9/13 20:38:38 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 14:02:45 2018/9/13 20:38:38 2018/9/13 20:38:38 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 14:02:45 2018/9/13 20:38:38 2018/9/13 20:38:38 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 14:02:47 2018/9/13 20:38:38 2018/9/13 20:38:38 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 14:02:51 2018/9/13 20:38:38 2018/9/13 20:38:38 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 14:03:52 2018/9/13 20:38:40 2018/9/13 20:38:40 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 14:04:08 2018/9/13 20:38:40 2018/9/13 20:38:40 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\LuaFunction.h 312 KB H 文件 2013/3/10 14:04:19 2018/9/13 20:38:40 2018/9/13 20:38:40 9
9064 int32	LuaFunction_SetGuildParam( Lua_State *L);
9066 /**
9067 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9068 * @param	mapid_t	 mapid	整数  场景id
9069 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9075 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9077 /**
9078 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9079 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9080 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10141 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10143 /**
10144 * @brief	跨服PVP注册场景
10145 * @param	int32				nType	战场类型
10146 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10149 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10151 /**
10152 * @brief	请求进入跨服帮会战场
10153 * @param	ut_id_map	 mapId	玩家所在场景ID
10154 * @param	ut_id_obj	 selfId	玩家ObjID
10157 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10159 /**
10160 * @brief	跨服帮战报名
10161 * @param	ut_id_map	 mapId	玩家所在场景ID
10162 * @param	ut_id_obj	 selfId	玩家ObjID
10165 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10167 /**
10168 * @brief	通知GL跨服帮战结果
10169 * @param	ut_id_map	 mapId	玩家所在场景ID
10170 * @param	ut_id		 WorldID 赢方世界ID
10176 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10178 /**
10179 * @brief	跨服帮会战赛季当前周数
10180 * @param	无参数
10181 * @return	int
10183 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10185 /**
10186 * @brief	获取跨服帮战当前赛季的比赛场次
10187 * @return	int
10188 */
10421 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10423 /**
10424 跨服副本搜索
10425 * @param1	ut_id_map mapId
10426 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 14:04:30 2018/9/13 20:38:40 2018/9/13 20:38:40 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 14:04:31 2018/9/13 20:38:41 2018/9/13 20:38:41 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 14:04:31 2018/9/13 20:38:41 2018/9/13 20:38:41 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 14:04:31 2018/9/13 20:38:41 2018/9/13 20:38:41 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 14:04:55 2018/9/13 20:38:41 2018/9/13 20:38:41 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Define.h 40 KB H 文件 2013/3/10 14:05:09 2018/9/13 20:38:42 2018/9/13 20:38:42 6
341 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
342 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
343 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
344 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
345 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
346 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_JOIN_TIME_SIZE					(6)
347 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
349 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
351 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
353 #define MAX_HORSEMONEY_NUM						(999999)
671 #define MAX_GARDEN_ANGLE_FEED_NUM_PERDAY (5)	//守护兽每天的最大喂养次数
672 #define INVALID_GARDEN_NUM (0)					//无效数据
673 #define MAX_SERVER_CONNECTOR_GARDEN (1)			//跨服家园最大数量
674 //-------------------
675 #define MAX_EQUIP_SAVE_TMP_PURPLE_ATTR (3)		//装备紫属性个数保存最大值

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Enum.h 86 KB H 文件 2013/3/10 14:05:10 2018/9/13 20:38:42 2018/9/13 20:38:42 4
2377 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2379 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2381 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2382 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2383 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2384 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2386 	GD_GUILD_MAX_COUNT
2387 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\MessageDefine.h 60 KB H 文件 2013/3/10 14:05:11 2018/9/13 20:38:42 2018/9/13 20:38:42 13
151 	END_MESSAGE_DD,
153 	BEGIN_MESSAGE_GG																=  750,
154 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
155 	MESSAGE_GG_MAPNOTIFY															=  752,///<
156 	MESSAGE_GS_ASKDATA															=  753,///<
454 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
455 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
456 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
457 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
458 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
843 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
844 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
845 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
846 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
847 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1032 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1033 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1034 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1035 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
1036 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1039 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1040 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1041 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1042 	MESSAGE_GX_GARDEN															= 3127,//家园
1043 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1183 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1184 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1185 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1186 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1187 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1189 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1190 	MESSAGE_XG_RETMAC															= 4144,
1191 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1192 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1193 	MESSAGE_XG_GARDEN															= 4147,//家园
1194 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1194 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1196 	END_MESSAGE_XG,
1198 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1199 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1200 	END_PACKET_MG,
1199 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1200 	END_PACKET_MG,
1202 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1203 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1204 	END_PACKET_GM,
1203 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1204 	END_PACKET_GM,
1206 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1207 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1208 	END_PACKET_MGM,
1207 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1208 	END_PACKET_MGM,
1210 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1211 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1212 	END_PACKET_XGM,
1211 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1212 	END_PACKET_XGM,
1214 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1215 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1217 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 14:05:11 2018/9/13 20:38:48 2018/9/13 20:38:48 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\StructDB.h 176 KB H 文件 2013/3/10 14:05:20 2018/9/13 20:38:48 2018/9/13 20:38:48 2
5686 };
5688 /************************************************************************/
5689 /* 跨服战积分的DB存储结构                                               */
5690 /************************************************************************/	
5692 enum MPVPPOINT_SHM_USE_STATS 
5706 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5707 	int32	m_nTotalWinTimes;							//总共获胜的场次
5708 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5709 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5710 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 14:05:22 2018/9/13 20:38:48 2018/9/13 20:38:48 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 14:05:23 2018/9/13 20:38:48 2018/9/13 20:38:48 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 14:05:22 2018/9/13 20:38:48 2018/9/13 20:38:48 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 14:05:26 2018/9/13 20:38:48 2018/9/13 20:38:48 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 11:12:42 2018/9/13 20:38:41 2018/9/13 20:38:41 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 11:12:43 2018/9/13 20:38:41 2018/9/13 20:38:41 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Core\act_define.h 30 KB H 文件 2013/3/11 11:12:47 2018/9/13 20:38:41 2018/9/13 20:38:41 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Core\FileConfigConst.h 21 KB H 文件 2013/3/11 11:12:45 2018/9/13 20:38:41 2018/9/13 20:38:41 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Core\ScriptIDConst.h 22 KB H 文件 2013/3/11 11:12:46 2018/9/13 20:38:42 2018/9/13 20:38:42 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
244 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
245 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
247 //跨服 2v2 战场 by rj 2010-9-21
248 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
249 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Core\Setting.h 37 KB H 文件 2013/3/11 11:12:47 2018/9/13 20:38:42 2018/9/13 20:38:42 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
494 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
495 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
496 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
498 	BASE_SETTING()
499 	{
1184 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1185 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1187 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1189 struct MULTIGROUP_SERVER_INFO
1190 {
1208 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1209 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1210 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1211 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1212 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1213 	int32					m_nMaxMGuildMapCnt;
1215 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1213 	int32					m_nMaxMGuildMapCnt;
1215 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1216 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1218 	MULTIGROUP_CONFIG()
1219 	{
1261 		return INVALID_KHAN_INDEX;
1262 	}
1264 	//当前服务器是否跨服关卡报名服务器
1265 	BOOL IsSignUpServer(void)
1266 	{
1267 		if (m_nGroupCount <=0 )
1268 		{
1269 			//不是跨服服务器
1270 			return FALSE;
1271 		}
1278 		return FALSE;
1279 	}
1281 	//当前开不开跨服副本MAP
1282 	BOOL IsMultMapOpen()
1283 	{
1284 		if (m_nGroupCount <=0 )
1285 		{
1286 			//不是跨服服务器
1287 			return FALSE;
1288 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/11 11:12:49 2018/9/13 20:38:42 2018/9/13 20:38:42 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 11:12:50 2018/9/13 20:38:42 2018/9/13 20:38:42 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 11:14:57 2018/9/13 20:38:45 2018/9/13 20:38:45 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
665 };
668 /************************************************************************/
669 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
670 /************************************************************************/
671 struct MsgMGRoomBattle
691 };
693 /************************************************************************/
694 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
695 /************************************************************************/
696 struct MsgGMRoomBattle
717 };
718 /************************************************************************/
719 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
720 /************************************************************************/
721 struct MsgXGMRoomBattle_ReplyEnter
731 };
732 /************************************************************************/
733 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
734 /************************************************************************/
735 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
745 };
746 /************************************************************************/
747 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
748 /************************************************************************/
749 struct MsgXGMRoomBattle_Leave
759 };
760 /************************************************************************/
761 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
762 /************************************************************************/
763 struct MsgMGMRoomBattle
780 };
781 /************************************************************************/
782 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
783 /************************************************************************/
784 struct MsgXGMRoomBattle
808 };
809 /************************************************************************/
810 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
811 /************************************************************************/
812 struct MsgMGXRoomBattle
843 };
844 /************************************************************************/
845 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
846 /************************************************************************/
847 struct MsgCXRoomBattle
873 };
876 /************************************************************************/
877 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
878 /************************************************************************/
879 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 11:16:49 2018/9/13 20:38:47 2018/9/13 20:38:47 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_cb\src\khan2-share\TAB\TabDefine_Map_Misc.h 41 KB H 文件 2013/3/11 11:17:08 2018/9/13 20:38:48 2018/9/13 20:38:48 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 14:06:02 2018/9/13 20:38:50 2018/9/13 20:38:50 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 14:06:06 2018/9/13 20:38:50 2018/9/13 20:38:50 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
72 	STT_RECRUIT_INVITE,		

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\GameScriptFunctionMySelf.h 18 KB H 文件 2013/3/10 14:06:23 2018/9/13 20:38:50 2018/9/13 20:38:50 1
321 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
322 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
324 	//退出跨服关卡
325 	int32			ExitRoom(LuaPlus::LuaState *state);
327 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\GameTableData.h 103 KB H 文件 2013/3/10 14:06:33 2018/9/13 20:38:50 2018/9/13 20:38:50 1
2694 	int32 m_nActivePoint;       //星座名称	
2695 };
2697 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2698 #define TABLE_WORLD_NAME	(1017)
2699 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\GameTableDefine.h 13 KB H 文件 2013/3/10 14:06:33 2018/9/13 20:38:50 2018/9/13 20:38:50 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 14:07:17 2018/9/13 20:38:52 2018/9/13 20:38:52 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 14:08:05 2018/9/13 20:38:52 2018/9/13 20:38:52 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 14:08:05 2018/9/13 20:38:52 2018/9/13 20:38:52 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 14:08:05 2018/9/13 20:38:52 2018/9/13 20:38:52 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 14:08:05 2018/9/13 20:38:52 2018/9/13 20:38:52 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 14:08:06 2018/9/13 20:38:52 2018/9/13 20:38:52 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 14:08:06 2018/9/13 20:38:52 2018/9/13 20:38:52 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 14:08:06 2018/9/13 20:38:52 2018/9/13 20:38:52 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 14:08:08 2018/9/13 20:38:52 2018/9/13 20:38:52 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 14:08:13 2018/9/13 20:38:52 2018/9/13 20:38:52 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\GMCommand.h 16 KB H 文件 2013/3/10 14:09:19 2018/9/13 20:38:54 2018/9/13 20:38:54 1
285 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
286 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
288 	// 增加帮会跨服战胜利次数
289 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
291 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 14:09:41 2018/9/13 20:38:54 2018/9/13 20:38:54 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\LuaFunction.h 330 KB H 文件 2013/3/10 14:09:53 2018/9/13 20:38:55 2018/9/13 20:38:55 9
9155 int32	LuaFunction_SetGuildParam( Lua_State *L);
9157 /**
9158 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9159 * @param	mapid_t	 mapid	整数  场景id
9160 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9166 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9168 /**
9169 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9170 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9171 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10232 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10234 /**
10235 * @brief	跨服PVP注册场景
10236 * @param	int32				nType	战场类型
10237 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10240 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10242 /**
10243 * @brief	请求进入跨服帮会战场
10244 * @param	ut_id_map	 mapId	玩家所在场景ID
10245 * @param	ut_id_obj	 selfId	玩家ObjID
10248 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10250 /**
10251 * @brief	跨服帮战报名
10252 * @param	ut_id_map	 mapId	玩家所在场景ID
10253 * @param	ut_id_obj	 selfId	玩家ObjID
10256 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10258 /**
10259 * @brief	通知GL跨服帮战结果
10260 * @param	ut_id_map	 mapId	玩家所在场景ID
10261 * @param	ut_id		 WorldID 赢方世界ID
10267 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10269 /**
10270 * @brief	跨服帮会战赛季当前周数
10271 * @param	无参数
10272 * @return	int
10274 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10276 /**
10277 * @brief	获取跨服帮战当前赛季的比赛场次
10278 * @return	int
10279 */
10512 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10514 /**
10515 跨服副本搜索
10516 * @param1	ut_id_map mapId
10517 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 14:10:05 2018/9/13 20:38:55 2018/9/13 20:38:55 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 14:10:05 2018/9/13 20:38:55 2018/9/13 20:38:55 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 14:10:06 2018/9/13 20:38:55 2018/9/13 20:38:55 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 14:10:06 2018/9/13 20:38:55 2018/9/13 20:38:55 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 14:10:32 2018/9/13 20:38:55 2018/9/13 20:38:55 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Define.h 43 KB H 文件 2013/3/10 14:10:49 2018/9/13 20:38:56 2018/9/13 20:38:56 5
341 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
342 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
343 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
344 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
345 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
346 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_JOIN_TIME_SIZE					(6)
347 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
349 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
351 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
353 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Enum.h 88 KB H 文件 2013/3/10 14:10:51 2018/9/13 20:38:56 2018/9/13 20:38:56 4
2384 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2386 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2388 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2389 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2390 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2391 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2393 	GD_GUILD_MAX_COUNT
2394 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\MessageDefine.h 61 KB H 文件 2013/3/10 14:10:52 2018/9/13 20:38:56 2018/9/13 20:38:56 13
151 	END_MESSAGE_DD,
153 	BEGIN_MESSAGE_GG																=  750,
154 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
155 	MESSAGE_GG_MAPNOTIFY															=  752,///<
156 	MESSAGE_GS_ASKDATA															=  753,///<
454 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
455 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
456 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
457 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
458 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
851 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
852 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
853 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
854 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
855 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1046 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1047 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1048 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1049 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 重加载配置
1050 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1053 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1054 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1055 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1056 	MESSAGE_GX_GARDEN															= 3127,//家园
1057 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1198 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1199 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1200 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1201 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1202 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1204 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1205 	MESSAGE_XG_RETMAC															= 4144,
1206 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1207 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1208 	MESSAGE_XG_GARDEN															= 4147,//家园
1209 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1210 	MESSAGE_XG_CHANNELMERIDIAN													= 4149,//经脉
1212 	END_MESSAGE_XG,
1214 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1218 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1222 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1226 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1230 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1231 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1233 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 14:10:52 2018/9/13 20:39:01 2018/9/13 20:39:01 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\StructDB.h 183 KB H 文件 2013/3/10 14:11:01 2018/9/13 20:39:02 2018/9/13 20:39:02 2
5769 };
5771 /************************************************************************/
5772 /* 跨服战积分的DB存储结构                                               */
5773 /************************************************************************/	
5775 enum MPVPPOINT_SHM_USE_STATS 
5789 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5790 	int32	m_nTotalWinTimes;							//总共获胜的场次
5791 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5792 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5793 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 14:11:03 2018/9/13 20:39:02 2018/9/13 20:39:02 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 14:11:04 2018/9/13 20:39:02 2018/9/13 20:39:02 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 14:11:04 2018/9/13 20:39:02 2018/9/13 20:39:02 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\StructTopList.h 10 KB H 文件 2013/3/10 14:11:07 2018/9/13 20:39:02 2018/9/13 20:39:02 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 11:17:20 2018/9/13 20:38:56 2018/9/13 20:38:56 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 11:17:21 2018/9/13 20:38:56 2018/9/13 20:38:56 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Core\act_define.h 32 KB H 文件 2013/3/11 11:17:26 2018/9/13 20:38:56 2018/9/13 20:38:56 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Core\FileConfigConst.h 22 KB H 文件 2013/3/11 11:17:23 2018/9/13 20:38:56 2018/9/13 20:38:56 1
269 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
270 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
271 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
273 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
274 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Core\ScriptIDConst.h 24 KB H 文件 2013/3/11 11:17:25 2018/9/13 20:38:56 2018/9/13 20:38:56 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
253 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
254 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
256 //跨服 2v2 战场 by rj 2010-9-21
257 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
258 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Core\Setting.h 38 KB H 文件 2013/3/11 11:17:25 2018/9/13 20:38:56 2018/9/13 20:38:56 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
500 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
501 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
502 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
504 	BASE_SETTING()
505 	{
1221 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1222 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1224 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1226 struct MULTIGROUP_SERVER_INFO
1227 {
1245 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1246 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1247 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1248 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1249 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1253 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1255 	MULTIGROUP_CONFIG()
1256 	{
1298 		return INVALID_KHAN_INDEX;
1299 	}
1301 	//当前服务器是否跨服关卡报名服务器
1302 	BOOL IsSignUpServer(void)
1303 	{
1304 		if (m_nGroupCount <=0 )
1305 		{
1306 			//不是跨服服务器
1307 			return FALSE;
1308 		}
1315 		return FALSE;
1316 	}
1318 	//当前开不开跨服副本MAP
1319 	BOOL IsMultMapOpen()
1320 	{
1321 		if (m_nGroupCount <=0 )
1322 		{
1323 			//不是跨服服务器
1324 			return FALSE;
1325 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\DataBase\ArchiveInterface.h 48 KB H 文件 2013/3/11 11:17:27 2018/9/13 20:38:56 2018/9/13 20:38:56 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\DataBase\SqlStatement.h 8 KB H 文件 2013/3/11 11:17:28 2018/9/13 20:38:56 2018/9/13 20:38:56 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 11:19:34 2018/9/13 20:38:59 2018/9/13 20:38:59 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 11:21:12 2018/9/13 20:39:01 2018/9/13 20:39:01 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\khan3_tw_ob\src\khan2-share\TAB\TabDefine_Map_Misc.h 44 KB H 文件 2013/3/11 11:21:31 2018/9/13 20:39:02 2018/9/13 20:39:02 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:20:03 2018/9/13 20:39:18 2018/9/13 20:39:18 1
2652 	int32 m_nActivePoint;       //星座名称	
2653 };
2655 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2656 #define TABLE_WORLD_NAME	(1017)
2657 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:20:03 2018/9/13 20:39:18 2018/9/13 20:39:18 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:22:41 2018/9/13 20:39:21 2018/9/13 20:39:21 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 12:22:50 2018/9/13 20:39:22 2018/9/13 20:39:22 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:23:00 2018/9/13 20:39:22 2018/9/13 20:39:22 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:23:00 2018/9/13 20:39:22 2018/9/13 20:39:22 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\MessageDefine.h 55 KB H 文件 2013/3/10 12:23:37 2018/9/13 20:39:23 2018/9/13 20:39:23 6
157 	END_MESSAGE_DD,
159 	BEGIN_MESSAGE_GG																=  750,
160 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
161 	PACKET_GG_MAPNOTIFY															=  752,///<
162 	MESSAGE_GS_ASKDATA															=  753,///<
453 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
454 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
455 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
456 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
457 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
952 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
953 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
954 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
955 //	MESSAGE_GX_RETCOSTGOLD														= 3120,// 消耗现金返回
956 	MESSAGE_GX_MARBLEBANK_EXPIRE												= 3121,
1097 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1098 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1099 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1100 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1100 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1101 	MESSAGE_XG_REQUEST_MARBLE_BANK												= 4141,// 新跨服战场
1102 	END_MESSAGE_XG,
1104 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:23:37 2018/9/13 20:39:28 2018/9/13 20:39:28 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:04:23 2018/9/13 20:39:22 2018/9/13 20:39:22 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 22:04:24 2018/9/13 20:39:22 2018/9/13 20:39:22 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 22:04:28 2018/9/13 20:39:22 2018/9/13 20:39:22 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 22:04:27 2018/9/13 20:39:23 2018/9/13 20:39:23 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 22:04:27 2018/9/13 20:39:23 2018/9/13 20:39:23 2
1037 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1038 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1039 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1040 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1042 	MULTIGROUP_CONFIG()
1043 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:24:50 2018/9/13 20:39:31 2018/9/13 20:39:31 1
2652 	int32 m_nActivePoint;       //星座名称	
2653 };
2655 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2656 #define TABLE_WORLD_NAME	(1017)
2657 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:24:50 2018/9/13 20:39:31 2018/9/13 20:39:31 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:27:26 2018/9/13 20:39:34 2018/9/13 20:39:34 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 12:27:35 2018/9/13 20:39:34 2018/9/13 20:39:34 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:27:45 2018/9/13 20:39:35 2018/9/13 20:39:35 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:27:45 2018/9/13 20:39:35 2018/9/13 20:39:35 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\MessageDefine.h 55 KB H 文件 2013/3/10 12:28:23 2018/9/13 20:39:36 2018/9/13 20:39:36 6
157 	END_MESSAGE_DD,
159 	BEGIN_MESSAGE_GG																=  750,
160 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
161 	PACKET_GG_MAPNOTIFY															=  752,///<
162 	MESSAGE_GS_ASKDATA															=  753,///<
453 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
454 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
455 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
456 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
457 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
952 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
953 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
954 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
955 //	MESSAGE_GX_RETCOSTGOLD														= 3120,// 消耗现金返回
956 	MESSAGE_GX_MARBLEBANK_EXPIRE												= 3121,
1097 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1098 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1099 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1100 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1100 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1101 	MESSAGE_XG_REQUEST_MARBLE_BANK												= 4141,// 新跨服战场
1102 	END_MESSAGE_XG,
1104 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:28:22 2018/9/13 20:39:41 2018/9/13 20:39:41 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:08:14 2018/9/13 20:39:35 2018/9/13 20:39:35 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 22:08:15 2018/9/13 20:39:35 2018/9/13 20:39:35 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 22:08:19 2018/9/13 20:39:35 2018/9/13 20:39:35 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 22:08:18 2018/9/13 20:39:35 2018/9/13 20:39:35 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB1\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 22:08:19 2018/9/13 20:39:35 2018/9/13 20:39:35 2
1031 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1032 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1033 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1034 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1036 	MULTIGROUP_CONFIG()
1037 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 12:29:08 2018/9/13 20:39:43 2018/9/13 20:39:43 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-client\GameTableData.h 87 KB H 文件 2013/3/10 12:29:34 2018/9/13 20:39:43 2018/9/13 20:39:43 1
2663 	int32 m_nActivePoint;       //星座名称	
2664 };
2666 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2667 #define TABLE_WORLD_NAME	(1017)
2668 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 12:29:34 2018/9/13 20:39:43 2018/9/13 20:39:43 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 12:30:13 2018/9/13 20:39:45 2018/9/13 20:39:45 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 12:31:01 2018/9/13 20:39:46 2018/9/13 20:39:46 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 12:31:01 2018/9/13 20:39:46 2018/9/13 20:39:46 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 12:31:02 2018/9/13 20:39:46 2018/9/13 20:39:46 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 12:31:02 2018/9/13 20:39:46 2018/9/13 20:39:46 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 12:31:02 2018/9/13 20:39:46 2018/9/13 20:39:46 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 12:31:02 2018/9/13 20:39:46 2018/9/13 20:39:46 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 12:31:03 2018/9/13 20:39:46 2018/9/13 20:39:46 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 12:31:09 2018/9/13 20:39:46 2018/9/13 20:39:46 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 12:32:05 2018/9/13 20:39:47 2018/9/13 20:39:47 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:32:20 2018/9/13 20:39:47 2018/9/13 20:39:47 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\LuaFunction.h 292 KB H 文件 2013/3/10 12:32:30 2018/9/13 20:39:47 2018/9/13 20:39:47 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10035 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10037 /**
10038 * @brief	跨服PVP注册场景
10039 * @param	int32				nType	战场类型
10040 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10043 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10045 /**
10046 * @brief	请求进入跨服帮会战场
10047 * @param	ut_id_map	 mapId	玩家所在场景ID
10048 * @param	ut_id_obj	 selfId	玩家ObjID
10051 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10053 /**
10054 * @brief	跨服帮战报名
10055 * @param	ut_id_map	 mapId	玩家所在场景ID
10056 * @param	ut_id_obj	 selfId	玩家ObjID
10059 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10061 /**
10062 * @brief	通知GL跨服帮战结果
10063 * @param	ut_id_map	 mapId	玩家所在场景ID
10064 * @param	ut_id		 WorldID 赢方世界ID
10070 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10072 /**
10073 * @brief	跨服帮会战赛季当前周数
10074 * @param	无参数
10075 * @return	int
10077 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10079 /**
10080 * @brief	获取跨服帮战当前赛季的比赛场次
10081 * @return	int
10082 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 12:32:41 2018/9/13 20:39:48 2018/9/13 20:39:48 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:32:41 2018/9/13 20:39:48 2018/9/13 20:39:48 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 12:32:42 2018/9/13 20:39:48 2018/9/13 20:39:48 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:32:42 2018/9/13 20:39:48 2018/9/13 20:39:48 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 12:33:19 2018/9/13 20:39:48 2018/9/13 20:39:48 5
340 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
341 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
342 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
343 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
344 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
345 #define MPVP_JOIN_TIME_SIZE					(6)
345 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
347 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
347 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
350 /************************************************************************/
351 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 12:33:20 2018/9/13 20:39:49 2018/9/13 20:39:49 4
2352 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2354 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2356 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2357 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2358 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2359 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2361 	GD_GUILD_MAX_COUNT
2362 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\MessageDefine.h 57 KB H 文件 2013/3/10 12:33:22 2018/9/13 20:39:49 2018/9/13 20:39:49 7
157 	END_MESSAGE_DD,
159 	BEGIN_MESSAGE_GG																=  750,
160 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
161 	MESSAGE_GG_MAPNOTIFY															=  752,///<
162 	MESSAGE_GS_ASKDATA															=  753,///<
453 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
454 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
455 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
456 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
457 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
819 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
820 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
821 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
822 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
823 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
983 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
984 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
985 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
986 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
987 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1135 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1136 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1137 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1138 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1139 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1141 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1142 	MESSAGE_XG_RETMAC															= 4144,
1143 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1144 	END_MESSAGE_XG,
1146 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1144 	END_MESSAGE_XG,
1146 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1147 	MESSAGE_XG_REQUEST_MARBLE_BANK												= 4146,	//4141,// 新跨服战场
1149 	MESSAGE_MAX
1150 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 12:33:21 2018/9/13 20:39:54 2018/9/13 20:39:54 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 12:33:30 2018/9/13 20:39:54 2018/9/13 20:39:54 2
5540 };
5542 /************************************************************************/
5543 /* 跨服战积分的DB存储结构                                               */
5544 /************************************************************************/	
5546 enum MPVPPOINT_SHM_USE_STATS 
5560 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5561 	int32	m_nTotalWinTimes;							//总共获胜的场次
5562 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5563 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5564 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 12:33:32 2018/9/13 20:39:54 2018/9/13 20:39:54 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 12:33:32 2018/9/13 20:39:54 2018/9/13 20:39:54 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 12:33:35 2018/9/13 20:39:54 2018/9/13 20:39:54 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:11:57 2018/9/13 20:39:48 2018/9/13 20:39:48 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/10 22:11:57 2018/9/13 20:39:48 2018/9/13 20:39:48 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 22:12:01 2018/9/13 20:39:48 2018/9/13 20:39:48 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 22:12:00 2018/9/13 20:39:48 2018/9/13 20:39:48 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/10 22:12:01 2018/9/13 20:39:48 2018/9/13 20:39:48 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1139 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1140 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1141 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1142 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1143 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1144 	int32					m_nMaxMGuildMapCnt;
1146 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/10 22:12:03 2018/9/13 20:39:48 2018/9/13 20:39:48 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 22:12:04 2018/9/13 20:39:48 2018/9/13 20:39:48 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB2\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 22:15:21 2018/9/13 20:39:53 2018/9/13 20:39:53 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 12:34:04 2018/9/13 20:39:55 2018/9/13 20:39:55 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 12:34:08 2018/9/13 20:39:55 2018/9/13 20:39:55 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\GameScriptFunctionMySelf.h 16 KB H 文件 2013/3/10 12:34:29 2018/9/13 20:39:56 2018/9/13 20:39:56 1
314 	/* 玩家关卡技能 */
315 	int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
317 	//退出跨服关卡
318 	int32			ExitRoom(LuaPlus::LuaState *state);
320 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\GameTableData.h 90 KB H 文件 2013/3/10 12:34:39 2018/9/13 20:39:56 2018/9/13 20:39:56 1
2671 	int32 m_nActivePoint;       //星座名称	
2672 };
2674 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2675 #define TABLE_WORLD_NAME	(1017)
2676 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 12:34:39 2018/9/13 20:39:56 2018/9/13 20:39:56 1
354 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
356 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
358 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
359 	{TABLE_WORLD_NAME, "worldname"},
361 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 12:35:18 2018/9/13 20:39:57 2018/9/13 20:39:57 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 12:36:07 2018/9/13 20:39:58 2018/9/13 20:39:58 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 12:36:07 2018/9/13 20:39:58 2018/9/13 20:39:58 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 12:36:08 2018/9/13 20:39:58 2018/9/13 20:39:58 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 12:36:08 2018/9/13 20:39:58 2018/9/13 20:39:58 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 12:36:08 2018/9/13 20:39:58 2018/9/13 20:39:58 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 12:36:08 2018/9/13 20:39:58 2018/9/13 20:39:58 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 12:36:09 2018/9/13 20:39:58 2018/9/13 20:39:58 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 12:36:11 2018/9/13 20:39:58 2018/9/13 20:39:58 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 12:36:15 2018/9/13 20:39:58 2018/9/13 20:39:58 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 12:37:15 2018/9/13 20:39:59 2018/9/13 20:39:59 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:37:31 2018/9/13 20:40:00 2018/9/13 20:40:00 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\LuaFunction.h 299 KB H 文件 2013/3/10 12:37:42 2018/9/13 20:40:00 2018/9/13 20:40:00 9
9005 int32	LuaFunction_SetGuildParam( Lua_State *L);
9007 /**
9008 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9009 * @param	mapid_t	 mapid	整数  场景id
9010 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9016 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9018 /**
9019 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9020 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9021 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10082 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10084 /**
10085 * @brief	跨服PVP注册场景
10086 * @param	int32				nType	战场类型
10087 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10090 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10092 /**
10093 * @brief	请求进入跨服帮会战场
10094 * @param	ut_id_map	 mapId	玩家所在场景ID
10095 * @param	ut_id_obj	 selfId	玩家ObjID
10098 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10100 /**
10101 * @brief	跨服帮战报名
10102 * @param	ut_id_map	 mapId	玩家所在场景ID
10103 * @param	ut_id_obj	 selfId	玩家ObjID
10106 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10108 /**
10109 * @brief	通知GL跨服帮战结果
10110 * @param	ut_id_map	 mapId	玩家所在场景ID
10111 * @param	ut_id		 WorldID 赢方世界ID
10117 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10119 /**
10120 * @brief	跨服帮会战赛季当前周数
10121 * @param	无参数
10122 * @return	int
10124 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10126 /**
10127 * @brief	获取跨服帮战当前赛季的比赛场次
10128 * @return	int
10129 */
10377 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10379 /**
10380 跨服副本搜索
10381 * @param1	ut_id_map mapId
10382 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 12:37:53 2018/9/13 20:40:00 2018/9/13 20:40:00 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:37:54 2018/9/13 20:40:00 2018/9/13 20:40:00 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 12:37:55 2018/9/13 20:40:00 2018/9/13 20:40:00 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:37:55 2018/9/13 20:40:00 2018/9/13 20:40:00 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 12:38:19 2018/9/13 20:40:00 2018/9/13 20:40:00 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Define.h 38 KB H 文件 2013/3/10 12:38:34 2018/9/13 20:40:01 2018/9/13 20:40:01 5
343 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
344 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
345 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
346 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
347 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
348 #define MPVP_JOIN_TIME_SIZE					(6)
348 #define MPVP_JOIN_TIME_SIZE					(6)
349 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
350 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
350 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
351 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
353 #define MAX_HORSEMONEY_NUM						(999999)
354 #define MAX_XINYU_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Enum.h 84 KB H 文件 2013/3/10 12:38:36 2018/9/13 20:40:01 2018/9/13 20:40:01 4
2364 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2366 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2368 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2369 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2370 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2371 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2373 	GD_GUILD_MAX_COUNT
2374 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\MessageDefine.h 58 KB H 文件 2013/3/10 12:38:37 2018/9/13 20:40:01 2018/9/13 20:40:01 14
157 	END_MESSAGE_DD,
159 	BEGIN_MESSAGE_GG																=  750,
160 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
161 	MESSAGE_GG_MAPNOTIFY															=  752,///<
162 	MESSAGE_GS_ASKDATA															=  753,///<
453 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
454 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
455 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
456 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
457 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
820 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
821 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
822 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
823 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
824 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
986 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
987 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
988 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
989 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
990 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
993 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
994 	MESSAGE_GX_COLLECT_MAC														= 3125,//
995 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
996 //	MESSAGE_GX_RETCOSTGOLD														= 3120,// 消耗现金返回
997 	MESSAGE_GX_MARBLEBANK_EXPIRE												= 3127,	//3121,
1138 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1139 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1140 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1141 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1142 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1144 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1145 	MESSAGE_XG_RETMAC															= 4144,
1146 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1147 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1149 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1149 //	MESSAGE_XG_COSTGOLD															= 4140,//消耗金币
1150 	MESSAGE_XG_REQUEST_MARBLE_BANK												= 4147,	//4141,// 新跨服战场
1152 	END_MESSAGE_XG,
1152 	END_MESSAGE_XG,
1154 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1155 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1156 	END_PACKET_MG,
1155 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1156 	END_PACKET_MG,
1158 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1159 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1160 	END_PACKET_GM,
1159 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1160 	END_PACKET_GM,
1162 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1163 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1164 	END_PACKET_MGM,
1163 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1164 	END_PACKET_MGM,
1166 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1167 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1168 	END_PACKET_XGM,
1167 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1168 	END_PACKET_XGM,
1170 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1171 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1173 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 12:38:36 2018/9/13 20:40:07 2018/9/13 20:40:07 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\StructDB.h 173 KB H 文件 2013/3/10 12:38:46 2018/9/13 20:40:07 2018/9/13 20:40:07 2
5662 };
5664 /************************************************************************/
5665 /* 跨服战积分的DB存储结构                                               */
5666 /************************************************************************/	
5668 enum MPVPPOINT_SHM_USE_STATS 
5682 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5683 	int32	m_nTotalWinTimes;							//总共获胜的场次
5684 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5685 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5686 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 12:38:48 2018/9/13 20:40:07 2018/9/13 20:40:07 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 12:38:49 2018/9/13 20:40:07 2018/9/13 20:40:07 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 12:38:48 2018/9/13 20:40:07 2018/9/13 20:40:07 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 12:38:52 2018/9/13 20:40:07 2018/9/13 20:40:07 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:15:48 2018/9/13 20:40:01 2018/9/13 20:40:01 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/10 22:15:48 2018/9/13 20:40:01 2018/9/13 20:40:01 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 22:15:53 2018/9/13 20:40:01 2018/9/13 20:40:01 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
174 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
176 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Core\FileConfigConst.h 20 KB H 文件 2013/3/10 22:15:51 2018/9/13 20:40:01 2018/9/13 20:40:01 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 22:15:52 2018/9/13 20:40:01 2018/9/13 20:40:01 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
229 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
230 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
232 //跨服 2v2 战场 by rj 2010-9-21
233 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
234 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Core\Setting.h 34 KB H 文件 2013/3/10 22:15:53 2018/9/13 20:40:01 2018/9/13 20:40:01 22
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1133 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1135 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1137 struct MULTIGROUP_SERVER_INFO
1138 {
1156 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1157 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1158 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1159 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1160 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1161 	int32					m_nMaxMGuildMapCnt;
1163 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1161 	int32					m_nMaxMGuildMapCnt;
1163 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1164 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1166 	MULTIGROUP_CONFIG()
1167 	{
1209 		return INVALID_KHAN_INDEX;
1210 	}
1212 	//当前服务器是否跨服关卡报名服务器
1213 	BOOL IsSignUpServer(void)
1214 	{
1215 		if (m_nGroupCount <=0 )
1216 		{
1217 			//不是跨服服务器
1218 			return FALSE;
1219 		}
1226 		return FALSE;
1227 	}
1229 	//当前开不开跨服副本MAP
1230 	BOOL IsMultMapOpen()
1231 	{
1232 		if (m_nGroupCount <=0 )
1233 		{
1234 			//不是跨服服务器
1235 			return FALSE;
1236 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/10 22:15:54 2018/9/13 20:40:01 2018/9/13 20:40:01 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 22:15:55 2018/9/13 20:40:01 2018/9/13 20:40:01 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/10 22:17:44 2018/9/13 20:40:04 2018/9/13 20:40:04 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
663 };
666 /************************************************************************/
667 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
668 /************************************************************************/
669 struct MsgMGRoomBattle
689 };
691 /************************************************************************/
692 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
693 /************************************************************************/
694 struct MsgGMRoomBattle
715 };
716 /************************************************************************/
717 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
718 /************************************************************************/
719 struct MsgXGMRoomBattle_ReplyEnter
729 };
730 /************************************************************************/
731 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
732 /************************************************************************/
733 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
743 };
744 /************************************************************************/
745 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
746 /************************************************************************/
747 struct MsgXGMRoomBattle_Leave
757 };
758 /************************************************************************/
759 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
760 /************************************************************************/
761 struct MsgMGMRoomBattle
778 };
779 /************************************************************************/
780 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
781 /************************************************************************/
782 struct MsgXGMRoomBattle
806 };
807 /************************************************************************/
808 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
809 /************************************************************************/
810 struct MsgMGXRoomBattle
841 };
842 /************************************************************************/
843 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
844 /************************************************************************/
845 struct MsgCXRoomBattle
871 };
874 /************************************************************************/
875 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
876 /************************************************************************/
877 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 22:19:16 2018/9/13 20:40:06 2018/9/13 20:40:06 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\KR_OB3\src\khan2-share\TAB\TabDefine_Map_Misc.h 38 KB H 文件 2013/3/10 22:19:33 2018/9/13 20:40:07 2018/9/13 20:40:07 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:46:01 2018/9/13 20:40:10 2018/9/13 20:40:10 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:46:02 2018/9/13 20:40:10 2018/9/13 20:40:10 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:48:38 2018/9/13 20:40:13 2018/9/13 20:40:13 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 12:48:48 2018/9/13 20:40:13 2018/9/13 20:40:13 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:48:58 2018/9/13 20:40:13 2018/9/13 20:40:13 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:48:59 2018/9/13 20:40:13 2018/9/13 20:40:13 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 12:49:38 2018/9/13 20:40:14 2018/9/13 20:40:14 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:49:37 2018/9/13 20:40:19 2018/9/13 20:40:19 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 22:56:23 2018/9/13 20:40:14 2018/9/13 20:40:14 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 22:56:25 2018/9/13 20:40:14 2018/9/13 20:40:14 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 22:56:31 2018/9/13 20:40:14 2018/9/13 20:40:14 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 22:56:30 2018/9/13 20:40:14 2018/9/13 20:40:14 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 22:56:30 2018/9/13 20:40:14 2018/9/13 20:40:14 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 12:50:24 2018/9/13 20:40:21 2018/9/13 20:40:21 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-client\GameTableData.h 86 KB H 文件 2013/3/10 12:50:49 2018/9/13 20:40:21 2018/9/13 20:40:21 1
2655 	int32 m_nActivePoint;       //星座名称	
2656 };
2658 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2659 #define TABLE_WORLD_NAME	(1017)
2660 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 12:50:49 2018/9/13 20:40:21 2018/9/13 20:40:21 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 12:51:27 2018/9/13 20:40:22 2018/9/13 20:40:22 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 12:52:13 2018/9/13 20:40:23 2018/9/13 20:40:23 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 12:52:13 2018/9/13 20:40:23 2018/9/13 20:40:23 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 12:52:13 2018/9/13 20:40:23 2018/9/13 20:40:23 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 12:52:13 2018/9/13 20:40:23 2018/9/13 20:40:23 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 12:52:14 2018/9/13 20:40:23 2018/9/13 20:40:23 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 12:52:14 2018/9/13 20:40:23 2018/9/13 20:40:23 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 12:52:14 2018/9/13 20:40:23 2018/9/13 20:40:23 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 12:52:20 2018/9/13 20:40:23 2018/9/13 20:40:23 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 12:53:17 2018/9/13 20:40:24 2018/9/13 20:40:24 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:53:33 2018/9/13 20:40:25 2018/9/13 20:40:25 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\LuaFunction.h 291 KB H 文件 2013/3/10 12:53:43 2018/9/13 20:40:25 2018/9/13 20:40:25 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10035 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10037 /**
10038 * @brief	跨服PVP注册场景
10039 * @param	int32				nType	战场类型
10040 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10043 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10045 /**
10046 * @brief	请求进入跨服帮会战场
10047 * @param	ut_id_map	 mapId	玩家所在场景ID
10048 * @param	ut_id_obj	 selfId	玩家ObjID
10051 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10053 /**
10054 * @brief	跨服帮战报名
10055 * @param	ut_id_map	 mapId	玩家所在场景ID
10056 * @param	ut_id_obj	 selfId	玩家ObjID
10059 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10061 /**
10062 * @brief	通知GL跨服帮战结果
10063 * @param	ut_id_map	 mapId	玩家所在场景ID
10064 * @param	ut_id		 WorldID 赢方世界ID
10070 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10072 /**
10073 * @brief	跨服帮会战赛季当前周数
10074 * @param	无参数
10075 * @return	int
10077 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10079 /**
10080 * @brief	获取跨服帮战当前赛季的比赛场次
10081 * @return	int
10082 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 12:53:54 2018/9/13 20:40:25 2018/9/13 20:40:25 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:53:55 2018/9/13 20:40:25 2018/9/13 20:40:25 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 12:53:55 2018/9/13 20:40:25 2018/9/13 20:40:25 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:53:56 2018/9/13 20:40:25 2018/9/13 20:40:25 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 12:54:32 2018/9/13 20:40:26 2018/9/13 20:40:26 5
336 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
337 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
338 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
339 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
340 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
341 #define MPVP_JOIN_TIME_SIZE					(6)
341 #define MPVP_JOIN_TIME_SIZE					(6)
342 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
344 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
346 /************************************************************************/
347 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 12:54:34 2018/9/13 20:40:26 2018/9/13 20:40:26 4
2351 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2353 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2355 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2356 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2357 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2358 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2360 	GD_GUILD_MAX_COUNT
2361 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\MessageDefine.h 56 KB H 文件 2013/3/10 12:54:35 2018/9/13 20:40:26 2018/9/13 20:40:26 6
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
961 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
962 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
963 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
964 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
965 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1108 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1109 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1110 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1111 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1112 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1114 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1115 	MESSAGE_XG_RETMAC															= 4144,
1116 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1117 	END_MESSAGE_XG,
1119 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 12:54:35 2018/9/13 20:40:32 2018/9/13 20:40:32 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 12:54:43 2018/9/13 20:40:32 2018/9/13 20:40:32 2
5536 };
5538 /************************************************************************/
5539 /* 跨服战积分的DB存储结构                                               */
5540 /************************************************************************/	
5542 enum MPVPPOINT_SHM_USE_STATS 
5556 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5557 	int32	m_nTotalWinTimes;							//总共获胜的场次
5558 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5559 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5560 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 12:54:45 2018/9/13 20:40:32 2018/9/13 20:40:32 4
1262 	int32       m_nCurMonth;
1264 	int32		m_nLastWeekStrength;
1265 	// 跨服帮战结果
1266 	int32		m_nMBattleResult;
1266 	int32		m_nMBattleResult;
1267 	// 参加跨服帮战时的排名
1268 	int32		m_nLastTopIndex;
1268 	int32		m_nLastTopIndex;
1269 	// 参加跨服帮战的人数
1270 	int32		m_nMBattleJoinCount;
1270 	int32		m_nMBattleJoinCount;
1271 	// 跨服战奖励
1272 	int32		m_nMBattleForward;
1273 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 12:54:46 2018/9/13 20:40:32 2018/9/13 20:40:32 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 12:54:49 2018/9/13 20:40:32 2018/9/13 20:40:32 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 23:01:26 2018/9/13 20:40:26 2018/9/13 20:40:26 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 23:01:27 2018/9/13 20:40:26 2018/9/13 20:40:26 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/10 23:01:31 2018/9/13 20:40:26 2018/9/13 20:40:26 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/10 23:01:30 2018/9/13 20:40:26 2018/9/13 20:40:26 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/10 23:01:31 2018/9/13 20:40:26 2018/9/13 20:40:26 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1133 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1134 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1135 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1136 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1137 	int32					m_nMaxMGuildMapCnt;
1139 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/10 23:01:33 2018/9/13 20:40:26 2018/9/13 20:40:26 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/10 23:01:34 2018/9/13 20:40:26 2018/9/13 20:40:26 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\MY_OB1\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 23:04:53 2018/9/13 20:40:31 2018/9/13 20:40:31 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 12:55:47 2018/9/13 20:40:34 2018/9/13 20:40:34 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 12:55:47 2018/9/13 20:40:34 2018/9/13 20:40:34 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 12:58:26 2018/9/13 20:40:37 2018/9/13 20:40:37 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-mapserver\LuaFunction.h 263 KB H 文件 2013/3/10 12:58:35 2018/9/13 20:40:37 2018/9/13 20:40:37 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 12:58:46 2018/9/13 20:40:37 2018/9/13 20:40:37 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 12:58:46 2018/9/13 20:40:37 2018/9/13 20:40:37 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 12:59:25 2018/9/13 20:40:39 2018/9/13 20:40:39 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 12:59:24 2018/9/13 20:40:44 2018/9/13 20:40:44 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 23:28:16 2018/9/13 20:40:39 2018/9/13 20:40:39 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 23:28:17 2018/9/13 20:40:39 2018/9/13 20:40:39 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/10 23:28:21 2018/9/13 20:40:39 2018/9/13 20:40:39 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/10 23:28:20 2018/9/13 20:40:39 2018/9/13 20:40:39 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\PH\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/10 23:28:21 2018/9/13 20:40:39 2018/9/13 20:40:39 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-client\GameTableData.h 72 KB H 文件 2013/3/10 13:00:31 2018/9/13 20:40:46 2018/9/13 20:40:46 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-client\GameTableDefine.h 9 KB H 文件 2013/3/10 13:00:32 2018/9/13 20:40:46 2018/9/13 20:40:46 1
352 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
354 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
356 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
357 	{TABLE_WORLD_NAME, "worldname"},
359 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:03:02 2018/9/13 20:40:49 2018/9/13 20:40:49 5
4 #include "TypeDefine.h"
5 #include "Player.h"
7 // 跨服战场类型
8 enum MPVPBattleType
9 {
8 enum MPVPBattleType
9 {
10 	MPVPBATTLETYPE_2V2 = 0,					// 跨服 2V2
11 	MPVPBATTLETYPE_6V6,						// 跨服 6V6
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
15 #define MPVPBATTLETYPE_NUM			1		// 跨服战场类型数量
17 // 跨服战场基类接口
18 class IMPVPBattle
19 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-mapserver\LuaFunction.h 259 KB H 文件 2013/3/10 13:03:12 2018/9/13 20:40:49 2018/9/13 20:40:49 2
8831 int32	LuaFunction_SetGuildParam( Lua_State *L);
8833 /**
8834 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8835 * @param	mapid_t	 mapid	整数  场景id
8836 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8842 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8844 /**
8845 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8846 * @param	MapID_t	 mapId	整数  玩家所在场景ID
8847 * @param	ObjID_t	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-mapserver\MPVP2v2Battle.h 8 KB H 文件 2013/3/10 13:03:22 2018/9/13 20:40:50 2018/9/13 20:40:50 2
6 #include "Player.h"
7 #include "IMPVPBattle.h"
9 #define MBATTLE_TYPE_2V2BATTLE			(20)						// 战场时间表中的跨服 2v2 战场类型
10 #define NUM_MPVP2V2_SIGNUP				(2)							// 报名条目数组大小
11 #define MAX_MPVP2V2_MAPCOUNT			(512)						// 开辟场景数组上限
202 	}
203 };
205 // 双人跨服战场派生类
206 class CMPVP2v2Battle: public IMPVPBattle
207 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:03:22 2018/9/13 20:40:50 2018/9/13 20:40:50 3
29 	int32		m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVPBattleType nType);		// 以类型方式获得跨服战场类
49 public:
50 	PLAYERLIST	*GetNearTeamMemberList(Player *pPlayer);		// 工具函数，获取附近队友
55 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
57 private:
58 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
59 	PLAYERLIST		m_lsNearTeamMember;							// 附近队友列表
60 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\MessageDefine.h 50 KB H 文件 2013/3/10 13:03:59 2018/9/13 20:40:51 2018/9/13 20:40:51 3
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	PACKET_GG_MPVP2V2MAPNOTIFY												=  751,///<	// 跨服战场场景线程通知消息 2010-9-23 by rj
151 	PACKET_GG_MAPNOTIFY														=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP2V2_BATTLE													= 1274,// by rj 2010-9-21 跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
769 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
770 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
771 	MESSAGE_XC_MPVP2V2_BATTLE													= 2326,// by rj 2010-9-21 跨服战场
772 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
773 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 9:22:54 2018/9/13 20:40:50 2018/9/13 20:40:50 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/11 9:22:55 2018/9/13 20:40:50 2018/9/13 20:40:50 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\Core\act_define.h 27 KB H 文件 2013/3/11 9:22:59 2018/9/13 20:40:50 2018/9/13 20:40:50 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_NUM
174 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/11 9:22:58 2018/9/13 20:40:50 2018/9/13 20:40:50 2
62 #define PVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303000)
63 #define PVP2V2_BATTLE_FLOW_SCRIPT_ID						(303001)
65 #define MPVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303100)		// 跨服 2v2 战场 by rj 2010-9-21
66 #define MPVP2V2_BATTLE_FLOW_SCRIPT_ID						(303101)
68 #define PVP6V6_BATTLE_SIGNUP_SCRIPT_ID						(303005)
214 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
215 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
217 //跨服 2v2 战场 by rj 2010-9-21
218 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
219 #define DEF_MPVP2V2_BATTLE_BATTLEMAPTRANS					("ProcMPVP2v2BattleChangeScene")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\RU\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/11 9:22:58 2018/9/13 20:40:50 2018/9/13 20:40:50 2
1021 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1022 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1023 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1024 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1026 	MULTIGROUP_CONFIG()
1027 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 13:05:06 2018/9/13 20:40:57 2018/9/13 20:40:57 1
2652 	int32 m_nActivePoint;       //星座名称	
2653 };
2655 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2656 #define TABLE_WORLD_NAME	(1017)
2657 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 13:05:06 2018/9/13 20:40:57 2018/9/13 20:40:57 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:07:40 2018/9/13 20:41:01 2018/9/13 20:41:01 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 13:07:50 2018/9/13 20:41:01 2018/9/13 20:41:01 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:08:00 2018/9/13 20:41:01 2018/9/13 20:41:01 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:08:00 2018/9/13 20:41:01 2018/9/13 20:41:01 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 13:08:38 2018/9/13 20:41:02 2018/9/13 20:41:02 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
445 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
446 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
447 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
448 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
449 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
790 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
791 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
792 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
793 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
794 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
938 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
939 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
940 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
942 	END_MESSAGE_GX,
944 	BEGIN_MESSAGE_XG																= 4000,
1080 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1081 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1082 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1083 	END_MESSAGE_XG,
1085 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 13:08:37 2018/9/13 20:41:08 2018/9/13 20:41:08 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 9:26:25 2018/9/13 20:41:02 2018/9/13 20:41:02 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/11 9:26:26 2018/9/13 20:41:02 2018/9/13 20:41:02 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/11 9:26:30 2018/9/13 20:41:02 2018/9/13 20:41:02 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/11 9:26:29 2018/9/13 20:41:02 2018/9/13 20:41:02 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/11 9:26:29 2018/9/13 20:41:02 2018/9/13 20:41:02 2
1030 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1031 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1032 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1033 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1035 	MULTIGROUP_CONFIG()
1036 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 13:09:20 2018/9/13 20:41:10 2018/9/13 20:41:10 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:09:24 2018/9/13 20:41:10 2018/9/13 20:41:10 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\GameScriptFunctionMySelf.h 16 KB H 文件 2013/3/10 13:09:40 2018/9/13 20:41:10 2018/9/13 20:41:10 1
314 	/* 玩家关卡技能 */
315 	int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
317 	//退出跨服关卡
318 	int32			ExitRoom(LuaPlus::LuaState *state);
320 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\GameTableData.h 90 KB H 文件 2013/3/10 13:09:49 2018/9/13 20:41:10 2018/9/13 20:41:10 1
2671 	int32 m_nActivePoint;       //星座名称	
2672 };
2674 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2675 #define TABLE_WORLD_NAME	(1017)
2676 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 13:09:50 2018/9/13 20:41:10 2018/9/13 20:41:10 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:10:32 2018/9/13 20:41:11 2018/9/13 20:41:11 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:11:19 2018/9/13 20:41:12 2018/9/13 20:41:12 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:11:19 2018/9/13 20:41:12 2018/9/13 20:41:12 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:11:19 2018/9/13 20:41:12 2018/9/13 20:41:12 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:11:20 2018/9/13 20:41:12 2018/9/13 20:41:12 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:11:20 2018/9/13 20:41:12 2018/9/13 20:41:12 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:11:20 2018/9/13 20:41:12 2018/9/13 20:41:12 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:11:21 2018/9/13 20:41:12 2018/9/13 20:41:12 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 13:11:23 2018/9/13 20:41:12 2018/9/13 20:41:12 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:11:27 2018/9/13 20:41:12 2018/9/13 20:41:12 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 13:12:27 2018/9/13 20:41:13 2018/9/13 20:41:13 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:12:42 2018/9/13 20:41:14 2018/9/13 20:41:14 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\LuaFunction.h 298 KB H 文件 2013/3/10 13:12:52 2018/9/13 20:41:14 2018/9/13 20:41:14 9
9005 int32	LuaFunction_SetGuildParam( Lua_State *L);
9007 /**
9008 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9009 * @param	mapid_t	 mapid	整数  场景id
9010 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9016 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9018 /**
9019 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9020 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9021 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10082 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10084 /**
10085 * @brief	跨服PVP注册场景
10086 * @param	int32				nType	战场类型
10087 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10090 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10092 /**
10093 * @brief	请求进入跨服帮会战场
10094 * @param	ut_id_map	 mapId	玩家所在场景ID
10095 * @param	ut_id_obj	 selfId	玩家ObjID
10098 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10100 /**
10101 * @brief	跨服帮战报名
10102 * @param	ut_id_map	 mapId	玩家所在场景ID
10103 * @param	ut_id_obj	 selfId	玩家ObjID
10106 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10108 /**
10109 * @brief	通知GL跨服帮战结果
10110 * @param	ut_id_map	 mapId	玩家所在场景ID
10111 * @param	ut_id		 WorldID 赢方世界ID
10117 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10119 /**
10120 * @brief	跨服帮会战赛季当前周数
10121 * @param	无参数
10122 * @return	int
10124 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10126 /**
10127 * @brief	获取跨服帮战当前赛季的比赛场次
10128 * @return	int
10129 */
10357 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10359 /**
10360 跨服副本搜索
10361 * @param1	ut_id_map mapId
10362 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:13:03 2018/9/13 20:41:14 2018/9/13 20:41:14 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:13:04 2018/9/13 20:41:14 2018/9/13 20:41:14 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:13:04 2018/9/13 20:41:14 2018/9/13 20:41:14 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:13:05 2018/9/13 20:41:14 2018/9/13 20:41:14 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 13:13:27 2018/9/13 20:41:14 2018/9/13 20:41:14 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 13:13:41 2018/9/13 20:41:15 2018/9/13 20:41:15 5
339 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
340 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
341 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
342 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
343 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
344 #define MPVP_JOIN_TIME_SIZE					(6)
344 #define MPVP_JOIN_TIME_SIZE					(6)
345 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
347 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
349 #define MAX_HORSEMONEY_NUM						(999999)
350 #define MAX_XINYU_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Enum.h 84 KB H 文件 2013/3/10 13:13:43 2018/9/13 20:41:15 2018/9/13 20:41:15 4
2364 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2366 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2368 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2369 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2370 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2371 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2373 	GD_GUILD_MAX_COUNT
2374 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\MessageDefine.h 57 KB H 文件 2013/3/10 13:13:44 2018/9/13 20:41:15 2018/9/13 20:41:15 13
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
445 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
446 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
447 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
448 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
449 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
811 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
812 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
813 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
814 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
815 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
975 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
976 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
977 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
978 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
979 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
982 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
983 	MESSAGE_GX_COLLECT_MAC														= 3125,//
984 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
986 	END_MESSAGE_GX,
988 	BEGIN_MESSAGE_XG																= 4000,
1124 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1125 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1126 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1127 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1128 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1130 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1131 	MESSAGE_XG_RETMAC															= 4144,
1132 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1133 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1135 	END_MESSAGE_XG,
1135 	END_MESSAGE_XG,
1137 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1138 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1139 	END_PACKET_MG,
1138 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1139 	END_PACKET_MG,
1141 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1142 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1143 	END_PACKET_GM,
1142 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1143 	END_PACKET_GM,
1145 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1146 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1147 	END_PACKET_MGM,
1146 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1147 	END_PACKET_MGM,
1149 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1150 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1151 	END_PACKET_XGM,
1150 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1151 	END_PACKET_XGM,
1153 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1154 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1156 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:13:43 2018/9/13 20:41:21 2018/9/13 20:41:21 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\StructDB.h 173 KB H 文件 2013/3/10 13:13:52 2018/9/13 20:41:21 2018/9/13 20:41:21 2
5655 };
5657 /************************************************************************/
5658 /* 跨服战积分的DB存储结构                                               */
5659 /************************************************************************/	
5661 enum MPVPPOINT_SHM_USE_STATS 
5675 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5676 	int32	m_nTotalWinTimes;							//总共获胜的场次
5677 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5678 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5679 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:13:54 2018/9/13 20:41:21 2018/9/13 20:41:21 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 13:13:55 2018/9/13 20:41:21 2018/9/13 20:41:21 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:13:55 2018/9/13 20:41:21 2018/9/13 20:41:21 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 13:13:58 2018/9/13 20:41:21 2018/9/13 20:41:21 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 9:31:08 2018/9/13 20:41:15 2018/9/13 20:41:15 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 9:31:10 2018/9/13 20:41:15 2018/9/13 20:41:15 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/11 9:31:17 2018/9/13 20:41:15 2018/9/13 20:41:15 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
174 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
176 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Core\FileConfigConst.h 20 KB H 文件 2013/3/11 9:31:13 2018/9/13 20:41:15 2018/9/13 20:41:15 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/11 9:31:15 2018/9/13 20:41:15 2018/9/13 20:41:15 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
229 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
230 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
232 //跨服 2v2 战场 by rj 2010-9-21
233 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
234 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Core\Setting.h 34 KB H 文件 2013/3/11 9:31:17 2018/9/13 20:41:15 2018/9/13 20:41:15 22
97 	int32	m_LairdBattleGuildMemberCount;
98 	int32	m_MPVP6v6BattleTeamNumLimit;
99 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
100 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
101 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
102 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
103 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
104 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
105 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
106 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
107 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
108 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
109 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
110 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
111 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
113 	int32	m_MaxOnlineUser;
114 	int32	m_MaxHorse;
1126 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1127 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1129 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1131 struct MULTIGROUP_SERVER_INFO
1132 {
1150 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1151 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1152 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1153 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1154 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1155 	int32					m_nMaxMGuildMapCnt;
1157 	BOOL					m_SignUpServerToggle;	//报名服务器开关  
1155 	int32					m_nMaxMGuildMapCnt;
1157 	BOOL					m_SignUpServerToggle;	//报名服务器开关  
1158 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1160 	MULTIGROUP_CONFIG()
1161 	{
1203 		return INVALID_KHAN_INDEX;
1204 	}
1206 	//当前服务器是否跨服关卡报名服务器
1207 	BOOL IsSignUpServer(void)
1208 	{
1209 		if (m_nGroupCount <=0 )
1210 		{
1211 			//不是跨服服务器
1212 			return FALSE;
1213 		}
1220 		return FALSE;
1221 	}
1223 	//当前开不开跨服副本MAP
1224 	BOOL IsMultMapOpen()
1225 	{
1226 		if (m_nGroupCount <=0 )
1227 		{
1228 			//不是跨服服务器
1229 			return FALSE;
1230 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/11 9:31:19 2018/9/13 20:41:15 2018/9/13 20:41:15 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 9:31:22 2018/9/13 20:41:15 2018/9/13 20:41:15 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 9:34:54 2018/9/13 20:41:18 2018/9/13 20:41:18 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
663 };
666 /************************************************************************/
667 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
668 /************************************************************************/
669 struct MsgMGRoomBattle
689 };
691 /************************************************************************/
692 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
693 /************************************************************************/
694 struct MsgGMRoomBattle
715 };
716 /************************************************************************/
717 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
718 /************************************************************************/
719 struct MsgXGMRoomBattle_ReplyEnter
729 };
730 /************************************************************************/
731 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
732 /************************************************************************/
733 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
743 };
744 /************************************************************************/
745 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
746 /************************************************************************/
747 struct MsgXGMRoomBattle_Leave
757 };
758 /************************************************************************/
759 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
760 /************************************************************************/
761 struct MsgMGMRoomBattle
778 };
779 /************************************************************************/
780 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
781 /************************************************************************/
782 struct MsgXGMRoomBattle
806 };
807 /************************************************************************/
808 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
809 /************************************************************************/
810 struct MsgMGXRoomBattle
841 };
842 /************************************************************************/
843 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
844 /************************************************************************/
845 struct MsgCXRoomBattle
871 };
874 /************************************************************************/
875 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
876 /************************************************************************/
877 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 9:38:50 2018/9/13 20:41:20 2018/9/13 20:41:20 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TR_OB\src\khan2-share\TAB\TabDefine_Map_Misc.h 38 KB H 文件 2013/3/11 9:39:48 2018/9/13 20:41:21 2018/9/13 20:41:21 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 13:15:04 2018/9/13 20:42:24 2018/9/13 20:42:24 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 13:15:05 2018/9/13 20:42:24 2018/9/13 20:42:24 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Client\Game\Data\Struct\GameDataStructSystemTip.h 6 KB H 文件 2013/3/11 13:28:09 2018/9/13 20:42:56 2018/9/13 20:42:56 1
66 	STT_KING_ZHAOJI,							/* 国王召集令进入提示 */
67 	STT_GAMEBATTLE_LAIRD_INVITE_PlAYERAID,		/* 领地战邀请外援 */
68 	STT_MPVP2V2_BATTLE,							/* 跨服PVP2v2战场进入提示 2010-9-23 by rj */
69 	STT_NUM,									/* 数量 */
70 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Client\Game\Table\GameTableData.h 95 KB H 文件 2013/3/11 10:23:24 2018/9/13 20:42:58 2018/9/13 20:42:58 1
3379 	int32 m_nActivePoint;       //星座名称	
3380 };
3382 /* 2010-10-19 by rj 跨服玩家服名称显示 */
3383 #define TABLE_WORLD_NAME	(1017)
3384 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Client\Game\Table\GameTableDefine.h 10 KB H 文件 2013/3/11 10:23:24 2018/9/13 20:42:58 2018/9/13 20:42:58 1
416 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
418 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
420 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
421 	{TABLE_WORLD_NAME, "worldname"},
423 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\MapServer\Server\Other\IMPVPBattle.h 1 KB H 文件 2013/3/11 10:32:49 2018/9/13 20:43:02 2018/9/13 20:43:02 5
4 #include "TypeDefine.h"
5 #include "Player.h"
7 // 跨服战场类型
8 enum MPVPBattleType
9 {
8 enum MPVPBattleType
9 {
10 	MPVPBATTLETYPE_2V2 = 0,					// 跨服 2V2
11 	MPVPBATTLETYPE_6V6,						// 跨服 6V6
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
15 #define MPVPBATTLETYPE_NUM			1		// 跨服战场类型数量
17 // 跨服战场基类接口
18 class IMPVPBattle
19 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\MapServer\Server\Other\MPVP2v2Battle.h 8 KB H 文件 2013/3/11 10:32:50 2018/9/13 20:43:02 2018/9/13 20:43:02 2
6 #include "Player.h"
7 #include "IMPVPBattle.h"
9 #define MBATTLE_TYPE_2V2BATTLE			(20)						// 战场时间表中的跨服 2v2 战场类型
10 #define NUM_MPVP2V2_SIGNUP				(2)							// 报名条目数组大小
11 #define MAX_MPVP2V2_SCENECOUNT			(512)						// 开辟场景数组上限
202 	}
203 };
205 // 双人跨服战场派生类
206 class CMPVP2v2Battle: public IMPVPBattle
207 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\MapServer\Server\Other\MPVPBattleManager.h 2 KB H 文件 2013/3/11 10:32:50 2018/9/13 20:43:02 2018/9/13 20:43:02 3
29 	int32		m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVPBattleType nType);		// 以类型方式获得跨服战场类
49 public:
50 	PLAYERLIST	*GetNearTeamMemberList(Player *pPlayer);		// 工具函数，获取附近队友
55 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
57 private:
58 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
59 	PLAYERLIST		m_lsNearTeamMember;							// 附近队友列表
60 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\MessageDefine.h 49 KB H 文件 2013/3/10 10:50:06 2018/9/13 20:43:03 2018/9/13 20:43:03 3
141 	END_PACKET_DD,
143 	BEGIN_PACKET_GG																=  750,
144 	PACKET_GG_MPVP2V2SCENENOTIFY												=  751,///<	// 跨服战场场景线程通知消息 2010-9-23 by rj
145 	PACKET_GG_SCENENOTIFY														=  752,///<
146 	PACKET_GS_ASKDATA															=  753,///<
437 	PACKET_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
438 	PACKET_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
439 	PACKET_CX_MPVP2V2_BATTLE													= 1274,// by rj 2010-9-21 跨服战场
440 	PACKET_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
441 	PACKET_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
759 	PACKET_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
760 	PACKET_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
761 	PACKET_XC_MPVP2V2_BATTLE													= 2326,// by rj 2010-9-21 跨服战场
762 	PACKET_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
763 	PACKET_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 13:20:06 2018/9/13 20:43:03 2018/9/13 20:43:03 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 13:20:07 2018/9/13 20:43:03 2018/9/13 20:43:03 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\Core\act_define.h 26 KB H 文件 2013/3/10 13:20:10 2018/9/13 20:43:03 2018/9/13 20:43:03 1
164 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
165 	eCurrencyAct_GuildSendMail		= 329,  /* 帮主群发邮件扣除现银 */
166 //	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
167 	eCurrencyAct_NUM
168 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\Core\ScriptDef.h 17 KB H 文件 2013/3/10 13:20:10 2018/9/13 20:43:03 2018/9/13 20:43:03 2
62 #define PVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303000)
63 #define PVP2V2_BATTLE_FLOW_SCRIPT_ID						(303001)
65 #define MPVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303100)		// 跨服 2v2 战场 by rj 2010-9-21
66 #define MPVP2V2_BATTLE_FLOW_SCRIPT_ID						(303101)
68 #define PVP6V6_BATTLE_SIGNUP_SCRIPT_ID						(303005)
213 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("OnSignupResult")
214 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
216 //跨服 2v2 战场 by rj 2010-9-21
217 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("OnMBattleMatchInfo")
218 #define DEF_MPVP2V2_BATTLE_BATTLESCENETRANS					("OnMPVP2v2BattleChangeScene")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB1\Share\Core\Setting.h 28 KB H 文件 2013/3/10 13:20:10 2018/9/13 20:43:03 2018/9/13 20:43:03 2
1000 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1001 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1002 	int32					m_nMax2v2SceneCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1003 	int32					m_nMax6v6SceneCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1005 	MULTIGROUP_CONFIG()
1006 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 13:24:24 2018/9/13 20:43:10 2018/9/13 20:43:10 1
2645 	int32 m_nActivePoint;       //星座名称	
2646 };
2648 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2649 #define TABLE_WORLD_NAME	(1017)
2650 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 13:24:24 2018/9/13 20:43:10 2018/9/13 20:43:10 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:26:57 2018/9/13 20:43:13 2018/9/13 20:43:13 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-mapserver\LuaFunction.h 264 KB H 文件 2013/3/10 13:27:07 2018/9/13 20:43:13 2018/9/13 20:43:13 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:27:17 2018/9/13 20:43:14 2018/9/13 20:43:14 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:27:17 2018/9/13 20:43:14 2018/9/13 20:43:14 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 13:28:26 2018/9/13 20:43:15 2018/9/13 20:43:15 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 13:28:26 2018/9/13 20:43:21 2018/9/13 20:43:21 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 10:34:14 2018/9/13 20:43:14 2018/9/13 20:43:14 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/11 10:34:15 2018/9/13 20:43:14 2018/9/13 20:43:14 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/11 10:34:30 2018/9/13 20:43:14 2018/9/13 20:43:14 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/11 10:34:26 2018/9/13 20:43:14 2018/9/13 20:43:14 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB3\src\khan2-share\Core\Setting.h 29 KB H 文件 2013/3/11 10:34:29 2018/9/13 20:43:14 2018/9/13 20:43:14 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:29:10 2018/9/13 20:43:25 2018/9/13 20:43:25 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-client\GameTableData.h 86 KB H 文件 2013/3/10 13:29:35 2018/9/13 20:43:25 2018/9/13 20:43:25 1
2655 	int32 m_nActivePoint;       //星座名称	
2656 };
2658 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2659 #define TABLE_WORLD_NAME	(1017)
2660 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 13:29:36 2018/9/13 20:43:25 2018/9/13 20:43:25 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:30:14 2018/9/13 20:43:26 2018/9/13 20:43:26 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:31:02 2018/9/13 20:43:27 2018/9/13 20:43:27 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:31:03 2018/9/13 20:43:27 2018/9/13 20:43:27 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:31:03 2018/9/13 20:43:27 2018/9/13 20:43:27 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:31:03 2018/9/13 20:43:27 2018/9/13 20:43:27 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:31:03 2018/9/13 20:43:27 2018/9/13 20:43:27 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:31:04 2018/9/13 20:43:27 2018/9/13 20:43:27 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:31:04 2018/9/13 20:43:27 2018/9/13 20:43:27 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:31:11 2018/9/13 20:43:27 2018/9/13 20:43:27 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 13:32:09 2018/9/13 20:43:28 2018/9/13 20:43:28 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:32:25 2018/9/13 20:43:29 2018/9/13 20:43:29 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\LuaFunction.h 291 KB H 文件 2013/3/10 13:32:35 2018/9/13 20:43:29 2018/9/13 20:43:29 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10035 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10037 /**
10038 * @brief	跨服PVP注册场景
10039 * @param	int32				nType	战场类型
10040 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10043 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10045 /**
10046 * @brief	请求进入跨服帮会战场
10047 * @param	ut_id_map	 mapId	玩家所在场景ID
10048 * @param	ut_id_obj	 selfId	玩家ObjID
10051 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10053 /**
10054 * @brief	跨服帮战报名
10055 * @param	ut_id_map	 mapId	玩家所在场景ID
10056 * @param	ut_id_obj	 selfId	玩家ObjID
10059 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10061 /**
10062 * @brief	通知GL跨服帮战结果
10063 * @param	ut_id_map	 mapId	玩家所在场景ID
10064 * @param	ut_id		 WorldID 赢方世界ID
10070 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10072 /**
10073 * @brief	跨服帮会战赛季当前周数
10074 * @param	无参数
10075 * @return	int
10077 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10079 /**
10080 * @brief	获取跨服帮战当前赛季的比赛场次
10081 * @return	int
10082 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:32:45 2018/9/13 20:43:29 2018/9/13 20:43:29 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:32:46 2018/9/13 20:43:29 2018/9/13 20:43:29 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:32:46 2018/9/13 20:43:29 2018/9/13 20:43:29 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:32:47 2018/9/13 20:43:29 2018/9/13 20:43:29 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 13:33:22 2018/9/13 20:43:30 2018/9/13 20:43:30 5
336 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
337 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
338 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
339 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
340 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
341 #define MPVP_JOIN_TIME_SIZE					(6)
341 #define MPVP_JOIN_TIME_SIZE					(6)
342 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
343 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
344 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
346 /************************************************************************/
347 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 13:33:24 2018/9/13 20:43:30 2018/9/13 20:43:30 4
2351 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2353 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2355 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2356 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2357 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2358 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2360 	GD_GUILD_MAX_COUNT
2361 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\MessageDefine.h 56 KB H 文件 2013/3/10 13:33:25 2018/9/13 20:43:30 2018/9/13 20:43:30 6
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
961 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
962 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
963 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
964 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
965 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1108 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1109 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1110 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1111 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1112 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1114 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1115 	MESSAGE_XG_RETMAC															= 4144,
1116 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1117 	END_MESSAGE_XG,
1119 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:33:24 2018/9/13 20:43:36 2018/9/13 20:43:36 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 13:33:33 2018/9/13 20:43:36 2018/9/13 20:43:36 2
5536 };
5538 /************************************************************************/
5539 /* 跨服战积分的DB存储结构                                               */
5540 /************************************************************************/	
5542 enum MPVPPOINT_SHM_USE_STATS 
5556 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5557 	int32	m_nTotalWinTimes;							//总共获胜的场次
5558 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5559 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5560 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:33:35 2018/9/13 20:43:36 2018/9/13 20:43:36 4
1262 	int32       m_nCurMonth;
1264 	int32		m_nLastWeekStrength;
1265 	// 跨服帮战结果
1266 	int32		m_nMBattleResult;
1266 	int32		m_nMBattleResult;
1267 	// 参加跨服帮战时的排名
1268 	int32		m_nLastTopIndex;
1268 	int32		m_nLastTopIndex;
1269 	// 参加跨服帮战的人数
1270 	int32		m_nMBattleJoinCount;
1270 	int32		m_nMBattleJoinCount;
1271 	// 跨服战奖励
1272 	int32		m_nMBattleForward;
1273 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:33:36 2018/9/13 20:43:36 2018/9/13 20:43:36 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 13:33:39 2018/9/13 20:43:36 2018/9/13 20:43:36 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 10:46:22 2018/9/13 20:43:30 2018/9/13 20:43:30 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/11 10:46:24 2018/9/13 20:43:30 2018/9/13 20:43:30 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/11 10:46:37 2018/9/13 20:43:30 2018/9/13 20:43:30 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/11 10:46:33 2018/9/13 20:43:30 2018/9/13 20:43:30 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/11 10:46:36 2018/9/13 20:43:30 2018/9/13 20:43:30 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1133 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1134 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1135 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1136 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1137 	int32					m_nMaxMGuildMapCnt;
1139 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/11 10:46:39 2018/9/13 20:43:30 2018/9/13 20:43:30 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 10:46:43 2018/9/13 20:43:30 2018/9/13 20:43:30 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB5\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 10:50:31 2018/9/13 20:43:35 2018/9/13 20:43:35 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:34:12 2018/9/13 20:43:37 2018/9/13 20:43:37 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-client\GameTableData.h 87 KB H 文件 2013/3/10 13:34:38 2018/9/13 20:43:38 2018/9/13 20:43:38 1
2657 	int32 m_nActivePoint;       //星座名称	
2658 };
2660 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2661 #define TABLE_WORLD_NAME	(1017)
2662 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 13:34:38 2018/9/13 20:43:38 2018/9/13 20:43:38 1
351 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
353 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
355 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
356 	{TABLE_WORLD_NAME, "worldname"},
358 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:35:16 2018/9/13 20:43:39 2018/9/13 20:43:39 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:36:01 2018/9/13 20:43:40 2018/9/13 20:43:40 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:36:02 2018/9/13 20:43:40 2018/9/13 20:43:40 1
79 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
80 extern MKManager<LostItemMK> g_LostItemMKManager;
82 //跨服战积分相关
83 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
84 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:36:02 2018/9/13 20:43:40 2018/9/13 20:43:40 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:36:02 2018/9/13 20:43:40 2018/9/13 20:43:40 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:36:02 2018/9/13 20:43:40 2018/9/13 20:43:40 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:36:03 2018/9/13 20:43:40 2018/9/13 20:43:40 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:36:03 2018/9/13 20:43:40 2018/9/13 20:43:40 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:36:09 2018/9/13 20:43:40 2018/9/13 20:43:40 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 13:37:06 2018/9/13 20:43:41 2018/9/13 20:43:41 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:37:21 2018/9/13 20:43:41 2018/9/13 20:43:41 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\LuaFunction.h 292 KB H 文件 2013/3/10 13:37:31 2018/9/13 20:43:42 2018/9/13 20:43:42 8
8969 int32	LuaFunction_SetGuildParam( Lua_State *L);
8971 /**
8972 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8973 * @param	mapid_t	 mapid	整数  场景id
8974 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8980 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8982 /**
8983 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8984 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8985 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10045 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10047 /**
10048 * @brief	跨服PVP注册场景
10049 * @param	int32				nType	战场类型
10050 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10053 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10055 /**
10056 * @brief	请求进入跨服帮会战场
10057 * @param	ut_id_map	 mapId	玩家所在场景ID
10058 * @param	ut_id_obj	 selfId	玩家ObjID
10061 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10063 /**
10064 * @brief	跨服帮战报名
10065 * @param	ut_id_map	 mapId	玩家所在场景ID
10066 * @param	ut_id_obj	 selfId	玩家ObjID
10069 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10071 /**
10072 * @brief	通知GL跨服帮战结果
10073 * @param	ut_id_map	 mapId	玩家所在场景ID
10074 * @param	ut_id		 WorldID 赢方世界ID
10080 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10082 /**
10083 * @brief	跨服帮会战赛季当前周数
10084 * @param	无参数
10085 * @return	int
10087 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10089 /**
10090 * @brief	获取跨服帮战当前赛季的比赛场次
10091 * @return	int
10092 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:37:42 2018/9/13 20:43:42 2018/9/13 20:43:42 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:37:42 2018/9/13 20:43:42 2018/9/13 20:43:42 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:37:43 2018/9/13 20:43:42 2018/9/13 20:43:42 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:37:43 2018/9/13 20:43:42 2018/9/13 20:43:42 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 13:38:18 2018/9/13 20:43:43 2018/9/13 20:43:43 5
338 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
339 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
340 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
341 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
342 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
343 #define MPVP_JOIN_TIME_SIZE					(6)
343 #define MPVP_JOIN_TIME_SIZE					(6)
344 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
345 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
345 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
346 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
348 /************************************************************************/
349 /* 杂项                                                                 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Enum.h 83 KB H 文件 2013/3/10 13:38:20 2018/9/13 20:43:43 2018/9/13 20:43:43 4
2352 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2354 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2356 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2357 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2358 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2359 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2361 	GD_GUILD_MAX_COUNT
2362 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\MessageDefine.h 56 KB H 文件 2013/3/10 13:38:21 2018/9/13 20:43:43 2018/9/13 20:43:43 6
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
802 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
803 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
804 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
805 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
806 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
961 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
962 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
963 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
964 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
965 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1108 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1109 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1110 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1111 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1112 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1114 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1115 	MESSAGE_XG_RETMAC															= 4144,
1116 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1117 	END_MESSAGE_XG,
1119 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:38:20 2018/9/13 20:43:48 2018/9/13 20:43:48 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\StructDB.h 165 KB H 文件 2013/3/10 13:38:29 2018/9/13 20:43:48 2018/9/13 20:43:48 2
5536 };
5538 /************************************************************************/
5539 /* 跨服战积分的DB存储结构                                               */
5540 /************************************************************************/	
5542 enum MPVPPOINT_SHM_USE_STATS 
5556 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5557 	int32	m_nTotalWinTimes;							//总共获胜的场次
5558 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5559 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5560 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:38:31 2018/9/13 20:43:48 2018/9/13 20:43:48 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:38:31 2018/9/13 20:43:48 2018/9/13 20:43:48 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 13:38:34 2018/9/13 20:43:48 2018/9/13 20:43:48 2
112 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
113 	HONOR_CHARIOT_TOP_LIST_BK,
115 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
116 	MPVP_GUILD_CURRENT_BK,
116 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
118 	MPVP_GUILD_TOTAL_BK,
120 	TOP_LIST_NUM

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 10:50:59 2018/9/13 20:43:42 2018/9/13 20:43:42 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 10:51:00 2018/9/13 20:43:42 2018/9/13 20:43:42 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/11 10:51:04 2018/9/13 20:43:42 2018/9/13 20:43:42 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
175 	//新增
176 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/11 10:51:03 2018/9/13 20:43:43 2018/9/13 20:43:43 2
78 #define OFFSALE_MANAGE_SCRIPT								(310355)
79 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
80 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
82 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
227 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
228 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
230 //跨服 2v2 战场 by rj 2010-9-21
231 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
232 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Core\Setting.h 33 KB H 文件 2013/3/11 10:51:04 2018/9/13 20:43:43 2018/9/13 20:43:43 16
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1132 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1133 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1134 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1135 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1136 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1137 	int32					m_nMaxMGuildMapCnt;
1139 	MULTIGROUP_CONFIG()

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\DataBase\ArchiveInterface.h 44 KB H 文件 2013/3/11 10:51:06 2018/9/13 20:43:43 2018/9/13 20:43:43 1
1301 };
1303 /************************************************************************/
1304 /* 跨服战积分存档结构                                                   */
1305 /************************************************************************/
1306 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 10:51:07 2018/9/13 20:43:43 2018/9/13 20:43:43 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
47 extern char	*g_StrLoadPlayerList;
49 extern char	*g_StrLoadPlayerEquipList;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB6\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 10:54:32 2018/9/13 20:43:48 2018/9/13 20:43:48 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 13:39:04 2018/9/13 20:43:50 2018/9/13 20:43:50 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 13:39:08 2018/9/13 20:43:50 2018/9/13 20:43:50 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
70 	STT_NUM,									
71 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\GameScriptFunctionMySelf.h 16 KB H 文件 2013/3/10 13:39:25 2018/9/13 20:43:50 2018/9/13 20:43:50 1
314 	/* 玩家关卡技能 */
315 	int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
317 	//退出跨服关卡
318 	int32			ExitRoom(LuaPlus::LuaState *state);
320 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\GameTableData.h 90 KB H 文件 2013/3/10 13:39:34 2018/9/13 20:43:50 2018/9/13 20:43:50 1
2664 	int32 m_nActivePoint;       //星座名称	
2665 };
2667 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2668 #define TABLE_WORLD_NAME	(1017)
2669 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\GameTableDefine.h 12 KB H 文件 2013/3/10 13:39:34 2018/9/13 20:43:50 2018/9/13 20:43:50 1
352 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
354 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
356 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
357 	{TABLE_WORLD_NAME, "worldname"},
359 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 13:40:13 2018/9/13 20:43:52 2018/9/13 20:43:52 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 13:41:02 2018/9/13 20:43:53 2018/9/13 20:43:53 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 13:41:02 2018/9/13 20:43:53 2018/9/13 20:43:53 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 13:41:02 2018/9/13 20:43:53 2018/9/13 20:43:53 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 13:41:03 2018/9/13 20:43:53 2018/9/13 20:43:53 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 13:41:03 2018/9/13 20:43:53 2018/9/13 20:43:53 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 13:41:04 2018/9/13 20:43:53 2018/9/13 20:43:53 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 13:41:04 2018/9/13 20:43:53 2018/9/13 20:43:53 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 13:41:07 2018/9/13 20:43:53 2018/9/13 20:43:53 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 13:41:11 2018/9/13 20:43:53 2018/9/13 20:43:53 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\GMCommand.h 15 KB H 文件 2013/3/10 13:42:09 2018/9/13 20:43:54 2018/9/13 20:43:54 1
283 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
284 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
286 	// 增加帮会跨服战胜利次数
287 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
289 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:42:24 2018/9/13 20:43:54 2018/9/13 20:43:54 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\LuaFunction.h 298 KB H 文件 2013/3/10 13:42:34 2018/9/13 20:43:55 2018/9/13 20:43:55 9
9005 int32	LuaFunction_SetGuildParam( Lua_State *L);
9007 /**
9008 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9009 * @param	mapid_t	 mapid	整数  场景id
9010 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9016 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9018 /**
9019 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9020 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9021 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10082 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10084 /**
10085 * @brief	跨服PVP注册场景
10086 * @param	int32				nType	战场类型
10087 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10090 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10092 /**
10093 * @brief	请求进入跨服帮会战场
10094 * @param	ut_id_map	 mapId	玩家所在场景ID
10095 * @param	ut_id_obj	 selfId	玩家ObjID
10098 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10100 /**
10101 * @brief	跨服帮战报名
10102 * @param	ut_id_map	 mapId	玩家所在场景ID
10103 * @param	ut_id_obj	 selfId	玩家ObjID
10106 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10108 /**
10109 * @brief	通知GL跨服帮战结果
10110 * @param	ut_id_map	 mapId	玩家所在场景ID
10111 * @param	ut_id		 WorldID 赢方世界ID
10117 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10119 /**
10120 * @brief	跨服帮会战赛季当前周数
10121 * @param	无参数
10122 * @return	int
10124 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10126 /**
10127 * @brief	获取跨服帮战当前赛季的比赛场次
10128 * @return	int
10129 */
10362 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10364 /**
10365 跨服副本搜索
10366 * @param1	ut_id_map mapId
10367 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 13:42:45 2018/9/13 20:43:55 2018/9/13 20:43:55 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:42:46 2018/9/13 20:43:55 2018/9/13 20:43:55 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 13:42:46 2018/9/13 20:43:55 2018/9/13 20:43:55 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:42:46 2018/9/13 20:43:55 2018/9/13 20:43:55 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 13:43:09 2018/9/13 20:43:55 2018/9/13 20:43:55 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Define.h 37 KB H 文件 2013/3/10 13:43:23 2018/9/13 20:43:56 2018/9/13 20:43:56 5
339 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
340 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
341 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
342 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
343 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
344 #define MPVP_JOIN_TIME_SIZE					(6)
344 #define MPVP_JOIN_TIME_SIZE					(6)
345 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
346 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
347 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
349 #define MAX_HORSEMONEY_NUM						(999999)
350 #define MAX_XINYU_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Enum.h 84 KB H 文件 2013/3/10 13:43:25 2018/9/13 20:43:56 2018/9/13 20:43:56 4
2364 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2366 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2368 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2369 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2370 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2371 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2373 	GD_GUILD_MAX_COUNT
2374 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\MessageDefine.h 57 KB H 文件 2013/3/10 13:43:26 2018/9/13 20:43:56 2018/9/13 20:43:56 13
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	MESSAGE_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
807 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
808 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
809 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
810 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
811 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
969 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
970 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
971 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
972 	MESSAGE_GX_RELOAD_SCRIPT													= 3120,// 脚本加载
973 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
976 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
977 	MESSAGE_GX_COLLECT_MAC														= 3125,//
978 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
980 	END_MESSAGE_GX,
982 	BEGIN_MESSAGE_XG																= 4000,
1118 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1119 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1120 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1121 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1122 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1124 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1125 	MESSAGE_XG_RETMAC															= 4144,
1126 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1127 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1129 	END_MESSAGE_XG,
1129 	END_MESSAGE_XG,
1131 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1132 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1133 	END_PACKET_MG,
1132 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1133 	END_PACKET_MG,
1135 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1136 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1137 	END_PACKET_GM,
1136 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1137 	END_PACKET_GM,
1139 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1140 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1141 	END_PACKET_MGM,
1140 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1141 	END_PACKET_MGM,
1143 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1144 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1145 	END_PACKET_XGM,
1144 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1145 	END_PACKET_XGM,
1147 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1148 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1150 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 13:43:26 2018/9/13 20:44:01 2018/9/13 20:44:01 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\StructDB.h 173 KB H 文件 2013/3/10 13:43:34 2018/9/13 20:44:01 2018/9/13 20:44:01 2
5656 };
5658 /************************************************************************/
5659 /* 跨服战积分的DB存储结构                                               */
5660 /************************************************************************/	
5662 enum MPVPPOINT_SHM_USE_STATS 
5676 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5677 	int32	m_nTotalWinTimes;							//总共获胜的场次
5678 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5679 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5680 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 13:43:36 2018/9/13 20:44:01 2018/9/13 20:44:01 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 13:43:37 2018/9/13 20:44:01 2018/9/13 20:44:01 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 13:43:37 2018/9/13 20:44:01 2018/9/13 20:44:01 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\StructTopList.h 9 KB H 文件 2013/3/10 13:43:40 2018/9/13 20:44:02 2018/9/13 20:44:02 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 10:55:02 2018/9/13 20:43:55 2018/9/13 20:43:55 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 10:55:02 2018/9/13 20:43:55 2018/9/13 20:43:55 2
18 	int32				GetConnectorCount()
19 	{ 
20 		// 如果是跨服，缩小池用户连接池大小为2000 2011-8-25 by rj
21 		uint32 uMaxPoolSize = MAX_POOL_SIZE;
22 		if (g_Config.m_MultiGroupConfig.m_nGroupCount > 0)
30 	}
32 	Connector*			GetConnector(ut_id_connector ConnectorID);
33 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
34 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
35 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Core\act_define.h 29 KB H 文件 2013/3/11 10:55:07 2018/9/13 20:43:55 2018/9/13 20:43:55 2
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
173 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
174 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
176 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Core\FileConfigConst.h 20 KB H 文件 2013/3/11 10:55:05 2018/9/13 20:43:56 2018/9/13 20:43:56 1
265 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
266 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
267 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
269 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
270 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Core\ScriptIDConst.h 19 KB H 文件 2013/3/11 10:55:06 2018/9/13 20:43:56 2018/9/13 20:43:56 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
229 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
230 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
232 //跨服 2v2 战场 by rj 2010-9-21
233 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
234 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Core\Setting.h 34 KB H 文件 2013/3/11 10:55:07 2018/9/13 20:43:56 2018/9/13 20:43:56 22
96 	int32	m_LairdBattleGuildMemberCount;
97 	int32	m_MPVP6v6BattleTeamNumLimit;
98 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
99 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
100 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
101 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
102 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
103 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
104 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
105 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
106 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
107 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
108 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
109 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
110 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
112 	int32	m_MaxOnlineUser;
113 	int32	m_MaxHorse;
1125 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1126 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1128 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1130 struct MULTIGROUP_SERVER_INFO
1131 {
1149 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1150 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1151 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1152 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1153 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1154 	int32					m_nMaxMGuildMapCnt;
1156 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1157 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1159 	MULTIGROUP_CONFIG()
1160 	{
1202 		return INVALID_KHAN_INDEX;
1203 	}
1205 	//当前服务器是否跨服关卡报名服务器
1206 	BOOL IsSignUpServer(void)
1207 	{
1208 		if (m_nGroupCount <=0 )
1209 		{
1210 			//不是跨服服务器
1211 			return FALSE;
1212 		}
1219 		return FALSE;
1220 	}
1222 	//当前开不开跨服副本MAP
1223 	BOOL IsMultMapOpen()
1224 	{
1225 		if (m_nGroupCount <=0 )
1226 		{
1227 			//不是跨服服务器
1228 			return FALSE;
1229 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\DataBase\ArchiveInterface.h 46 KB H 文件 2013/3/11 10:55:08 2018/9/13 20:43:56 2018/9/13 20:43:56 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\DataBase\SqlStatement.h 7 KB H 文件 2013/3/11 10:55:10 2018/9/13 20:43:56 2018/9/13 20:43:56 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 10:57:03 2018/9/13 20:43:58 2018/9/13 20:43:58 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
342 };
344 /************************************************************************/
345 /* 跨服报名候选数据结构定义  		                                    */
346 /************************************************************************/
347 struct RoomBattleSignupInfo
396 };
398 /************************************************************************/
399 /* 跨服报名候选数据结构定义 客户端消息结构                              */
400 /************************************************************************/
401 struct RoomBattleSignupInfo_CX_Msg
418 };
420 /************************************************************************/
421 /* 跨服取消报名结构定义   客户端消息结构	                           */
422 /************************************************************************/
423 struct RoomBattleSignupCancel_CX_Msg
432 };
434 /************************************************************************/
435 /* 跨服确认进入结构定义    客户端消息结构								*/
436 /************************************************************************/
437 struct RoomBattleWaitingEnter_CX_Msg
478 };
480 /************************************************************************/
481 /* 跨服玩家确认结构定义    服务器消息结构								*/
482 /************************************************************************/
483 struct RoomBattlePlayerEnter_XC_Msg
501 };
503 /************************************************************************/
504 /* 跨服玩家离开军团    服务器消息结构								*/
505 /************************************************************************/
506 struct RoomBattlePlayerLeave_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服确认进入结构定义    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattleWaitingEnter_XC_Msg
624 };
626 /************************************************************************/
627 /* 跨服MapServer信息                  		                            */
628 /************************************************************************/
629 struct SMutiGroupMapServerInfo
663 };
666 /************************************************************************/
667 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
668 /************************************************************************/
669 struct MsgMGRoomBattle
689 };
691 /************************************************************************/
692 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
693 /************************************************************************/
694 struct MsgGMRoomBattle
715 };
716 /************************************************************************/
717 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
718 /************************************************************************/
719 struct MsgXGMRoomBattle_ReplyEnter
729 };
730 /************************************************************************/
731 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
732 /************************************************************************/
733 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
743 };
744 /************************************************************************/
745 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
746 /************************************************************************/
747 struct MsgXGMRoomBattle_Leave
757 };
758 /************************************************************************/
759 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
760 /************************************************************************/
761 struct MsgMGMRoomBattle
778 };
779 /************************************************************************/
780 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
781 /************************************************************************/
782 struct MsgXGMRoomBattle
806 };
807 /************************************************************************/
808 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
809 /************************************************************************/
810 struct MsgMGXRoomBattle
841 };
842 /************************************************************************/
843 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
844 /************************************************************************/
845 struct MsgCXRoomBattle
871 };
874 /************************************************************************/
875 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
876 /************************************************************************/
877 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 10:58:42 2018/9/13 20:44:01 2018/9/13 20:44:01 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\TW_OB7\src\khan2-share\TAB\TabDefine_Map_Misc.h 38 KB H 文件 2013/3/11 10:59:01 2018/9/13 20:44:02 2018/9/13 20:44:02 2
127 	// 加载人物属性对战车属性影响系数表
128 	void	LoadChariotCoefficientTable();
130 	// 跨服关卡逻辑表
131 	void	LoadRoomLogicTab();
131 	void	LoadRoomLogicTab();
133 	// 跨服关卡配置表
134 	void	LoadRoomConfigTab();
136 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-client\GameTableData.h 75 KB H 文件 2013/3/10 13:44:37 2018/9/13 20:44:04 2018/9/13 20:44:04 1
2652 	int32 m_nActivePoint;       //星座名称	
2653 };
2655 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2656 #define TABLE_WORLD_NAME	(1017)
2657 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-client\GameTableDefine.h 11 KB H 文件 2013/3/10 13:44:38 2018/9/13 20:44:04 2018/9/13 20:44:04 1
353 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
355 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
357 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
358 	{TABLE_WORLD_NAME, "worldname"},
360 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 13:47:12 2018/9/13 20:44:08 2018/9/13 20:44:08 1
2 #define __IMPVPBATTLE_H__
4 #include "TypeDefine.h"
6 // 跨服战场基类接口
7 class IMPVPBattle
8 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-mapserver\LuaFunction.h 263 KB H 文件 2013/3/10 13:47:22 2018/9/13 20:44:08 2018/9/13 20:44:08 2
8850 int32	LuaFunction_SetGuildParam( Lua_State *L);
8852 /**
8853 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
8854 * @param	mapid_t	 mapid	整数  场景id
8855 * @param	ut_id_obj	 selfId	整数  玩家ObjID
8861 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
8863 /**
8864 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
8865 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
8866 * @param	ut_id_obj	 selfId	整数  玩家ObjID

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 13:47:32 2018/9/13 20:44:09 2018/9/13 20:44:09 1
166 	}
167 };
169 // 双人跨服战场派生类
170 class CMPVP2v2Battle: public IMPVPBattle
171 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 13:47:33 2018/9/13 20:44:09 2018/9/13 20:44:09 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\MessageDefine.h 54 KB H 文件 2013/3/10 13:48:11 2018/9/13 20:44:10 2018/9/13 20:44:10 5
147 	END_MESSAGE_DD,
149 	BEGIN_MESSAGE_GG																=  750,
150 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
151 	PACKET_GG_MAPNOTIFY															=  752,///<
152 	MESSAGE_GS_ASKDATA															=  753,///<
443 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
444 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
445 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
446 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
447 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
785 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
786 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
787 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
788 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
789 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
930 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
931 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
932 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
934 	END_MESSAGE_GX,
936 	BEGIN_MESSAGE_XG																= 4000,
1072 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1073 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1074 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1075 	END_MESSAGE_XG,
1077 	MESSAGE_MAX

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\MPVPBattleDefine.h 3 KB H 文件 2013/3/10 13:48:10 2018/9/13 20:44:15 2018/9/13 20:44:15 14
16 	MPVP_BATTLE_SIGNUP, 								// 报名请求
17 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
18 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
19 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
20 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
21 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
22 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
23 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
24 };
26 enum MPVP_BATTLE_STATECODE
38 	MPVP_BATTLE_STATECODE_TEAMMEMBERLEVELERR,			// 队伍成员等级错误
39 };
41 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
42 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
43 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
44 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
45 #define MPVP2V2_MAX_MAPCOUNT			512				// 跨服 2v2 开辟场景数组上限
46 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
47 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
48 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
50 #pragma pack(push, 1)
52 // 报名结构

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 10:59:11 2018/9/13 20:44:09 2018/9/13 20:44:09 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/11 10:59:11 2018/9/13 20:44:09 2018/9/13 20:44:09 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ut_id_connector ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\Core\act_define.h 28 KB H 文件 2013/3/11 10:59:16 2018/9/13 20:44:09 2018/9/13 20:44:09 1
170 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
171 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
172 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
174 	//新增
175 	eCurrencyAct_CreateHellEquip    = 400,  /*打造冥装消耗*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\Core\ScriptIDConst.h 17 KB H 文件 2013/3/11 10:59:15 2018/9/13 20:44:09 2018/9/13 20:44:09 2
77 #define OFFSALE_MANAGE_SCRIPT								(310355)
78 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		//怪物的特殊属性初始化脚本
79 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
81 //场景相关
82 #define DEF_PROC_MAP_INIT_FN								("ProcMapInit")
215 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
216 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
218 //跨服 2v2 战场 by rj 2010-9-21
219 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
220 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\Overseas\VN\src\khan2-share\Core\Setting.h 30 KB H 文件 2013/3/11 10:59:15 2018/9/13 20:44:09 2018/9/13 20:44:09 2
1037 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1038 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1039 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1040 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1042 	MULTIGROUP_CONFIG()
1043 	{

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 10:23:23 2018/9/13 20:44:16 2018/9/13 20:44:16 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 10:23:30 2018/9/13 20:44:16 2018/9/13 20:44:16 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
70 	STT_XINSHOULIBAO,							//新手礼包

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\GameScriptFunctionMySelf.h 19 KB H 文件 2013/3/10 10:23:59 2018/9/13 20:44:17 2018/9/13 20:44:17 1
323 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
324 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
326 	//退出跨服关卡
327 	int32			ExitRoom(LuaPlus::LuaState *state);
329 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\GameTableData.h 120 KB H 文件 2013/3/10 10:24:18 2018/9/13 20:44:17 2018/9/13 20:44:17 1
2726 	int32 m_nActivePoint;       //星座名称	
2727 };
2729 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2730 #define TABLE_WORLD_NAME	(1017)
2731 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\GameTableDefine.h 15 KB H 文件 2013/3/10 10:24:18 2018/9/13 20:44:17 2018/9/13 20:44:17 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 10:25:33 2018/9/13 20:44:18 2018/9/13 20:44:18 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 10:26:53 2018/9/13 20:44:19 2018/9/13 20:44:19 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 10:26:53 2018/9/13 20:44:19 2018/9/13 20:44:19 2
81 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
82 extern MKManager<LostItemMK> g_LostItemMKManager;
84 //跨服战积分相关
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
88 //跨服战积分相关
89 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
90 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 10:26:54 2018/9/13 20:44:19 2018/9/13 20:44:19 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 10:26:54 2018/9/13 20:44:19 2018/9/13 20:44:19 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 10:26:54 2018/9/13 20:44:19 2018/9/13 20:44:19 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 10:26:55 2018/9/13 20:44:19 2018/9/13 20:44:19 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 10:26:55 2018/9/13 20:44:19 2018/9/13 20:44:19 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 10:26:59 2018/9/13 20:44:19 2018/9/13 20:44:19 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 10:27:07 2018/9/13 20:44:19 2018/9/13 20:44:19 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\GMCommand.h 16 KB H 文件 2013/3/10 10:28:49 2018/9/13 20:44:20 2018/9/13 20:44:20 1
286 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
287 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
289 	// 增加帮会跨服战胜利次数
290 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
292 	//  获取和设置可视组

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 10:29:16 2018/9/13 20:44:21 2018/9/13 20:44:21 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\LuaFunction.h 358 KB H 文件 2013/3/10 10:29:32 2018/9/13 20:44:21 2018/9/13 20:44:21 9
9236 int32	LuaFunction_SetGuildParam( Lua_State *L);
9238 /**
9239 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9240 * @param	mapid_t	 mapid	整数  场景id
9241 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9247 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9249 /**
9250 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9251 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9252 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10321 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10323 /**
10324 * @brief	跨服PVP注册场景
10325 * @param	int32				nType	战场类型
10326 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10329 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10331 /**
10332 * @brief	请求进入跨服帮会战场
10333 * @param	ut_id_map	 mapId	玩家所在场景ID
10334 * @param	ut_id_obj	 selfId	玩家ObjID
10337 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10339 /**
10340 * @brief	跨服帮战报名
10341 * @param	ut_id_map	 mapId	玩家所在场景ID
10342 * @param	ut_id_obj	 selfId	玩家ObjID
10345 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10347 /**
10348 * @brief	通知GL跨服帮战结果
10349 * @param	ut_id_map	 mapId	玩家所在场景ID
10350 * @param	ut_id		 WorldID 赢方世界ID
10356 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10358 /**
10359 * @brief	跨服帮会战赛季当前周数
10360 * @param	无参数
10361 * @return	int
10363 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10365 /**
10366 * @brief	获取跨服帮战当前赛季的比赛场次
10367 * @return	int
10368 */
10644 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10646 /**
10647 跨服副本搜索
10648 * @param1	ut_id_map mapId
10649 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 10:29:51 2018/9/13 20:44:21 2018/9/13 20:44:21 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 10:29:52 2018/9/13 20:44:21 2018/9/13 20:44:21 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 10:29:53 2018/9/13 20:44:21 2018/9/13 20:44:21 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 10:29:53 2018/9/13 20:44:21 2018/9/13 20:44:21 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 10:30:33 2018/9/13 20:44:21 2018/9/13 20:44:21 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Define.h 48 KB H 文件 2013/3/10 10:31:00 2018/9/13 20:44:22 2018/9/13 20:44:22 5
345 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
346 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
347 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
348 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
349 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
350 #define MPVP_JOIN_TIME_SIZE					(6)
350 #define MPVP_JOIN_TIME_SIZE					(6)
351 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
353 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
355 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
357 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Enum.h 91 KB H 文件 2013/3/10 10:31:02 2018/9/13 20:44:23 2018/9/13 20:44:23 4
2424 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2426 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2428 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2429 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2430 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2431 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2433 	GD_GUILD_MAX_COUNT
2434 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\MessageDefine.h 63 KB H 文件 2013/3/10 10:31:04 2018/9/13 20:44:23 2018/9/13 20:44:23 13
154 	END_MESSAGE_DD,
156 	BEGIN_MESSAGE_GG																=  750,
157 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
158 	MESSAGE_GG_MAPNOTIFY															=  752,///<
159 	MESSAGE_GS_ASKDATA															=  753,///<
457 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
458 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
459 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
460 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
461 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
872 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
873 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
874 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
875 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
876 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1090 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1091 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1092 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1093 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 脚本加载
1094 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1097 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1098 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1099 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1100 	MESSAGE_GX_GARDEN															= 3127,//家园
1101 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1244 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1245 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1246 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1247 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1248 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1250 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1251 	MESSAGE_XG_RETMAC															= 4144,
1252 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1253 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1254 	MESSAGE_XG_GARDEN															= 4147,//家园
1255 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1258 	MESSAGE_XG_MASK																= 4151,//面具(塔罗封印)
1260 	END_MESSAGE_XG,
1262 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1263 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1264 	END_PACKET_MG,
1263 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1264 	END_PACKET_MG,
1266 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1267 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1268 	END_PACKET_GM,
1267 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1268 	END_PACKET_GM,
1270 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1271 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1272 	END_PACKET_MGM,
1271 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1272 	END_PACKET_MGM,
1274 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1275 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1276 	END_PACKET_XGM,
1275 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1276 	END_PACKET_XGM,
1278 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1279 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1281 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 10:31:03 2018/9/13 20:44:28 2018/9/13 20:44:28 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\StructDB.h 190 KB H 文件 2013/3/10 10:31:20 2018/9/13 20:44:28 2018/9/13 20:44:28 2
5834 };
5836 /************************************************************************/
5837 /* 跨服战积分的DB存储结构                                               */
5838 /************************************************************************/	
5840 enum MPVPPOINT_SHM_USE_STATS 
5854 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5855 	int32	m_nTotalWinTimes;							//总共获胜的场次
5856 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5857 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5858 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 10:31:22 2018/9/13 20:44:28 2018/9/13 20:44:28 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 10:31:24 2018/9/13 20:44:28 2018/9/13 20:44:28 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 10:31:24 2018/9/13 20:44:28 2018/9/13 20:44:28 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\StructTopList.h 10 KB H 文件 2013/3/10 10:31:30 2018/9/13 20:44:28 2018/9/13 20:44:28 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 11:02:00 2018/9/13 20:44:22 2018/9/13 20:44:22 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/10 11:02:01 2018/9/13 20:44:22 2018/9/13 20:44:22 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Core\act_define.h 32 KB H 文件 2013/3/10 11:02:06 2018/9/13 20:44:22 2018/9/13 20:44:22 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Core\FileConfigConst.h 24 KB H 文件 2013/3/10 11:02:03 2018/9/13 20:44:22 2018/9/13 20:44:22 1
273 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
274 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
275 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
277 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
278 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Core\ScriptIDConst.h 27 KB H 文件 2013/3/10 11:02:05 2018/9/13 20:44:22 2018/9/13 20:44:22 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
270 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
271 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
273 //跨服 2v2 战场 by rj 2010-9-21
274 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
275 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Core\Setting.h 42 KB H 文件 2013/3/10 11:02:05 2018/9/13 20:44:22 2018/9/13 20:44:22 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
504 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
505 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
506 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
508 	char	m_strCountryName[COUATTRIBUTE_NUMBER][MAX_KHAN_CHARACTER_NAME];	// 国家名称
510 	float	m_nBaseAttrCoefficient;						// 宠物基础属性影响攻击系数
1323 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1324 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1326 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1328 struct MULTIGROUP_SERVER_INFO
1329 {
1347 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1348 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1349 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1350 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1351 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1352 	int32					m_nMaxMGuildMapCnt;
1354 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1352 	int32					m_nMaxMGuildMapCnt;
1354 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1355 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1357 	MULTIGROUP_CONFIG()
1358 	{
1400 		return INVALID_KHAN_INDEX;
1401 	}
1403 	//当前服务器是否跨服关卡报名服务器
1404 	BOOL IsSignUpServer(void)
1405 	{
1406 		if (m_nGroupCount <=0 )
1407 		{
1408 			//不是跨服服务器
1409 			return FALSE;
1410 		}
1417 		return FALSE;
1418 	}
1420 	//当前开不开跨服副本MAP
1421 	BOOL IsMultMapOpen()
1422 	{
1423 		if (m_nGroupCount <=0 )
1424 		{
1425 			//不是跨服服务器
1426 			return FALSE;
1427 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\DataBase\ArchiveInterface.h 53 KB H 文件 2013/3/10 11:02:08 2018/9/13 20:44:22 2018/9/13 20:44:22 1
1315 };
1317 /************************************************************************/
1318 /* 跨服战积分存档结构                                                   */
1319 /************************************************************************/
1320 class MPVPPointInfo	:

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\DataBase\SqlStatement.h 8 KB H 文件 2013/3/10 11:02:09 2018/9/13 20:44:22 2018/9/13 20:44:22 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/10 11:04:25 2018/9/13 20:44:25 2018/9/13 20:44:25 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/10 11:06:13 2018/9/13 20:44:28 2018/9/13 20:44:28 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\[src.cool]成吉思汗\khan3_tgwc_release\src\khan2-share\TAB\TabDefine_Map_Misc.h 51 KB H 文件 2013/3/10 11:06:38 2018/9/13 20:44:28 2018/9/13 20:44:28 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\MapServer\Server\Connector\ServerConnectorManager_MGClient.h 2 KB H 文件 2013/3/3 10:18:00 2018/9/13 20:45:44 2018/9/13 20:45:44 1
1 /** \file ServerConnectorManager_MGCLient.h
2  ** \desc 跨服客户端连接管器
3  **	\date  2012-08-09
4  **	\author Michael

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\MapServer\Server\Connector\ServerConnectorManager_MGServer.h 1 KB H 文件 2013/3/3 10:18:00 2018/9/13 20:45:44 2018/9/13 20:45:44 1
1 /** \file ServerConnectorManager_MGServer.h
2  ** \desc 跨服服务端连接管器
3  **	\date  2012-08-09
4  **	\author Michael

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\MapServer\Server\GameLogic\SignUpMgr.h 10 KB H 文件 2013/3/3 10:18:35 2018/9/13 20:45:44 2018/9/13 20:45:44 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "msg_c2x_005.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\MapServer\Server\Run\MGServiceThread.h 1 KB H 文件 2013/3/3 10:21:06 2018/9/13 20:45:47 2018/9/13 20:45:47 1
1 /** \file MGServiceThread.h
2  ** \desc 跨服连接处理线程
3  **	\date  2012-08-09
4  **	\author Michael

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\MapServer\Server\Run\ThreadManager.h 2 KB H 文件 2013/3/3 10:21:08 2018/9/13 20:45:47 2018/9/13 20:45:47 4
68 	//登录线程
69 	LoginThread*	    m_pLoginThread;
71 	//跨服连接处理线程(作为跨服服务器时启动)
72 	MGServiceThread*			m_pMGServiceThread;
72 	MGServiceThread*			m_pMGServiceThread;
74 	//与跨服服务器进行通讯的线程(作为普通游戏服务器时启动)
75 	ServerConnectorThread*		m_pMGClientThread;
75 	ServerConnectorThread*		m_pMGClientThread;
77 	//连接跨服服务器的异步线程线
78 	ConnectThread*				m_pAsyConnectMGServerThread;
80 	//统计线程的个数

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\Enum.h 94 KB H 文件 2013/3/3 10:02:39 2018/9/13 20:45:48 2018/9/13 20:45:48 2
1309 {
1310 	SERVER_GAME						= 0,//0:普通游戏服务器
1311 	SERVER_MID_MGSERVER,				//1:中间跨服务器
1312 	SERVER_TOP_MGSERVER,				//2:顶层跨服服务器
1313 	SERVER_NUMBER
1314 };

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\MessageDefine.h 69 KB H 文件 2013/3/3 10:02:42 2018/9/13 20:45:48 2018/9/13 20:45:48 8
1208 	PACKET_GX_GAMEBATTLE														= 3105,///< 战场相关
1209 	PACKET_GX_DYNAMIC_SHOP														= 3108,///< 动态价格商店
1210 	PACKET_GX_NOTICESYSINFO														= 3109,///< 跨服信息
1211 	PACKET_GX_RET_GAMEONLINE													= 3110,///< 返回在线信息
1211 	PACKET_GX_RET_GAMEONLINE													= 3110,///< 返回在线信息
1212 	PACKET_GX_NEWWORLD															= 3111,///< 切场景请求，跨服专用
1213 	PACKET_GX_ACTIVITY_NOTICE													= 3112,///< 活动追踪
1214 	PACKET_GX_SEARCH_VENDUE_ITEM_LIST											= 3113,///	返回查询拍卖行列表
1349 	PACKET_XG_DYNAMIC_SHOP														= 4127,// 动态价格商店
1350 	PACKET_XG_NOTICESYSINFO														= 4128,///<
1351 	PACKET_XG_NEWWORLD															= 4129,///<进入新场景，跨服专用
1352 	PACKET_XG_ACTIVITY_NOTICE													= 4130,///< 开启活动跟踪
1353 	PACKET_XG_SEARCH_VENDUEITEM													= 4131,/// 查询拍卖行数据
1367 	PACKET_XX_SAVE_CHAR_DATA													= 4142,  //保存档案
1369 	END_PACKET_XG,
1371 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1372 	PACKET_MG_ROOMBATTLE														= 5001,///<关卡
1373 	END_PACKET_MG,
1372 	PACKET_MG_ROOMBATTLE														= 5001,///<关卡
1373 	END_PACKET_MG,
1375 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1376 	PACKET_GM_ROOMBATTLE														= 5201,///<关卡
1377 	END_PACKET_GM,
1376 	PACKET_GM_ROOMBATTLE														= 5201,///<关卡
1377 	END_PACKET_GM,
1379 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1380 	PACKET_MGM_ROOMBATTLE														= 5401,///<关卡
1381 	END_PACKET_MGM,
1380 	PACKET_MGM_ROOMBATTLE														= 5401,///<关卡
1381 	END_PACKET_MGM,
1383 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1384 	PACKET_XGM_ROOMBATTLE														= 5601,///<关卡
1385 	PACKET_XGM_PKROOM															= 5602,///<决斗房间
1385 	PACKET_XGM_PKROOM															= 5602,///<决斗房间
1386 	END_PACKET_XGM,
1388 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1389 	PACKET_MGX_ROOMBATTLE														= 5801,///<关卡
1390 	PACKET_MGX_PKROOM															= 5802,///<决斗房间

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\StructRoomBattle.h 58 KB H 文件 2013/3/3 10:03:19 2018/9/13 20:45:50 2018/9/13 20:45:50 22
4 Author:shangy		
5 Created:shangy    
6 Description :跨服房间相关结构
7 Revision :  2011/06/20 shangy create
9 =============================================================================*/
23 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
24 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
25 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
26 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
27 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
28 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
30 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
357 };
359 /************************************************************************/
360 /* 跨服报名候选数据结构定义  		                                    */
361 /************************************************************************/
362 struct RoomBattleSignupInfo
411 };
413 /************************************************************************/
414 /* 跨服报名候选数据结构定义 客户端消息结构                              */
415 /************************************************************************/
416 struct RoomBattleSignupInfo_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服取消报名结构定义   客户端消息结构	                           */
437 /************************************************************************/
438 struct RoomBattleSignupCancel_CX_Msg
447 };
449 /************************************************************************/
450 /* 跨服确认进入结构定义    客户端消息结构								*/
451 /************************************************************************/
452 struct RoomBattleWaitingEnter_CX_Msg
493 };
495 /************************************************************************/
496 /* 跨服玩家确认结构定义    服务器消息结构								*/
497 /************************************************************************/
498 struct RoomBattlePlayerEnter_XC_Msg
516 };
518 /************************************************************************/
519 /* 跨服玩家离开军团    服务器消息结构								*/
520 /************************************************************************/
521 struct RoomBattlePlayerLeave_XC_Msg
531 };
533 /************************************************************************/
534 /* 跨服确认进入结构定义    服务器消息结构								*/
535 /************************************************************************/
536 struct RoomBattleWaitingEnter_XC_Msg
639 };
641 /************************************************************************/
642 /* 跨服MapServer信息                  		                            */
643 /************************************************************************/
644 struct SMutiGroupMapServerInfo
678 };
681 /************************************************************************/
682 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
683 /************************************************************************/
684 struct MsgMGRoomBattle
704 };
706 /************************************************************************/
707 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
708 /************************************************************************/
709 struct MsgGMRoomBattle
730 };
731 /************************************************************************/
732 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
733 /************************************************************************/
734 struct MsgXGMRoomBattle_ReplyEnter
744 };
745 /************************************************************************/
746 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
747 /************************************************************************/
748 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
758 };
759 /************************************************************************/
760 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
761 /************************************************************************/
762 struct MsgXGMRoomBattle_Leave
772 };
773 /************************************************************************/
774 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
775 /************************************************************************/
776 struct MsgMGMRoomBattle
793 };
794 /************************************************************************/
795 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
796 /************************************************************************/
797 struct MsgXGMRoomBattle
821 };
822 /************************************************************************/
823 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
824 /************************************************************************/
825 struct MsgMGXRoomBattle
856 };
857 /************************************************************************/
858 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
859 /************************************************************************/
860 struct MsgCXRoomBattle
886 };
889 /************************************************************************/
890 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
891 /************************************************************************/
892 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\Core\FileDef.h 25 KB H 文件 2013/3/3 10:04:30 2018/9/13 20:45:48 2018/9/13 20:45:48 1
86 #define FILE_QUEST_SHITU_INFO				"./Config/Play/quest_shitu.tab"
87 #define FILE_EQUIP_CONST_ATTR				"./Config/Strengther/Equip_Const_Attr.tab"   		//星座装备属性
88 #define FILE_ROOM_LOGIC						"./Config/Play/Room_Logic.tab"				//跨服关卡逻辑表
89 #define FILE_ROBBRICKT						"./Config/Other/robbrick.tab"					//搬砖
90 #define FILE_LOTTO							"./Config/Play/Lotto.tab"					//乐透

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\Core\Setting.h 43 KB H 文件 2013/3/3 10:04:36 2018/9/13 20:45:48 2018/9/13 20:45:48 4
1406 	}
1407 };
1409 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1410 #define MULTI_GROUP_MAX_COUNT	(32)							//1个跨服服务器可以连接GL最大数量
1411 #define PERGROUP_MAX_MAPCOUNT	(SERVER_CAPACITY)				//1个GL可以连接的所有MapServer数量
1414 struct MULTIGROUP_SERVER_INFO
1479 		return INVALID_INDEX;
1480 	}
1483 	//当前服务器是否跨服关卡报名服务器  added by Micheal Lin by 2011-08-03
1484 	BOOL IsSignUpServer(void)
1485 	{
1486 		if (m_nGroupCount <=0 )
1487 		{
1488 			//不是跨服服务器
1489 			return FALSE;
1490 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\khanweb\Src\Share\TAB\TabDefine_Map_Misc.h 55 KB H 文件 2013/3/3 10:07:59 2018/9/13 20:45:50 2018/9/13 20:45:50 2
119     // 加载职业转换技能对应表
120 	void    LoadChangeProfession();
121 	// 跨服关卡逻辑表
122 	void	LoadRoomLogicTab();
122 	void	LoadRoomLogicTab();
123 	// 跨服关卡配置表
124 	void	LoadRoomConfigTab();
125 	// 代练配置

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Client\Game\Data\GameDataRelation.h 33 KB H 文件 2013/3/3 13:27:58 2018/9/13 20:52:39 2018/9/13 20:52:39 2
823 	void	Set_MemberCount(BYTE ucCount);
824 	BYTE	Get_MemberCount(void);
826 	/* 跨服报名暂存数据 */
827 	void	ClearSignUpInfo();	 //清除报名数据
828 	void	AskSignUpStatus();   //请求报名状态 2011-08-26 added by Michael Lin
967 	/* 国家 */
968 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
970 	/* 跨服副本组队 */
971 	RoomID_t		m_nSignUpID;
972 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Client\Game\Object\KObjCommand.h 2 KB H 文件 2013/3/3 13:28:25 2018/9/13 20:52:41 2018/9/13 20:52:41 1
15 /* 仓库整理消息发送间隔时间 */
16 #define BANK_RESET_ITEM_TIME	(1)			/* 毫秒 */
18 /* 跨服地下城报名间隔时间 */
19 #define FUBEN_RESET_COOLDOWN_ITEM	(60000)	/* 毫秒 */
21 /* obj实体消亡时间 */

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Client\Game\ScriptFunction\GameScriptFunctionMySelf.h 13 KB H 文件 2013/3/3 13:29:28 2018/9/13 20:52:42 2018/9/13 20:52:42 1
305 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
307     int32           IsRoomBattleGroupState( LuaPlus::LuaState* state);
309 	//退出跨服关卡 2011-09-16 added by Micheal Lin
310 	int32			ExitRoom(LuaPlus::LuaState *state);
312 	// add by dragon 时装上色

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Client\Game\Table\GameTableData.h 96 KB H 文件 2013/3/3 13:29:50 2018/9/13 20:52:42 2018/9/13 20:52:42 1
3559 	int32			m_AttValue7;
3561 };
3563 // 2011-10-28 add by qiliang 平移成2跨服玩家服名称显示功能
3564 #define TABLE_WORLD_NAME	(1056)
3565 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Client\Game\Table\GameTableDefine.h 13 KB H 文件 2013/3/3 13:29:51 2018/9/13 20:52:43 2018/9/13 20:52:43 1
560 	// add by dragon 时装上色蓝属性表
561 	{ TABLE_SuitEquipBlueAttr, "Equip_Suit_Gem" },
563     // 2011-10-28 add by qiliang 平移成2跨服玩家服名称显示功能
564     { TABLE_WORLD_NAME, "worldname" },
566 	// 拆解

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\GLServer\GL\GLData\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/3 13:56:48 2018/9/13 20:55:08 2018/9/13 20:55:08 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ID_t GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\MapServer\Server\GameLogic\SignUpMgr.h 10 KB H 文件 2013/3/3 13:58:32 2018/9/13 20:55:33 2018/9/13 20:55:33 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "msg_c2x_005.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\MessageDefine.h 55 KB H 文件 2013/3/3 11:32:14 2018/9/13 20:56:23 2018/9/13 20:56:23 8
945 	PACKET_GX_GAMEBATTLE														= 3105,///< 战场相关
946 	PACKET_GX_DYNAMIC_SHOP														= 3108,///< 动态价格商店
947 	PACKET_GX_NOTICESYSINFO														= 3109,///< 跨服信息
948 	PACKET_GX_RET_GAMEONLINE													= 3110,///< 返回在线信息
948 	PACKET_GX_RET_GAMEONLINE													= 3110,///< 返回在线信息
949 	PACKET_GX_NEWWORLD															= 3111,///< 切场景请求，跨服专用
950 	PACKET_GX_ACTIVITY_NOTICE													= 3112,///< 活动追踪
951 	PACKET_GX_SEARCH_VENDUE_ITEM_LIST											= 3113,///	返回查询拍卖行列表
1086 	PACKET_XG_DYNAMIC_SHOP														= 4127,// 动态价格商店
1087 	PACKET_XG_NOTICESYSINFO														= 4128,///<
1088 	PACKET_XG_NEWWORLD															= 4129,///<进入新场景，跨服专用
1089 	PACKET_XG_ACTIVITY_NOTICE													= 4130,///< 开启活动跟踪
1090 	PACKET_XG_SEARCH_VENDUEITEM													= 4131,/// 查询拍卖行数据
1102 	PACKET_XG_TOPEXP_UPDATE														= 4141, // 等级排行更新
1103 	END_PACKET_XG,
1105 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1106 	PACKET_MG_ROOMBATTLE														= 5001,///<关卡
1107 	END_PACKET_MG,
1106 	PACKET_MG_ROOMBATTLE														= 5001,///<关卡
1107 	END_PACKET_MG,
1109 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1110 	PACKET_GM_ROOMBATTLE														= 5201,///<关卡
1111 	END_PACKET_GM,
1110 	PACKET_GM_ROOMBATTLE														= 5201,///<关卡
1111 	END_PACKET_GM,
1113 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1114 	PACKET_MGM_ROOMBATTLE														= 5401,///<关卡
1115 	END_PACKET_MGM,
1114 	PACKET_MGM_ROOMBATTLE														= 5401,///<关卡
1115 	END_PACKET_MGM,
1117 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1118 	PACKET_XGM_ROOMBATTLE														= 5601,///<关卡
1119 	PACKET_XGM_PKROOM															= 5602,///<决斗房间
1119 	PACKET_XGM_PKROOM															= 5602,///<决斗房间
1120 	END_PACKET_XGM,
1122 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1123 	PACKET_MGX_ROOMBATTLE														= 5801,///<关卡
1124 	PACKET_MGX_PKROOM															= 5802,///<决斗房间

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\StructRoomBattle.h 58 KB H 文件 2013/3/3 11:32:36 2018/9/13 20:56:26 2018/9/13 20:56:26 22
4 Author:shangy		
5 Created:shangy    
6 Description :跨服房间相关结构
7 Revision :  2011/06/20 shangy create
9 =============================================================================*/
23 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
24 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
25 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
26 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
27 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
28 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
30 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
366 };
368 /************************************************************************/
369 /* 跨服报名候选数据结构定义  		                                    */
370 /************************************************************************/
371 struct RoomBattleSignupInfo
420 };
422 /************************************************************************/
423 /* 跨服报名候选数据结构定义 客户端消息结构                              */
424 /************************************************************************/
425 struct RoomBattleSignupInfo_CX_Msg
442 };
444 /************************************************************************/
445 /* 跨服取消报名结构定义   客户端消息结构	                           */
446 /************************************************************************/
447 struct RoomBattleSignupCancel_CX_Msg
456 };
458 /************************************************************************/
459 /* 跨服确认进入结构定义    客户端消息结构								*/
460 /************************************************************************/
461 struct RoomBattleWaitingEnter_CX_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家确认结构定义    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerEnter_XC_Msg
525 };
527 /************************************************************************/
528 /* 跨服玩家离开军团    服务器消息结构								*/
529 /************************************************************************/
530 struct RoomBattlePlayerLeave_XC_Msg
540 };
542 /************************************************************************/
543 /* 跨服确认进入结构定义    服务器消息结构								*/
544 /************************************************************************/
545 struct RoomBattleWaitingEnter_XC_Msg
648 };
650 /************************************************************************/
651 /* 跨服MapServer信息                  		                            */
652 /************************************************************************/
653 struct SMutiGroupMapServerInfo
687 };
690 /************************************************************************/
691 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
692 /************************************************************************/
693 struct MsgMGRoomBattle
713 };
715 /************************************************************************/
716 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
717 /************************************************************************/
718 struct MsgGMRoomBattle
739 };
740 /************************************************************************/
741 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
742 /************************************************************************/
743 struct MsgXGMRoomBattle_ReplyEnter
753 };
754 /************************************************************************/
755 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
756 /************************************************************************/
757 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
767 };
768 /************************************************************************/
769 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
770 /************************************************************************/
771 struct MsgXGMRoomBattle_Leave
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgMGMRoomBattle
802 };
803 /************************************************************************/
804 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
805 /************************************************************************/
806 struct MsgXGMRoomBattle
830 };
831 /************************************************************************/
832 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
833 /************************************************************************/
834 struct MsgMGXRoomBattle
865 };
866 /************************************************************************/
867 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
868 /************************************************************************/
869 struct MsgCXRoomBattle
895 };
898 /************************************************************************/
899 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
900 /************************************************************************/
901 struct MsgXCRoomBattle

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\Connector\ServerConnectorManager.h 2 KB H 文件 2013/3/3 12:49:14 2018/9/13 20:56:23 2018/9/13 20:56:23 1
47 	void				BroadCastLogin(IMessage *pPacket);
49 	BOOL				ConnectToServer(const char* ip, uint16 port, ID_t serverid, ConnectorID_t& connID, BOOL bCreate=TRUE, BOOL bSendSS=TRUE);
51 	//2011-10-27 by Michael 跨服线程连接方式(非阻塞)
52 	Connector*          ConnectToServerForGroup(const char* ip,uint16 port,ID_t serverid,ConnectorID_t& connID);
54 protected:

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\Core\FileDef.h 20 KB H 文件 2013/3/3 12:49:18 2018/9/13 20:56:23 2018/9/13 20:56:23 1
122 #define FILE_EQUIP_CONST_ATTR				"./Config/Equip_Const_Attr.tab"   		//星座装备属性
123 #define FILE_DYNAMIC_SHOP					"./Config/dynamic_shop_tab.tab"			//动态价格商店
124 #define FILE_ROOM_LOGIC						"./Config/Room_Logic.tab"				//跨服关卡逻辑表
125 #define FILE_ROBBRICKT						"./Config/robbrick.tab"					//搬砖
126 #define FILE_LOTTO							"./Config/Lotto.tab"					//乐透

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\Core\Setting.h 38 KB H 文件 2013/3/3 12:49:23 2018/9/13 20:56:23 2018/9/13 20:56:23 4
1255 	}
1256 };
1258 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1259 #define MULTI_GROUP_MAX_COUNT	(32)							//1个跨服服务器可以连接GL最大数量
1260 #define PERGROUP_MAX_MAPCOUNT	(SERVER_CAPACITY)				//1个GL可以连接的所有MapServer数量
1263 struct MULTIGROUP_SERVER_INFO
1328 		return INVALID_INDEX;
1329 	}
1332 	//当前服务器是否跨服关卡报名服务器  added by Micheal Lin by 2011-08-03
1333 	BOOL IsSignUpServer(void)
1334 	{
1335 		if (m_nGroupCount <=0 )
1336 		{
1337 			//不是跨服服务器
1338 			return FALSE;
1339 		}

H:\work\source\成吉思汗\[src.cool]成吉思汗\sjwork\Src\Share\TAB\TabDefine_Map_Misc.h 42 KB H 文件 2013/3/3 12:51:46 2018/9/13 20:56:26 2018/9/13 20:56:26 2
117     // 加载职业转换技能对应表
118 	void    LoadChangeProfession();
119 	// 跨服关卡逻辑表
120 	void	LoadRoomLogicTab();
120 	void	LoadRoomLogicTab();
121 	// 跨服关卡配置表
122 	void	LoadRoomConfigTab();
123 	// 代练配置

H:\work\source\成吉思汗\cj3\src\src\khan2-client\GameDataRelation.h 16 KB H 文件 2013/3/10 14:06:02 2018/10/9 14:14:55 2018/10/9 14:14:55 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
905 	
906 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
908 	/* 跨服副本组队 */
909 	ut_id_room		m_nSignUpID;
910 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\cj3\src\src\khan2-client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/10 14:06:06 2018/10/9 14:14:55 2018/10/9 14:14:55 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
72 	STT_RECRUIT_INVITE,		

H:\work\source\成吉思汗\cj3\src\src\khan2-client\GameScriptFunctionMySelf.h 18 KB H 文件 2013/3/10 14:06:23 2018/10/9 14:14:56 2018/10/9 14:14:56 1
321 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
322 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
324 	//退出跨服关卡
325 	int32			ExitRoom(LuaPlus::LuaState *state);
327 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\cj3\src\src\khan2-client\GameTableData.h 103 KB H 文件 2013/3/10 14:06:33 2018/10/9 14:14:56 2018/10/9 14:14:56 1
2694 	int32 m_nActivePoint;       //星座名称	
2695 };
2697 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2698 #define TABLE_WORLD_NAME	(1017)
2699 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\cj3\src\src\khan2-client\GameTableDefine.h 13 KB H 文件 2013/3/10 14:06:33 2018/10/9 14:14:56 2018/10/9 14:14:56 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\cj3\src\src\khan2-client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/10 14:07:17 2018/10/9 14:14:58 2018/10/9 14:14:58 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MGuildBattleManager.h 2 KB H 文件 2013/3/10 14:08:05 2018/10/9 14:15:00 2018/10/9 14:15:00 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MKManager.h 3 KB H 文件 2013/3/10 14:08:05 2018/10/9 14:15:00 2018/10/9 14:15:00 2
80 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
81 extern MKManager<LostItemMK> g_LostItemMKManager;
83 //跨服战积分相关
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
84 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
85 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
87 //跨服战积分相关
88 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
89 extern MKManager<SubstituteMK>			g_SubstituteMKManager;

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MPVPGuildPoint.h 2 KB H 文件 2013/3/10 14:08:05 2018/10/9 14:15:00 2018/10/9 14:15:00 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MPVPPointArithmetic.h 1 KB H 文件 2013/3/10 14:08:05 2018/10/9 14:15:00 2018/10/9 14:15:00 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MPVPPointInfo.h 8 KB H 文件 2013/3/10 14:08:06 2018/10/9 14:15:00 2018/10/9 14:15:00 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MPVPPointManager.h 5 KB H 文件 2013/3/10 14:08:06 2018/10/9 14:15:00 2018/10/9 14:15:00 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MPVPToplist.h 3 KB H 文件 2013/3/10 14:08:06 2018/10/9 14:15:00 2018/10/9 14:15:00 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/10 14:08:08 2018/10/9 14:15:00 2018/10/9 14:15:00 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\cj3\src\src\khan2-glserver\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/10 14:08:13 2018/10/9 14:15:01 2018/10/9 14:15:01 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\GMCommand.h 16 KB H 文件 2013/3/10 14:09:19 2018/10/9 14:15:03 2018/10/9 14:15:03 1
285 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
286 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
288 	// 增加帮会跨服战胜利次数
289 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
291 	//  获取和设置可视组

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\IMPVPBattle.h 1 KB H 文件 2013/3/10 14:09:41 2018/10/9 14:15:04 2018/10/9 14:15:04 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\LuaFunction.h 330 KB H 文件 2013/3/10 14:09:53 2018/10/9 14:15:04 2018/10/9 14:15:04 9
9155 int32	LuaFunction_SetGuildParam( Lua_State *L);
9157 /**
9158 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9159 * @param	mapid_t	 mapid	整数  场景id
9160 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9166 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9168 /**
9169 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9170 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9171 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10232 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10234 /**
10235 * @brief	跨服PVP注册场景
10236 * @param	int32				nType	战场类型
10237 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10240 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10242 /**
10243 * @brief	请求进入跨服帮会战场
10244 * @param	ut_id_map	 mapId	玩家所在场景ID
10245 * @param	ut_id_obj	 selfId	玩家ObjID
10248 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10250 /**
10251 * @brief	跨服帮战报名
10252 * @param	ut_id_map	 mapId	玩家所在场景ID
10253 * @param	ut_id_obj	 selfId	玩家ObjID
10256 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10258 /**
10259 * @brief	通知GL跨服帮战结果
10260 * @param	ut_id_map	 mapId	玩家所在场景ID
10261 * @param	ut_id		 WorldID 赢方世界ID
10267 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10269 /**
10270 * @brief	跨服帮会战赛季当前周数
10271 * @param	无参数
10272 * @return	int
10274 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10276 /**
10277 * @brief	获取跨服帮战当前赛季的比赛场次
10278 * @return	int
10279 */
10512 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10514 /**
10515 跨服副本搜索
10516 * @param1	ut_id_map mapId
10517 * @param2 ut_id_obj objId

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\MGuildBattle.h 7 KB H 文件 2013/3/10 14:10:05 2018/10/9 14:15:05 2018/10/9 14:15:05 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\MPVP2v2Battle.h 7 KB H 文件 2013/3/10 14:10:05 2018/10/9 14:15:05 2018/10/9 14:15:05 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\MPVP6v6Battle.h 7 KB H 文件 2013/3/10 14:10:06 2018/10/9 14:15:05 2018/10/9 14:15:05 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\MPVPBattleManager.h 2 KB H 文件 2013/3/10 14:10:06 2018/10/9 14:15:05 2018/10/9 14:15:05 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\cj3\src\src\khan2-mapserver\SignUpMgr.h 10 KB H 文件 2013/3/10 14:10:32 2018/10/9 14:15:06 2018/10/9 14:15:06 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Define.h 43 KB H 文件 2013/3/10 14:10:49 2018/10/9 14:15:07 2018/10/9 14:15:07 5
341 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
342 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
343 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
344 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
345 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
346 #define MPVP_JOIN_TIME_SIZE					(6)
346 #define MPVP_JOIN_TIME_SIZE					(6)
347 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
348 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
349 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
351 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
353 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Enum.h 88 KB H 文件 2013/3/10 14:10:51 2018/10/9 14:15:07 2018/10/9 14:15:07 4
2384 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2386 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2388 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2389 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2390 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2391 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2393 	GD_GUILD_MAX_COUNT
2394 };

H:\work\source\成吉思汗\cj3\src\src\khan2-share\MessageDefine.h 61 KB H 文件 2013/3/10 14:10:52 2018/10/9 14:15:07 2018/10/9 14:15:07 13
151 	END_MESSAGE_DD,
153 	BEGIN_MESSAGE_GG																=  750,
154 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息
155 	MESSAGE_GG_MAPNOTIFY															=  752,///<
156 	MESSAGE_GS_ASKDATA															=  753,///<
454 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
455 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
456 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场
457 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
458 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
851 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
852 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
853 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场
854 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
855 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息
1046 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息
1047 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误
1048 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场
1049 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 重加载配置
1050 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理
1053 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品
1054 	MESSAGE_GX_COLLECT_MAC														= 3125,//
1055 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用
1056 	MESSAGE_GX_GARDEN															= 3127,//家园
1057 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品
1198 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团
1199 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息
1200 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场
1201 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理
1202 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播
1204 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品
1205 	MESSAGE_XG_RETMAC															= 4144,
1206 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果
1207 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用
1208 	MESSAGE_XG_GARDEN															= 4147,//家园
1209 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品
1210 	MESSAGE_XG_CHANNELMERIDIAN													= 4149,//经脉
1212 	END_MESSAGE_XG,
1214 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1215 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡
1216 	END_PACKET_MG,
1218 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1219 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡
1220 	END_PACKET_GM,
1222 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1223 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡
1224 	END_PACKET_MGM,
1226 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1227 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡
1228 	END_PACKET_XGM,
1230 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1231 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡
1233 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息

H:\work\source\成吉思汗\cj3\src\src\khan2-share\MPVPBattleDefine.h 5 KB H 文件 2013/3/10 14:10:52 2018/10/9 14:15:07 2018/10/9 14:15:07 30
18 	MPVP_BATTLE_SIGNUP, 								// 报名请求
19 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
20 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
21 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
22 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
23 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
24 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
25 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
26 };
28 enum MPVP_BATTLE_STATECODE
49 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
50 };
52 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
53 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
54 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
55 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
56 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
57 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
58 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
59 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
61 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
62 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
63 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
65 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
66 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
67 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
68 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
70 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
71 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
72 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
73 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
74 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
75 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
76 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
77 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
78 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
79 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
80 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
82 #pragma pack(push, 1)

H:\work\source\成吉思汗\cj3\src\src\khan2-share\StructDB.h 183 KB H 文件 2013/3/10 14:11:01 2018/10/9 14:15:07 2018/10/9 14:15:07 2
5769 };
5771 /************************************************************************/
5772 /* 跨服战积分的DB存储结构                                               */
5773 /************************************************************************/	
5775 enum MPVPPOINT_SHM_USE_STATS 
5789 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
5790 	int32	m_nTotalWinTimes;							//总共获胜的场次
5791 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
5792 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
5793 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引

H:\work\source\成吉思汗\cj3\src\src\khan2-share\StructGuild.h 104 KB H 文件 2013/3/10 14:11:03 2018/10/9 14:15:07 2018/10/9 14:15:07 4
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	

H:\work\source\成吉思汗\cj3\src\src\khan2-share\StructMap.h 13 KB H 文件 2013/3/10 14:11:04 2018/10/9 14:15:07 2018/10/9 14:15:07 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\cj3\src\src\khan2-share\StructMPVPPoint.h 7 KB H 文件 2013/3/10 14:11:04 2018/10/9 14:15:07 2018/10/9 14:15:07 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\cj3\src\src\khan2-share\StructTopList.h 10 KB H 文件 2013/3/10 14:11:07 2018/10/9 14:15:07 2018/10/9 14:15:07 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/11 11:17:20 2018/10/9 14:15:08 2018/10/9 14:15:08 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/11 11:17:21 2018/10/9 14:15:08 2018/10/9 14:15:08 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Core\act_define.h 32 KB H 文件 2013/3/11 11:17:26 2018/10/9 14:15:08 2018/10/9 14:15:08 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Core\FileConfigConst.h 22 KB H 文件 2013/3/11 11:17:23 2018/10/9 14:15:08 2018/10/9 14:15:08 1
269 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
270 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
271 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
273 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
274 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Core\ScriptIDConst.h 24 KB H 文件 2013/3/11 11:17:25 2018/10/9 14:15:08 2018/10/9 14:15:08 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
253 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
254 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
256 //跨服 2v2 战场 by rj 2010-9-21
257 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
258 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Core\Setting.h 38 KB H 文件 2013/3/11 11:17:25 2018/10/9 14:15:08 2018/10/9 14:15:08 23
106 	int32	m_LairdBattleGuildMemberCount;
107 	int32	m_MPVP6v6BattleTeamNumLimit;
108 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
109 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
110 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
111 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
112 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
113 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
114 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
115 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
116 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
117 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
118 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
119 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
120 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
122 	int32	m_MaxOnlineUser;
123 	int32	m_MaxHorse;
500 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
501 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
502 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
504 	BASE_SETTING()
505 	{
1221 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1222 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1224 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1226 struct MULTIGROUP_SERVER_INFO
1227 {
1245 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1246 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1247 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1248 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1249 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1250 	int32					m_nMaxMGuildMapCnt;
1252 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1253 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1255 	MULTIGROUP_CONFIG()
1256 	{
1298 		return INVALID_KHAN_INDEX;
1299 	}
1301 	//当前服务器是否跨服关卡报名服务器
1302 	BOOL IsSignUpServer(void)
1303 	{
1304 		if (m_nGroupCount <=0 )
1305 		{
1306 			//不是跨服服务器
1307 			return FALSE;
1308 		}
1315 		return FALSE;
1316 	}
1318 	//当前开不开跨服副本MAP
1319 	BOOL IsMultMapOpen()
1320 	{
1321 		if (m_nGroupCount <=0 )
1322 		{
1323 			//不是跨服服务器
1324 			return FALSE;
1325 		}

H:\work\source\成吉思汗\cj3\src\src\khan2-share\DataBase\ArchiveInterface.h 48 KB H 文件 2013/3/11 11:17:27 2018/10/9 14:15:08 2018/10/9 14:15:08 1
1304 };
1306 /************************************************************************/
1307 /* 跨服战积分存档结构                                                   */
1308 /************************************************************************/
1309 class MPVPPointInfo	:

H:\work\source\成吉思汗\cj3\src\src\khan2-share\DataBase\SqlStatement.h 8 KB H 文件 2013/3/11 11:17:28 2018/10/9 14:15:08 2018/10/9 14:15:08 1
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/11 11:19:34 2018/10/9 14:15:13 2018/10/9 14:15:13 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\cj3\src\src\khan2-share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/11 11:21:12 2018/10/9 14:15:18 2018/10/9 14:15:18 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\cj3\src\src\khan2-share\TAB\TabDefine_Map_Misc.h 44 KB H 文件 2013/3/11 11:21:31 2018/10/9 14:15:19 2018/10/9 14:15:19 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\成吉思汗\Khan2\Client\Game\Data\Struct\GameDataStructSystemTip.h 6 KB H 文件 2013/3/11 12:48:15 2018/10/9 16:52:55 2018/10/9 16:52:55 1
66 	STT_KING_ZHAOJI,							/* 国王召集令进入提示 */
67 	STT_GAMEBATTLE_LAIRD_INVITE_PlAYERAID,		/* 领地战邀请外援 */
68 	STT_MPVP2V2_BATTLE,							/* 跨服PVP2v2战场进入提示 2010-9-23 by rj */
69 	STT_COUNTRY_COLLEAGUE,						/* 国家结盟邀请*/
70 	STT_NUM,									/* 数量 */

H:\work\source\成吉思汗\Khan2\Client\Game\Table\GameTableData.h 96 KB H 文件 2013/8/12 16:43:43 2018/10/9 16:53:03 2018/10/9 16:53:03 1
3381 	int32 m_nActivePoint;       //星座名称	
3382 };
3384 /* 2010-10-19 by rj 跨服玩家服名称显示 */
3385 #define TABLE_WORLD_NAME	(1017)
3386 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\Khan2\Client\Game\Table\GameTableDefine.h 11 KB H 文件 2013/3/10 22:20:24 2018/10/9 16:53:03 2018/10/9 16:53:03 1
416 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
418 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
420 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
421 	{TABLE_WORLD_NAME, "worldname"},
423 	/*特定玩法物品表*/

H:\work\source\成吉思汗\Khan2\MapServer\Server\Other\IMPVPBattle.h 1 KB H 文件 2013/3/10 22:43:46 2018/10/9 16:55:49 2018/10/9 16:55:49 5
4 #include "TypeDefine.h"
5 #include "Player.h"
7 // 跨服战场类型
8 enum MPVPBattleType
9 {
8 enum MPVPBattleType
9 {
10 	MPVPBATTLETYPE_2V2 = 0,					// 跨服 2V2
11 	MPVPBATTLETYPE_6V6,						// 跨服 6V6
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
12 	MPVPBATTLETYPE_MAXCOUNT
13 };
15 #define MPVPBATTLETYPE_NUM			1		// 跨服战场类型数量
17 // 跨服战场基类接口
18 class IMPVPBattle
19 {

H:\work\source\成吉思汗\Khan2\MapServer\Server\Other\MPVP2v2Battle.h 8 KB H 文件 2013/3/10 22:43:47 2018/10/9 16:55:49 2018/10/9 16:55:49 2
6 #include "Player.h"
7 #include "IMPVPBattle.h"
9 #define MBATTLE_TYPE_2V2BATTLE			(20)						// 战场时间表中的跨服 2v2 战场类型
10 #define NUM_MPVP2V2_SIGNUP				(2)							// 报名条目数组大小
11 #define MAX_MPVP2V2_SCENECOUNT			(512)						// 开辟场景数组上限
202 	}
203 };
205 // 双人跨服战场派生类
206 class CMPVP2v2Battle: public IMPVPBattle
207 {

H:\work\source\成吉思汗\Khan2\MapServer\Server\Other\MPVPBattleManager.h 2 KB H 文件 2013/3/10 22:43:48 2018/10/9 16:55:49 2018/10/9 16:55:49 3
29 	int32		m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVPBattleType nType);		// 以类型方式获得跨服战场类
49 public:
50 	PLAYERLIST	*GetNearTeamMemberList(Player *pPlayer);		// 工具函数，获取附近队友
55 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
57 private:
58 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
59 	PLAYERLIST		m_lsNearTeamMember;							// 附近队友列表
60 };

H:\work\source\成吉思汗\Khan2\Share\MessageDefine.h 49 KB H 文件 2013/3/10 10:49:07 2018/10/9 16:57:37 2018/10/9 16:57:37 3
142 	END_PACKET_DD,
144 	BEGIN_PACKET_GG																=  750,
145 	PACKET_GG_MPVP2V2SCENENOTIFY												=  751,///<	// 跨服战场场景线程通知消息 2010-9-23 by rj
146 	PACKET_GG_SCENENOTIFY														=  752,///<
147 	PACKET_GS_ASKDATA															=  753,///<
438 	PACKET_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级
439 	PACKET_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求
440 	PACKET_CX_MPVP2V2_BATTLE													= 1274,// by rj 2010-9-21 跨服战场
441 	PACKET_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息
442 	PACKET_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级
763 	PACKET_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级
764 	PACKET_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复
765 	PACKET_XC_MPVP2V2_BATTLE													= 2326,// by rj 2010-9-21 跨服战场
766 	PACKET_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息
767 	PACKET_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息

H:\work\source\成吉思汗\Khan2\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/10 12:39:52 2018/10/9 16:57:36 2018/10/9 16:57:36 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ConnectorID_t pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ConnectorID_t pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\Khan2\Share\Connector\ConnectorPool.h 1 KB H 文件 2013/3/10 12:39:52 2018/10/9 16:57:36 2018/10/9 16:57:36 1
18 	int32				GetConnectorCount() { return MAX_POOL_SIZE - m_uConnectorCount; }
20 	Connector*			GetConnector(ConnectorID_t ConnectorID);
21 	Connector			*GetConnectorForGroupMode(ConnectorID_t ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
22 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
23 	virtual BOOL		DelConnector(ConnectorID_t ConnectorID);

H:\work\source\成吉思汗\Khan2\Share\Core\ScriptDef.h 17 KB H 文件 2013/3/10 12:39:56 2018/10/9 16:57:36 2018/10/9 16:57:36 2
62 #define PVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303000)
63 #define PVP2V2_BATTLE_FLOW_SCRIPT_ID						(303001)
65 #define MPVP2V2_BATTLE_SIGNUP_SCRIPT_ID						(303100)		// 跨服 2v2 战场 by rj 2010-9-21
66 #define MPVP2V2_BATTLE_FLOW_SCRIPT_ID						(303101)
68 #define PVP6V6_BATTLE_SIGNUP_SCRIPT_ID						(303005)
213 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("OnSignupResult")
214 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
216 //跨服 2v2 战场 by rj 2010-9-21
217 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("OnMBattleMatchInfo")
218 #define DEF_MPVP2V2_BATTLE_BATTLESCENETRANS					("OnMPVP2v2BattleChangeScene")

H:\work\source\成吉思汗\Khan2\Share\Core\Setting.h 29 KB H 文件 2013/8/18 22:25:04 2018/10/9 16:57:36 2018/10/9 16:57:36 2
1029 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1030 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1031 	int32					m_nMax2v2SceneCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1032 	int32					m_nMax6v6SceneCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1034 	MULTIGROUP_CONFIG()
1035 	{

H:\work\source\成吉思汗\mycode\Client\GameDataRelation.h 17 KB H 文件 2013/3/9 12:56:32 2018/10/8 21:48:55 2018/10/8 21:48:55 2
782 	void	Set_MemberCount(BYTE ucCount);
783 	BYTE	Get_MemberCount(void);
785 	/* 跨服报名暂存数据 */
786 	void	ClearSignUpInfo();	 //清除报名数据
787 	void	AskSignUpStatus();   //请求报名状态 
916 	
917 	CountryFunctionaryInfo m_CountryFunctionInfo[COUNTRY_FUNCTION_TYPE_NUM];
919 	/* 跨服副本组队 */
920 	ut_id_room		m_nSignUpID;
921 	RoomBattlePos	m_RoomPos;

H:\work\source\成吉思汗\mycode\Client\GameDataStructGuild.h 5 KB H 文件 2013/3/9 12:56:33 2018/10/8 21:48:55 2018/10/8 21:48:55 1
45 	int32		m_nStrength;		
46 	int32		m_nShiMing;
48 	// 跨服联赛信息 [11/9/2012 sunlei]
49 	int32       m_nMLeagueTopIndex;
50 	int32       m_nMLeagueWinTimes;

H:\work\source\成吉思汗\mycode\Client\GameDataStructSystemTip.h 4 KB H 文件 2013/3/9 12:56:37 2018/10/8 21:48:55 2018/10/8 21:48:55 1
66 	STT_KAISER_CALL_IN,							//皇帝战召集
67 	STT_LEAGUE_ZHAOJI,							//联盟召集令
68 	STT_MGUILD_BATTLE,							//跨服帮会战
69 	STT_HORSEGAMING_INVITE,						//开始赛马邀请
70 	STT_XINSHOULIBAO,							//新手礼包

H:\work\source\成吉思汗\mycode\Client\GameScriptFunctionMySelf.h 20 KB H 文件 2013/3/9 12:56:55 2018/10/8 21:48:55 2018/10/8 21:48:55 1
324 	int32			GetGuanQiaSpellNum(LuaPlus::LuaState * state);
325 	int32			IsShowGuanqiaWindown(LuaPlus::LuaState * state);
327 	//退出跨服关卡
328 	int32			ExitRoom(LuaPlus::LuaState *state);
330 	// --------------------------------------------------------------------------------------------

H:\work\source\成吉思汗\mycode\Client\GameTableData.h 129 KB H 文件 2018/10/14 20:25:22 2018/10/8 21:48:55 2018/10/8 21:48:55 1
2784 	int32 m_nActivePoint;       //星座名称	
2785 };
2787 /* 2010-10-19 by rj 跨服玩家服名称显示 */
2788 #define TABLE_WORLD_NAME	(1017)
2789 struct _TABLE_WORLD_NAME

H:\work\source\成吉思汗\mycode\Client\GameTableDefine.h 16 KB H 文件 2013/3/9 12:57:07 2018/10/8 21:48:55 2018/10/8 21:48:55 1
355 	{TABLE_EQUIP_CONST_INFO, "Equip_Const_Info"},
357 	{TABLE_EQUIP_CONST_ACTIVE_POINT, "Equip_Const_Active_Point"},	
359 	/* 2010-10-19 by rj 跨服玩家服名称显示 */
360 	{TABLE_WORLD_NAME, "worldname"},
362 	/*特定玩法物品表*/

H:\work\source\成吉思汗\mycode\Client\XCMPVPBattleDelegater.h 2 KB H 文件 2013/3/9 12:58:00 2018/10/8 21:49:05 2018/10/8 21:49:05 1
5 #include "MPVPBattleDefine.h"
7 // ----------------------------------------------------------------------------
8 // 跨服战场消息处理
9 // ----------------------------------------------------------------------------
10 class XCMPVPBattleDelegater

H:\work\source\成吉思汗\mycode\GLServer\GLData\Guild.h 37 KB H 文件 2013/3/9 12:58:51 2018/10/8 21:49:06 2018/10/8 21:49:06 1
1059 	BOOL GuildBusSkillConsumeGuildResource(int32 nSkillID, int32 nType);
1060 	
1061 	// 跨服联赛比赛开始倒计时 [2/4/2013 sunlei]
1062 	void SetLeagueMatchStartCD(int32 nCDTime);
1063 	int32 GetLeagueMatchStartCD();

H:\work\source\成吉思汗\mycode\GLServer\GLData\GuildCenter.h 4 KB H 文件 2013/3/9 12:58:52 2018/10/8 21:49:06 2018/10/8 21:49:06 1
87 	ut_id_guild		OnUserLogin(PLAYER *pKPlayer,SArchiveLoader_Player* pDBHuman);
89 	int32 GetKingIDs(SNID_t* pID,uint32 nSize);
90 	// 设置家族跨服联赛状态
91 	void SetLeagueGuildState(int32 nState,BOOL bToClient=false);
92 	/*

H:\work\source\成吉思汗\mycode\GLServer\GLData\MGuildBattleManager.h 2 KB H 文件 2013/3/9 12:58:58 2018/10/8 21:49:08 2018/10/8 21:49:08 3
10 class Guild;
11 class PLAYER;
14 // 跨服帮会战信息
15 struct MGuildMatchInfo
16 {
23 	};
25 	ut_id_guild GuildID; // 帮会ID
26 	ut_id nServerID; // 跨服服务器ID
27 };
29 // ----------------------------------------------------------------------------
27 };
29 // ----------------------------------------------------------------------------
30 // 跨服帮会战管理类
31 // ----------------------------------------------------------------------------
32 class	MGuildBattleManager

H:\work\source\成吉思汗\mycode\GLServer\GLData\MPVPGuildPoint.h 2 KB H 文件 2013/3/9 12:58:58 2018/10/8 21:49:08 2018/10/8 21:49:08 2
2 #define _MPVP_GUILD_POINT_H_
4 /************************************************************************/
5 /* 帮会跨服战积分的实现                                                 */
6 /************************************************************************/
8 #include "MPVPPointInfo.h"
31 	virtual	void			AddDefineParam(MPVPPointData* pMPVPPointData, BOOL bIsLoadData,  int32 nParams);
33 	/*============================================================================================================
34 	加载跨服帮战每周场次信息
35 	============================================================================================================*/
36 	void					LoadMPVPGuildWeekSeqNumInfo();

H:\work\source\成吉思汗\mycode\GLServer\GLData\MPVPPointArithmetic.h 1 KB H 文件 2013/3/9 12:58:58 2018/10/8 21:49:08 2018/10/8 21:49:08 3
2 #define _MPVP_POINT_ARITHMETIC_H_
4 /************************************************************************/
5 /* 跨服战积分算法器,负责各种跨服战积分的计算逻辑实现                    */
6 /************************************************************************/
8 class MPVPPointArithmetic
13 	
14 	/*============================================================================================================
15 	计算跨服帮战初始积分
16 	@nPeriodStartWeek 赛季开始的周索引
17 	@nSeqNumOfWeek 周的序号

H:\work\source\成吉思汗\mycode\GLServer\GLData\MPVPPointInfo.h 8 KB H 文件 2013/3/9 12:58:59 2018/10/8 21:49:08 2018/10/8 21:49:08 3
2 #define _MPVP_POINT_INFO_H_
4 /************************************************************************/
5 /* 具体跨服积分的处理接口                                               */
6 /************************************************************************/
8 #include "IntegerHashMap.h"
33 	}
35 	/*============================================================================================================
36 	跨服帮会战中
38 	@nWorldId 服务器Id
39 	@nUnitId 单位Id,会根据nType类型不同而标识不同的Id,如帮会Id或者国家Id等
157 	int32					m_nCurrentPeriodStartWeek;																	//当前赛季开始周索引
158 	int16					m_nType;																					//类型
160 	int32					m_nMPVPNumPerWeek;																//每周跨服帮战的次数
161 	int32					m_WeekSeqNum[MPVP_GUILD_MAX_SEQNUM_PER_WEEK];									//每周帮战场次信息
163 	int32					m_nCurrentWeek;																	//当前的周

H:\work\source\成吉思汗\mycode\GLServer\GLData\MPVPPointManager.h 5 KB H 文件 2013/3/9 12:58:59 2018/10/8 21:49:08 2018/10/8 21:49:08 8
7 class MPVPPointInfo;
9 /************************************************************************/
10 /* 跨服战积分管理器                                                     */
11 /************************************************************************/
12 class MPVPPointManager
28 	MPVPPointData*		GetPoint(int32 nType, int32	nWorldId, int32 nUnitId) const;						
30 	/*============================================================================================================
31 	修改制定对象的战场积分,跨服帮会战中
32 	
33 	@nType MPVP的类型
48 	IntegerHashMap*		GetAllPointInfoByType(int32 nType) const;
50 	/*============================================================================================================
51 	获取某个跨服战本赛季的开始周
52 	============================================================================================================*/
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
53 	int32				GetMPVPPointCurrentPeriodStartWeek(int32 nType) const;
55 	/*============================================================================================================
56 	获取某个跨服战的当前周
57 	============================================================================================================*/
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
58 	int32				GetMPVPPointCurrentWeek(int32 nType) const;
60 	/*============================================================================================================
61 	获取指定名次的跨服积分信息
62 	============================================================================================================*/
63 	MPVPPointData*		GetPointInfoByRank(int32 nType, int32 nRank);									
73 	int32				GetPointNumByType(const int32 nType) const;
75 	/*============================================================================================================
76 	构建跨服积分的复合Key
77 	@nUnitId 单位Id
78 	@nWorldId 服务器Id
96 private:
97 	void				Clear();
98 	void				RegisterMPVPPoint();															//注册跨服积分的逻辑实现
99 	BOOL				InitFromSHM();																	//从SHM中刷出
101 private:
101 private:
102 	BOOL				m_bInit;
103 	MPVPPointInfo*		m_MPVPPointInfos[MPVP_POINT_TYPE_NUM];											//跨服战积分实现
104 	MPVPPointArithmetic	pMPVPPointArithmetic;															//积分计算接口
105 };

H:\work\source\成吉思汗\mycode\GLServer\GLData\MPVPToplist.h 3 KB H 文件 2013/3/9 12:58:59 2018/10/8 21:49:08 2018/10/8 21:49:08 6
2 #define __MPVP_TOPLIST_H__
4 /*************************************************************************/
5 /* 跨服帮会排行榜,暂时只实现帮会排行,如之后需要,在从上面抽出一层跨服排行 */
6 /*************************************************************************/
8 #include "TopList.h"
25 	void			LoadData();			//启动时,进行数据加载
26 	
27 	virtual	void	FillCustomMPVPTopData(_TOP_DATA *pData, const MPVPPointData* pPointData) = 0;		//从跨服积分数据中获取相应信息
28 	virtual	BOOL	UpdateByCustomValue(int32 nPrimaryID, const MPVPPointData* pPointData, BOOL bReplaceAlways=TRUE) = 0; //从跨服积分数据中获取相应信息
30 	virtual BOOL	IsNeedLoad(const MPVPPointData* pPointData)								//判断这个数据是否要加载
31 	{
38 };
40 /************************************************************************/
41 /* 当前赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样      */
42 /************************************************************************/
43 class CurrentMPVPGuildTopList :
51 };
53 /************************************************************************/
54 /* 总赛季的跨服排行榜的实现,只有从积分信息中加载数据的部分不一样		*/
55 /************************************************************************/
56 class TotalMPVPGuildTopList :

H:\work\source\成吉思汗\mycode\GLServer\GLData\MutiGroupMapServerManager.h 4 KB H 文件 2013/3/9 12:59:01 2018/10/8 21:49:08 2018/10/8 21:49:08 2
4 Author:Michael		
5 Created:Michael
6 Description :跨服MapServer管理器定义
7 Revision :  2011/06/17 Michael create
9 =============================================================================*/
77 	//得到报名服务器
78 	ut_id GetSignupMapServer() const;
80 	//////////////////跨服消息处理相关///////////////////
82 	//向报名服务器发送消息
83 	BOOL SendMessage2SignupServer(IMessage* pPacket) const;

H:\work\source\成吉思汗\mycode\GLServer\GLData\PVPLeagueMatchManager.h 6 KB H 文件 2013/3/9 12:59:04 2018/10/8 21:49:08 2018/10/8 21:49:08 2
207 	STRU_MAPLIST<ut_id_guild,20> m_nLostList;// 淘汰队伍表
208 	ut_id_connector m_nCMapServerID;// 负责联赛统计的服务器ID
209 	STRU_MAPLIST<MATCH_INFO,256> m_nSceneList; // 跨服场景列表
210 	STRU_MAPLIST<MATCH_RESULT_STAT,20> m_nResult;   // 跨服赛本服战队，比赛结果统计
211 	IntegerHashMap m_PreResult; // 前次联赛结果
212 	ulong m_nTimeRefresh;      // 同步DBS数据频率

H:\work\source\成吉思汗\mycode\GLServer\Run\MKManager.h 4 KB H 文件 2013/3/9 12:58:58 2018/10/8 21:49:08 2018/10/8 21:49:08 3
81 extern ArchiveNodePool<LostItemMK>		g_LostItemMKPool;
82 extern MKManager<LostItemMK> g_LostItemMKManager;
84 //跨服战积分相关
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
85 extern ArchiveNodePool<MPVPPointMK>		g_MPVPPointMKPool;
86 extern MKManager<MPVPPointMK>			g_MPVPPointMKManager;
88 //跨服战积分相关
89 extern ArchiveNodePool<SubstituteMK>		g_SubstituteMKPool;
90 extern MKManager<SubstituteMK>			g_SubstituteMKManager;
97 extern ArchiveNodePool<GlobalValMK>		g_GlobalValMKPool;
98 extern MKManager<GlobalValMK>			g_GlobalValMKPoolManager;
100 // 跨服联赛 [11/24/2012 sunlei]
101 extern ArchiveNodePool<MPVPLeaguePointMK>		g_MPVPLeaguePointMKPool;
102 extern MKManager<MPVPLeaguePointMK>			g_MPVPLeaguePointMKManager;

H:\work\source\成吉思汗\mycode\GLServer\Run\ServerConnectorManager_GL.h 2 KB H 文件 2013/3/9 12:59:07 2018/10/8 21:49:08 2018/10/8 21:49:08 1
34 	BOOL			ReachTime(uint32 uTime);
35 	BOOL			CheckExitFile();
37 	// 取得跨服服务器ID列表, 返回值代表数量
38 	int32			GetGroupServer(ut_id *ServerIDs);
40 private:

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\IMPVPBattle.h 1 KB H 文件 2013/3/9 13:00:33 2018/10/8 21:49:10 2018/10/8 21:49:10 1
5 #include "MPVPBattleDefine.h"
6 #include "GXMPVPBattle.h"
8 // 跨服战场基类接口
9 class IMPVPBattle
10 {

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\MGuildBattle.h 7 KB H 文件 2013/3/9 13:00:57 2018/10/8 21:49:11 2018/10/8 21:49:11 1
175 	}
176 };
178 // 跨服帮会战场派生类
179 class CMGuildBattle: public IMPVPBattle
180 {

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\MPVP2v2Battle.h 7 KB H 文件 2013/3/9 13:00:58 2018/10/8 21:49:11 2018/10/8 21:49:11 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP2v2Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\MPVP6v6Battle.h 7 KB H 文件 2013/3/9 13:00:58 2018/10/8 21:49:11 2018/10/8 21:49:11 1
168 	}
169 };
171 // 双人跨服战场派生类
172 class CMPVP6v6Battle: public IMPVPBattle
173 {

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\MPVPBattleManager.h 2 KB H 文件 2013/3/9 13:00:58 2018/10/8 21:49:11 2018/10/8 21:49:11 3
29 	int32			m_nParam4;						//参数4
30 };
32 // 跨服战场管理器
33 class CMPVPBattleManager
34 {
45 	void		Release();										// 释放管理器
46 	BOOL		HeartBeat(ulong uTime);							// 心跳处理
47 	IMPVPBattle *GetMPVPBattleByType(MPVP_BATTLE_TYPE nType);	// 以类型方式获得跨服战场类
49 private:
50 	void InitBattleTimerTable();								// 初始化战场配置表条目
52 		SplitStringLevelTwo *pSplitL2, const char *pSplitString, uchar *pVal, int32 MaxCnt);
54 private:
55 	IMPVPBattle		**m_pMPVPBattleList;						// 跨服战场列表
56 };
57 extern CMPVPBattleManager *g_pMPVPBattleManager;

H:\work\source\成吉思汗\mycode\MapServer\GameLogic\SignUpMgr.h 10 KB H 文件 2013/3/9 13:01:26 2018/10/8 21:49:11 2018/10/8 21:49:11 2
4 Author:shangy		
5 Created:shangy    
6 Description :跨服报名管理类
7 Revision :  2011/06/20 shangy create
8 			2011/08/05 Michael Lin Modify
18 #include "MGMRoomBattle.h"
19 #include "CXRoomBattle.h"
21 //跨服报名管理类
23 class SignUpMgr
24 {

H:\work\source\成吉思汗\mycode\MapServer\Other\GMCommand.h 16 KB H 文件 2013/3/9 13:00:16 2018/10/8 21:49:10 2018/10/8 21:49:10 1
286 	void	Handler_getchariothonour(Player *pPlayer, char *pParam);
287 	void	Handler_addchariothonour(Player *pPlayer, char *pParam);
289 	// 增加帮会跨服战胜利次数
290 	void	Handler_addguildwin(Player *pPlayer, char *pParam);
292 	//  获取和设置可视组

H:\work\source\成吉思汗\mycode\MapServer\Script\LuaFunction.h 391 KB H 文件 2013/3/9 13:00:44 2018/10/8 21:49:11 2018/10/8 21:49:11 10
9276 int32	LuaFunction_SetGuildParam( Lua_State *L);
9278 /**
9279 * @brief	需要参数个数:5 设置帮会数据,跨服的情况使用
9280 * @param	mapid_t	 mapid	整数  场景id
9281 * @param	ut_id_obj	 selfId	整数  玩家ObjID
9287 int32	LuaFunction_SetGuildParamEx( Lua_State *L);
9289 /**
9290 * @brief	需要参数个数:4 取得帮会数据,跨服的时候使用
9291 * @param	ut_id_map	 mapId	整数  玩家所在场景ID
9292 * @param	ut_id_obj	 selfId	整数  玩家ObjID
10380 int32   LuaFunction_CountryLeagueZhaoji( Lua_State * L );
10382 /**
10383 * @brief	跨服PVP注册场景
10384 * @param	int32				nType	战场类型
10385 * @param	ut_id_map			mapId	整数  玩家所在场景ID
10388 int32	LuaFunction_MPVPRegisterMap(Lua_State *L);
10390 /**
10391 * @brief	请求进入跨服帮会战场
10392 * @param	ut_id_map	 mapId	玩家所在场景ID
10393 * @param	ut_id_obj	 selfId	玩家ObjID
10396 int32	LuaFunction_AskEnterMGuildBattleScene(Lua_State *L);
10398 /**
10399 * @brief	跨服帮战报名
10400 * @param	ut_id_map	 mapId	玩家所在场景ID
10401 * @param	ut_id_obj	 selfId	玩家ObjID
10404 int32	LuaFunction_MGuildBattleSignup(Lua_State *L);
10406 /**
10407 * @brief	通知GL跨服帮战结果
10408 * @param	ut_id_map	 mapId	玩家所在场景ID
10409 * @param	ut_id		 WorldID 赢方世界ID
10415 int32	LuaFunction_MGuildBattleResult(Lua_State *L);
10417 /**
10418 * @brief	跨服帮会战赛季当前周数
10419 * @param	无参数
10420 * @return	int
10422 int32	LuaFunction_MGuildBattleSeasonWeek(Lua_State *L);
10424 /**
10425 * @brief	获取跨服帮战当前赛季的比赛场次
10426 * @return	int
10427 */
10703 int32   LuaFunction_BroadCastBattleRoomGroupClear( Lua_State* L);
10705 /**
10706 跨服副本搜索
10707 * @param1	ut_id_map mapId
10708 * @param2 ut_id_obj objId
13143 //************************************
13144 // FullName:  LuaScript::LuaFunction_MPVPLeagueRegisterMap
13145 // describe:  跨服联赛 设置进入战场倒计时
13146 //************************************
13147 int32   LuaFunction_MPVPLeagueSetEnterSceneCutDown(Lua_State *L);

H:\work\source\成吉思汗\mycode\Share\Define.h 51 KB H 文件 2013/3/9 13:01:43 2018/10/8 21:52:36 2018/10/8 21:52:36 5
345 #define MAX_GUILD_BUS_SKILL_NUM				(30)																					// 帮会BUS的技能数量
346 #define MAX_CHARIOT_SKILL_NUM				(20)																					// 战车技能数量
347 #define	MAX_MPVP_POINT_WORLD_NUM			(16)																					// 跨服积分连接的区域数量
348 #define MAX_MPVP_POINT_POOL_NUM				(MAX_GUILD_SIZE*MAX_MPVP_POINT_WORLD_NUM)												// 最大跨服战积分池的数量
349 #define MPVP_JOIN_TIME_INDEX				(9)																						//跨服帮战本周参加次数
350 #define MPVP_JOIN_TIME_SIZE					(6)
350 #define MPVP_JOIN_TIME_SIZE					(6)
351 #define MPVP_GUILD_POINT_COUNTRY_INDEX		(1)																						//跨服帮战帮会Id
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
352 #define MPVP_GUILD_POINT_COUNTRY_SIZE		(3)
353 #define MPVP_GUILD_MAX_SEQNUM_PER_WEEK		(7)																						//每周最大跨服帮战的场次
355 #define MAX_GUANQIA_SKILL_NUM				(6)		// 关卡技能最大数
357 #define MAX_HORSEMONEY_NUM						(999999)

H:\work\source\成吉思汗\mycode\Share\Enum.h 97 KB H 文件 2013/3/9 13:01:45 2018/10/8 21:52:36 2018/10/8 21:52:36 11
827 	ST_GARDEN_MK				= 20,
828 	ST_GLOBAL_MK				= 21,
829 	ST_MPVPLEAGUE_MK            = 22,// 跨服联赛 [11/24/2012 sunlei]
830 	ST_SLGBATTLE_MK             = 23,
831 };
2468 	GD_GUILD_CASHBOX_SKILL_END				= 100,		// 帮会神兽技能结束 
2470 	GD_GUILD_LAST_WEEK_STRENGTH				= 101,		//上周帮会实力
2472 	GD_GUILD_MBATTLE_RESULT					= 102,		// 跨服帮战结果(0 没参加, 1 赢, 2 负)
2473 	GD_GUILD_MBATTLE_TOPLIST				= 103,		// 跨服帮战排名
2474 	GD_GUILD_MBATTLE_JOINCOUNT				= 104,		// 跨服帮战参加人数
2475 	GD_GUILD_MBATTLE_FORWARD				= 105,		// 跨服帮战奖励及开双的次数
2476 	GD_GUILD_MLEAGUE_TOPLIST                = 106,      // 跨服联赛排名
2477 	GD_GUILD_MLEAGUE_RESULT_WIN             = 107,      // 跨服联赛胜利次数
2478 	GD_GUILD_MLEAGUE_RESULT_REWARD          = 108,      // 跨服联赛奖励是否领取
2479 	GD_GUILD_MLEAGUE_RESULT_WIN_TOTAL_COUNT = 109,      // 跨服联赛胜利场次
2480 	GD_GUILD_MLEAGUE_JOIN_TOTAL_COUNT       = 110,      // 跨服联赛参加次数
2481 	GD_GUILD_MLEAGUE_STATE                  = 111,      // 跨服联赛状态，0：没有活动，1：有活动未报名，2：有活动已报名,3:开始进入比赛，4：比赛开始
2482 	
2483 	GD_GUILD_CALLBOSS_COUNT					= 112,		// 帮会召唤恶龙计次

H:\work\source\成吉思汗\mycode\Share\MessageDefine.h 159 KB H 文件 2018/10/27 22:57:49 2018/10/8 21:52:39 2018/10/8 21:52:39 17
154 	END_MESSAGE_DD,
156 	BEGIN_MESSAGE_GG																=  750,//
157 	MESSAGE_GG_MPVP_BATTLE														=  751,///<	// 新跨服战场场景线程通知消息                                               GGMPVPBattle
158 	MESSAGE_GG_MAPNOTIFY															=  752,///<                                                                         GGMapNotify
159 	MESSAGE_GS_ASKDATA															=  753,///<
457 	MESSAGE_CX_INHERENCE_BALANCE_UPGRADE											= 1272,///<天赋平衡升级                                                             CXInherenceBalanceUpgrade
458 	MESSAGE_CX_REQUEST_DETAIL_INHERENCEBALANCELIST								= 1273,///<天赋平衡请求                                                                 CXRequestDetailInherenceBalanceList
459 	MESSAGE_CX_MPVP_BATTLE														= 1274,// 新跨服战场                                                                    CXMPVPBattle
460 	MESSAGE_CX_INHERENCE_ZHUANGONG_COEFFICIENT									= 1275,///< 天赋专攻系数配点信息                                                        CXInherenceZhuanGongCoefficient
461 	MESSAGE_CX_INHERENCE_ZHUANFANG_LEVELUP										= 1276,///< 天赋专防升级                                                                CXInherenceZhuanFangLevelUp
892 	MESSAGE_XC_INHERENCE_BALANCE_UPGRADE											= 2324,///< 天赋平衡升级                                                            XCInherenceBalanceUpgrade
893 	MESSAGE_XC_INHERENCEBALANCELIST												= 2325,///< 天赋平衡请求答复                                                            XCDetailInherenceBalanceList
894 	MESSAGE_XC_MPVP_BATTLE														= 2326,// 新跨服战场                                                                    XCMPVPBattle
895 	MESSAGE_XC_INHERENCE_ZHUANGONG_INFO											= 2327,///< 天赋专攻信息                                                                XCInherenceZhuanGongInfo
896 	MESSAGE_XC_INHERENCE_ZHUANFANG_INFO											= 2328,///< 天赋专防信息                                                                XCInherenceZhuanFangInfo
1132 	MESSAGE_GX_GROUPFUBENCHANGE													= 3117,//改变团队副本信息                                                               GXGroupFubenChange
1133 	MESSAGE_GX_TEAMTANKERROR													= 3118,//团队错误                                                                       GXTeamTankError
1134 	MESSAGE_GX_MPVP_BATTLE														= 3119,// 新跨服战场                                                                    GXMPVPBattle
1135 	MESSAGE_GX_RELOAD_CONFIG													= 3120,// 脚本加载                                                                      GXReloadConfig
1136 	MESSAGE_GX_EMPIRE															= 3121,//帝国管理                                                                       GXEmpire
1139 	MESSAGE_GX_RET_FETCH_LOSTITEM												= 3124,//取回丢失物品                                                                   GXRetFetchLostItem
1140 	MESSAGE_GX_COLLECT_MAC														= 3125,//                                                                               GXCollectMac
1141 	MESSAGE_GX_NEWWORLD															= 3126,///< 切场景请求，跨服专用                                                        GXNewWorld
1142 	MESSAGE_GX_GARDEN															= 3127,//家园                                                                           GXGarden
1143 	MESSAGE_GX_BUY_WORLD_SHOP_ITEM												= 3128,//购买限量商品                                                                   GXBuyWorldItem
1145 	MESSAGE_GX_CHANNELMERIDIAN													= 3130,//经脉                                                                           GXChannelMeridian
1146 	MESSAGE_GX_MASK																= 3131,//面具(塔罗封印)                                                                 GXMaskData
1147 	MESSAGE_GX_PVPLEAGUEMATCH                                                   = 3132,//跨服联赛                                                                       GXPVPLeagueMatch
1148 	MESSAGE_GX_WORLD_LEAGUEMATCH                                                = 3133,//跨服联赛,世界内通知消息                                                        GXLeagueMatchLogicNotify
1149 	MESSAGE_GX_SLG																= 3134,//SLG                                                                            GXSlg
1150 	
1289 	MESSAGE_XG_GROUPREQUESTAPPLY_RET											= 4137,//答复申请入团                                                                   XGGroupRequestApplyRet
1290 	MESSAGE_XG_GROUPFUBENCHANGE													= 4138,//改变团队副本信息                                                               XGGroupFubenChange
1291 	MESSAGE_XG_MPVP_BATTLE														= 4139,// 新跨服战场                                                                    XGMPVPBattle
1292 	MESSAGE_XG_EMPIRE															= 4140,//帝国管理                                                                       XGEmpire
1293 	MESSAGE_XG_WORLDTIMER														= 4141,//申请全服Timer广播                                                              XGWorldTimer
1295 	MESSAGE_XG_FETCHLOSTITEM													= 4143,//请求取回丢失物品                                                               XGFetchLostItem
1296 	MESSAGE_XG_RETMAC															= 4144, //                                                                              XGRetMac
1297 	MESSAGE_XG_MGuildBattleResult												= 4145,// 跨服帮会战比赛结果                                                            XGMGuildBattleResult
1298 	MESSAGE_XG_NEWWORLD															= 4146,///<进入新场景，跨服专用                                                         XGNewWorld
1299 	MESSAGE_XG_GARDEN															= 4147,//家园                                                                           XGGarden
1300 	MESSAGE_XG_BUY_WORLD_SHOP_ITEM												= 4148,//购买全服限量物品                                                               XGBuyWorldItem
1303 	MESSAGE_XG_MASK																= 4151,//面具(塔罗封印)                                                                 XGMaskData
1304 	MESSAGE_XG_RELOAD_CONFIG_REQUEST											= 4152,// MapServer向GL发送Reload配置的请求                                             XGReloadConfigRequest
1305 	MESSAGE_XG_PVPLEAGUEMATCH                                                   = 4153,//跨服联赛                                                                       XGPVPLeagueMatch
1306 	MESSAGE_XG_WORLD_LEAGUEMATCH                                                = 4154,//跨服联赛,世界内通知消息                                                        XGLeagueMatchLogicNotify
1307 	MESSAGE_XG_SLG																= 4155,//SLG                                                                            XGSlg
1310 	END_MESSAGE_XG, //
1307 	MESSAGE_XG_SLG																= 4155,//SLG                                                                            XGSlg
1310 	END_MESSAGE_XG, //
1312 	BEGIN_PACKET_MG																= 5000,///<GL与跨服MapServer专用消息
1313 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡                                                                         MGRoomBattle
1314 	END_PACKET_MG,
1313 	MESSAGE_MG_ROOMBATTLE														= 5001,///<关卡                                                                         MGRoomBattle
1314 	END_PACKET_MG,
1316 	BEGIN_PACKET_GM																= 5200,///<GL与跨服MapServer专用消息
1317 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡                                                                         GMRoomBattle
1318 	END_PACKET_GM,
1317 	MESSAGE_GM_ROOMBATTLE														= 5201,///<关卡                                                                         GMRoomBattle
1318 	END_PACKET_GM,
1320 	BEGIN_PACKET_MGM															= 5400,///<GL与跨服MapServer专用消息
1321 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡                                                                         MGMRoomBattle
1322 	END_PACKET_MGM,
1321 	MESSAGE_MGM_ROOMBATTLE														= 5401,///<关卡                                                                         MGMRoomBattle
1322 	END_PACKET_MGM,
1324 	BEGIN_PACKET_XGM															= 5600,///<GL与跨服MapServer专用消息
1325 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡                                                                         XGMRoomBattle
1326 	END_PACKET_XGM,
1325 	MESSAGE_XGM_ROOMBATTLE														= 5601,///<关卡                                                                         XGMRoomBattle
1326 	END_PACKET_XGM,
1328 	BEGIN_PACKET_MGX															= 5800,///<GL与跨服MapServer专用消息
1329 	MESSAGE_MGX_ROOMBATTLE														= 5801,///<关卡                                                                         MGXRoomBattle
1331 	MESSAGE_GX_CREATE_SUBSTITUTE												= 5802,///<GL向Map发送创建替身的消息                                                    GXOperateSubstitute

H:\work\source\成吉思汗\mycode\Share\MPVPBattleDefine.h 7 KB H 文件 2013/3/9 13:01:46 2018/10/8 21:52:39 2018/10/8 21:52:39 32
19 	MPVP_BATTLE_SIGNUP, 								// 报名请求
20 	MPVP_BATTLE_RETSTATE, 								// 状态返回	
21 	MPVP_BATTLE_NOTICE_SIGNUP = 100, 					// 跨服战场服务器本地通知脚本报名开始状态
22 	MPVP_BATTLE_NOTICE_SIGNUPFINISHED, 					// 跨服战场服务器本地通知脚本报名结束状态
23 	MPVP_BATTLE_NOTICE_BEGINBATTLE, 					// 跨服战场服务器本地通知脚本小场开始状态
24 	MPVP_BATTLE_NOTICE_ENDBATTLE, 						// 跨服战场服务器本地通知脚本小场结束状态
25 	MPVP_BATTLE_NOTICE_SYNC_TIME, 						// 跨服战场服务器本地通知脚本战场时间同步
26 	MPVP_BATTLE_NOTICE_MATCHINFO, 						// 跨服战场服务器本地通知脚本小场匹配信息同步
27 };
29 enum MPVP_BATTLE_STATECODE
50 	MPVP_BATTLE_STATECODE_BATTLENOTBEGIN,				// 战场还没有开始
51 };
53 #define MPVP_MAX_SIGNUPNUM				64				// 跨服战场一个条目报名上限
54 #define MPVP2V2_BATTLE_CONFIGTYPE		20				// 跨服 2v2 战场时间表中的类型
55 #define MPVP2V2_NEED_SIGNUPMEMBER		2				// 跨服 2v2 报名时限制人数
56 #define MPVP2V2_MIN_PLAYERLEVEL			40				// 跨服 2v2 玩家最小级别限制
57 #define MPVP2V2_MAX_MAPCOUNT			1024			// 跨服 2v2 开辟场景数组上限
58 #define MPVP2V2_TIME_UPDATE				15 * 1000		// 跨服 2v2 报名注册广播时间间隔
59 #define MPVP2V2_MAX_TIMELIST			512				// 跨服 2v2 场次数组上限
60 #define MPVP2V2_TIME_INTERVAL			3				// 跨服 2v2 每场时间
62 #define MPVP6V6_BATTLE_CONFIGTYPE		21				// 跨服 6v6 战场时间表中的类型
63 #define MPVP6V6_NEED_SIGNUPMEMBER		6				// 跨服 6v6 报名时限制人数
64 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
64 #define MPVP6V6_MIN_NEED_SIGNUPCOUNT	3				// 需要报名的最小人数
65 #define MPVP6V6_MIN_PLAYERLEVEL			60				// 跨服 6v6 玩家最小级别限制
66 #define MPVP6V6_MAX_MAPCOUNT			512				// 跨服 6v6 开辟场景数组上限
67 #define MPVP6V6_TIME_UPDATE				15 * 1000		// 跨服 6v6 报名注册广播时间间隔
68 #define MPVP6V6_MAX_TIMELIST			512				// 跨服 6v6 场次数组上限
69 #define MPVP6V6_TIME_INTERVAL			20				// 跨服 6v6 每场时间
71 #define MPVPLEAGUE_MATCH_CONFIGTYPE     23              // 跨服联赛
73 #define MGUILD_BATTLE_MIN_GUILD_LEVEL	3				// 跨服帮会战需要的帮会最低等级
74 #define MGUILD_BATTLE_MIN_MEMBER_COUNT	15				// 跨服帮会战需要的最低帮会成员数量
75 #define MGUILD_BATTLE_CONFIGTYPE		22				// 跨服帮会战战场时间表中的类型
76 #define MGUILD_NEED_SIGNUPMEMBER		1				// 跨服帮会战报名时限制人数
77 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
77 #define MGUILD_MIN_NEED_SIGNUPCOUNT		1				// 需要报名的最小人数
78 #define MGUILD_MIN_PLAYERLEVEL			60				// 跨服帮会战玩家最小级别限制
79 #define MGUILD_MAX_MAPCOUNT				512				// 跨服帮会战开辟场景数组上限
80 #define MGUILD_TIME_UPDATE				(15 * 1000)		// 跨服帮会战报名注册广播时间间隔
81 #define MGUILD_MAX_TIMELIST				512				// 跨服帮会战场次数组上限
82 #define MGUILD_TIME_INTERVAL			20				// 跨服帮会战每场时间
83 #define MGUILD_TIME_GETREADY			(1000*60*2)		// 战场准备时间
85 #define MPLEAGUE_TEAM_SIZE             100              // 联赛队伍，人数
107 	}
108 };
111 #define MPVPLEAGUE_MATCHCOUNT			1024			// 跨服 联赛 队伍上限
112 struct	MPVPLEAGUE_MATCH_RESULT
113 {

H:\work\source\成吉思汗\mycode\Share\StructDB.h 204 KB H 文件 2018/10/3 17:21:19 2018/10/8 21:52:39 2018/10/8 21:52:39 3
6020 };
6022 /************************************************************************/
6023 /* 跨服战积分的DB存储结构                                               */
6024 /************************************************************************/	
6026 enum MPVPPOINT_SHM_USE_STATS 
6040 	int32	m_nTotalJoinTimes;							//总共参加的赛季数
6041 	int32	m_nTotalWinTimes;							//总共获胜的场次
6042 	char	m_MPVPTypeName[MAX_TYPE_NAME_LENGTH];		//跨服战的类型
6043 	int32	m_nAllPeriodStartWeek;						//全部周期的开始周
6044 	int32	m_nCurrentPeriodStartWeek;								//当前周的索引
6779 	MPVPLEAGUEPOINT_ADDNEW = 0, MPVPLEAGUEPOINT_DELETE, MPVPLEAGUEPOINT_SAVED,
6780 };
6781 // 跨服联赛 [11/24/2012 sunlei]
6782 struct MPVPLeaguePointDB
6783 {

H:\work\source\成吉思汗\mycode\Share\StructGuild.h 105 KB H 文件 2013/3/9 13:01:58 2018/10/8 21:52:39 2018/10/8 21:52:39 9
1263 	int32       m_nCurMonth;
1265 	int32		m_nLastWeekStrength;
1266 	// 跨服帮战结果
1267 	int32		m_nMBattleResult;
1267 	int32		m_nMBattleResult;
1268 	// 参加跨服帮战时的排名
1269 	int32		m_nLastTopIndex;
1269 	int32		m_nLastTopIndex;
1270 	// 参加跨服帮战的人数
1271 	int32		m_nMBattleJoinCount;
1271 	int32		m_nMBattleJoinCount;
1272 	// 跨服战奖励
1273 	int32		m_nMBattleForward;
1274 	
1273 	int32		m_nMBattleForward;
1274 	
1275 	// 跨服赛 上次排名
1276 	int32      m_nLMLeagueTopIndex;
1276 	int32      m_nLMLeagueTopIndex;
1277 	// 跨服赛 上次胜利次数
1278 	int32      m_nLMLeagueWinTimes;
1278 	int32      m_nLMLeagueWinTimes;
1279 	// 跨服联赛奖励
1280 	int32      m_nLMLeagueReward;
1280 	int32      m_nLMLeagueReward;
1281 	// 跨服联赛累计获胜次数
1282 	int32      m_nLMLeagueWinTotalTimes;
1282 	int32      m_nLMLeagueWinTotalTimes;
1283 	// 跨服联赛累计参加次数
1284 	int32      m_nLMLeagueTotalJoinTimes;
1285 	// 联赛状态  0：没有活动，1：有活动未报名，2：有活动已报名,3:开始进入比赛，4：比赛开始

H:\work\source\成吉思汗\mycode\Share\StructMap.h 13 KB H 文件 2013/3/9 13:01:59 2018/10/8 21:52:39 2018/10/8 21:52:39 1
92 	SNID_t		m_MemberSNID[MAX_COPY_MEMBER];
94 	//以下动态战场数据
95 	bool			m_bLocalRoom;//本地跨服房间
96 	bool			m_bRoom;
97 	ut_id_room		m_nRoomID;

H:\work\source\成吉思汗\mycode\Share\StructMPVPPoint.h 7 KB H 文件 2013/3/9 13:01:58 2018/10/8 21:52:39 2018/10/8 21:52:39 6
7 #pragma pack(push, 1)
9 #define MAX_TYPE_NAME_LENGTH				(16)		//战场积分类型名字的最大长度
10 #define MPVP_POINT_GUILD_TYPE_STR			("guild")	//定义跨服积分帮会类型的字符串
12 /************************************************************************/
12 /************************************************************************/
13 /* 跨服战积分类型                                                       */
14 /************************************************************************/
15 enum MPVPPointType
16 {
17 	MPVP_POINT_INVALID = -1, // 无效类型
18 	MPVP_POINT_GUILD,		//跨服帮会战积分类型
19 	MPVP_POINT_TYPE_NUM		//跨服战积分类型数量
20 };
22 enum MPVPPOINT_DATA_STATS 
27 };
29 /*************************************************************************/
30 /* 跨服战积分的数据类型,跟数据存储的结构分离,保存程序运行时所用的对象信息*/
31 /*************************************************************************/
32 struct MPVPPointData
42 	int32	m_nTotalWinTimes;							//总共获胜的场次
43 	int32	m_nParams;									//额外的参数,存储额外的变量信息,暂时只需要一个
44 	int16	m_nMPVPType;								//跨服战的类型
45 	int32	m_nAllPersioStartWeek;								//开始周期
46 	int32	m_nCurrentWeek;								//当前周索引

H:\work\source\成吉思汗\mycode\Share\StructTopList.h 10 KB H 文件 2013/3/9 13:02:03 2018/10/8 21:52:39 2018/10/8 21:52:39 2
113 	HONOR_CHARIOT_TOP_LIST,			// add by dragon 战车排行榜
114 	HONOR_CHARIOT_TOP_LIST_BK,
116 	MPVP_GUILD_CURRENT,				//跨服帮会战当前排行
117 	MPVP_GUILD_CURRENT_BK,
117 	MPVP_GUILD_CURRENT_BK,
118 	MPVP_GUILD_TOTAL,				//跨服帮会战总排行
119 	MPVP_GUILD_TOTAL_BK,
121 	HORSEMONEY_TOP_LIST,				//马币

H:\work\source\成吉思汗\mycode\Share\Connector\ConnectorManager.h 3 KB H 文件 2013/3/9 13:59:20 2018/10/8 21:51:05 2018/10/8 21:51:05 1
44 	// 取得Connector指针
45 	Connector*		GetConnector(ut_id_connector pid);
47 	// 2010-9-25 by rj 以跨服方式取得连接
48 	Connector		*GetConnectorForGroupMode(ut_id_connector pid);
50 	// 取得当前管理器中Connector数量

H:\work\source\成吉思汗\mycode\Share\Connector\ConnectorPool.h 2 KB H 文件 2013/3/9 13:59:20 2018/10/8 21:51:05 2018/10/8 21:51:05 1
27 	}
29 	Connector*			GetConnector(ut_id_connector ConnectorID);
30 	Connector			*GetConnectorForGroupMode(ut_id_connector ConnectorID);	// 2010-9-25 by rj 以跨服方式取得连接
31 	virtual Connector*	NewConnector(BOOL bClear=TRUE);
32 	virtual BOOL		DelConnector(ut_id_connector ConnectorID);

H:\work\source\成吉思汗\mycode\Share\Core\act_define.h 32 KB H 文件 2013/3/9 13:59:25 2018/10/8 21:51:13 2018/10/8 21:51:13 2
172 	eCurrencyAct_DynamicShopCost	= 328,	/* 动态价格商店购买支出 */
173 	eCurrencyAct_GuildSendPost		= 329,  /* 帮主群发邮件扣除现银 */
174 	eCurrencyAct_BattleHonourAdd	= 330,	/* 跨服战场战功增加 */
175 	eCurrencyAct_BattleHonourSub	= 331,	/* 跨服战场战功减少 */
176 	eCurrencyAct_National_Debt		= 332,	/* 国债 */
178 	//新增

H:\work\source\成吉思汗\mycode\Share\Core\FileConfigConst.h 25 KB H 文件 2013/3/9 13:59:23 2018/10/8 21:51:13 2018/10/8 21:51:13 1
279 #define FILE_GEM_REWORK_COST				"../Share/Config/GemReworkCost.tab"					//宝石回炉消耗表
280 #define FILE_ROOM_CONFIG					"../Share/Config/Room_Config.tab"					//房间配置表
281 #define FILE_ROOM_LOGIC						"../Share/Config/Room_Logic.tab"					//跨服关卡逻辑表
283 #define FILE_GEM_RAND_ATTR					"../Share/Config/Gem_Attr_Rand.tab"					// 宝石洗紫随机属性表
284 #define FILE_RAND_ATTR_GEMLIST				"../Share/Config/Gem_RandAttr_GemList.tab"			// 可洗紫宝石列表

H:\work\source\成吉思汗\mycode\Share\Core\ScriptIDConst.h 32 KB H 文件 2018/10/24 19:04:05 2018/10/8 21:51:13 2018/10/8 21:51:13 2
79 #define OFFSALE_MANAGE_SCRIPT								(310355)
80 #define MONSTER_SPECIAL_ATTR_SCRIPT							(310999)		// 怪物的特殊属性初始化脚本
81 #define MPVP_BATTLE_EVENTS_SCRIPT							(303100)		// 新跨服战场事件处理脚本 by rj 2011-2-14
82 #define ITEM_WANFA_SCRIPT_ID								(800128)		// 装备、物品玩法主脚本
83 #define EMPIRE_ZHAOJI_OFFICER_SCRIPT						(310271)	  	// 皇帝召集令脚本
327 #define DEF_PVP2V2_BATTLE_SIGNUP_RESULT						("ProcSignupResult")
328 #define DEF_PVP2V2_BATTLE_ASK_ENTER							("AskBattleSceneEnter")
330 //跨服 2v2 战场 by rj 2010-9-21
331 #define DEF_MPVP2V2_BATTLE_MATCHINFO						("ProcMBattleMatchInfo")
332 #define DEF_MPVP2V2_BATTLE_SYNCTIME							("ProcMSyncBattleTime")

H:\work\source\成吉思汗\mycode\Share\Core\Setting.h 45 KB H 文件 2018/10/13 18:17:42 2018/10/8 21:51:13 2018/10/8 21:51:13 25
107 	int32	m_LairdBattleGuildMemberCount;
108 	int32	m_MPVP6v6BattleTeamNumLimit;
109 	int32	m_MPVPPointPeriodWeeks;				//跨服积分管理一个赛季的周数
110 	int32	m_MPVPPointSaveInterval;			//跨服积分保存的时间间隔
111 	int32	m_MPVPGuildNeedJoinTimes;			//帮会每周需要参加跨服战的次数
112 	float	m_MPVPGuildStrengthOffset;			//跨服帮战实力的加权值
113 	int32	m_MPVPGuildGiveUpSubPoint;			//帮会放弃跨服战扣除的分数
114 	uint32	m_MPVPGuildBeginWeek;				//跨服帮战开始周索引
115 	int32	m_MPVPGuildBattleWinPoint;			//跨服帮战赢方得分
116 	int32	m_MPVPGuildBattleLoserPoint;		//跨服帮战负方得分
117 	int32	m_MPVPGuildBattleExtPointRank;		// 跨服帮战浮动分分断分数
118 	int32	m_MPVPGuildBattleExtPoint;			// 跨服帮战浮动分因子
119 	int32	m_MPVPGuildBattleExtPointLimit;		// 跨服帮战浮动分上限
120 	int32	m_MPVPGuildBattleObtainWeek;		// 跨服帮会实力取周几的值
121 	int32	m_MPVPGuildBattleObtainTime;		// 跨服帮会实力取几点的值
123 	int32	m_MaxOnlineUser;
124 	int32	m_MaxHorse;
506 	int32	m_nAutoUpgradeLevel;							// 自动升到的级别
507 	int32	m_nGeneralMapMaxPlayer;							// 普通MapServer的最大人数上限
508 	int32	m_nMPVPBattleMapMaxPlayer;						// 跨服战场最大人数上限
510 	char	m_strCountryName[COUATTRIBUTE_NUMBER][MAX_KHAN_CHARACTER_NAME];	// 国家名称
512 	float	m_nBaseAttrCoefficient;						// 宠物基础属性影响攻击系数
1417 #define MULTI_GROUP_MAX_COUNT	16	// 2010-12-9 by rj GroupCount 上限调整了 16，与 MAX_SERVER_CONNECTOR_POOL_SIZE 保持一致
1418 #define PERGROUP_MAX_MAPCOUNT	16	// 2010-10-19 by rj 单服最大 map 逻辑服务器数量
1420 #define	MAX_MUTIGROUP_MAPSERVER	(64)							//1个GL可以连接的跨服服务器最大数量
1422 struct MULTIGROUP_SERVER_INFO
1423 {
1443 	MULTIGROUP_SERVER_INFO	m_DBCenterInfo[MULTI_GROUP_MAX_COUNT];
1444 	MULTIGROUP_SERVER_INFO	m_GLServerInfo[MULTI_GROUP_MAX_COUNT];
1445 	int32					m_nMax2v2MapCnt; // 跨服 2v2 战场最大场景数量配置 2010-9-23 by rj
1446 	int32					m_nMax6v6MapCnt; // 跨服 6v6 战场最大场景数量配置 2010-10-14 by rj
1447 	//int32					m_nMGuildBeginWeek; // 跨服帮会战起始周
1448 	int32					m_nMaxMGuildMapCnt;
1450 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1448 	int32					m_nMaxMGuildMapCnt;
1450 	BOOL					m_SignUpServerToggle;	//报名服务器开关 added by Michael Lin 2011-08-03
1451 	BOOL					m_MapFubenToogle;	//是否开启跨服MAP服务
1452 	BOOL                    m_MapLeagueToogle;  // 是否开启跨服联赛服务
1453 	MULTIGROUP_CONFIG()
1454 	{
1496 		return INVALID_KHAN_INDEX;
1497 	}
1499 	//当前服务器是否跨服关卡报名服务器
1500 	BOOL IsSignUpServer(void)
1501 	{
1502 		if (m_nGroupCount <=0 )
1503 		{
1504 			//不是跨服服务器
1505 			return FALSE;
1506 		}
1513 		return FALSE;
1514 	}
1516 	//当前开不开跨服副本MAP
1517 	BOOL IsMultMapOpen()
1518 	{
1519 		if (m_nGroupCount <=0 )
1520 		{
1521 			//不是跨服服务器
1522 			return FALSE;
1523 		}
1529 		return FALSE;
1530 	}
1532 	// 是否是跨服联赛服务器 [10/29/2012 sunlei]
1533 	BOOL IsLeagueCenterServer()
1534 	{

H:\work\source\成吉思汗\mycode\Share\DataBase\ArchiveInterface.h 57 KB H 文件 2013/3/9 13:59:27 2018/10/8 21:51:18 2018/10/8 21:51:18 2
1315 };
1317 /************************************************************************/
1318 /* 跨服战积分存档结构                                                   */
1319 /************************************************************************/
1320 class MPVPPointInfo	:
1613 };
1615 /************************************************************************/
1616 /* 跨服联赛结果存库结构                                                   */
1617 /************************************************************************/
1618 class MPVPLeaguePointInfo	:

H:\work\source\成吉思汗\mycode\Share\DataBase\SqlStatement.h 9 KB H 文件 2013/3/9 13:59:28 2018/10/8 21:51:18 2018/10/8 21:51:18 2
43 #define CHARIOT_TABLE					"t_chariot"				// 2011-4-14 by rj 战车数据表
44 #define LOSTITEM_TABLE					"t_lostitem"
45 #define MPVPPOINT_TABLE					"t_mpvppoint"			//跨服战积分表
46 #define HORSE_EQUIP_TABLE				"t_horseequip"			// 坐骑装备表
47 #define SUBSTITUTE_TABLE				"t_substitute"			// 替身表
55 #define GLOBALVAL_TABLE					"t_globalval"			// 全局变量表
56 #define MASK_TABLE						"t_mask"				// 面具表
57 #define MPVPLEAGUEPOINT_TABLE			"t_mpvpleague_result"			// 跨服联赛结果 [11/24/2012 sunlei]
58 #define SLG_BUILDINFO_TABLE				"t_slg_buildinfo"		// slg玩法-建筑表
59 #define SOLDIER_TABLE					"t_soldier"				// 士兵（兵种）表

H:\work\source\成吉思汗\mycode\Share\Messages\StructRoomBattle.h 35 KB H 文件 2013/3/9 14:01:22 2018/10/8 21:51:49 2018/10/8 21:51:49 21
10 #define		MAX_ROOMBATTLE_TEAM_NUM			(6)
11 #define		MAX_ROOMBATTLE_GROUP_NUM		(4)   
12 #define		MAX_SIGNUPLIST_COUNT			(10000)	//跨服报名列表最大值
13 #define		MAX_ROOM_COUNT					(2000)	//跨服房间实例个数最大值
14 #define		MAX_ROOM_CONFIG_COUNT			(100)	//跨服房间配置文件条数上线
15 #define     MAX_MEMBERS_PER_ROOM			(4 * 6 * 6)	//每房间最大人数
17 #define		MAX_ROOM_BATTLE_WAITING_TIME	 (30000)	//确认等待时间
343 };
345 /************************************************************************/
346 /* 跨服报名候选数据结构定义  		                                    */
347 /************************************************************************/
348 struct RoomBattleSignupInfo
397 };
399 /************************************************************************/
400 /* 跨服报名候选数据结构定义 客户端消息结构                              */
401 /************************************************************************/
402 struct RoomBattleSignupInfo_CX_Msg
419 };
421 /************************************************************************/
422 /* 跨服取消报名结构定义   客户端消息结构	                           */
423 /************************************************************************/
424 struct RoomBattleSignupCancel_CX_Msg
433 };
435 /************************************************************************/
436 /* 跨服确认进入结构定义    客户端消息结构								*/
437 /************************************************************************/
438 struct RoomBattleWaitingEnter_CX_Msg
479 };
481 /************************************************************************/
482 /* 跨服玩家确认结构定义    服务器消息结构								*/
483 /************************************************************************/
484 struct RoomBattlePlayerEnter_XC_Msg
502 };
504 /************************************************************************/
505 /* 跨服玩家离开军团    服务器消息结构								*/
506 /************************************************************************/
507 struct RoomBattlePlayerLeave_XC_Msg
517 };
519 /************************************************************************/
520 /* 跨服确认进入结构定义    服务器消息结构								*/
521 /************************************************************************/
522 struct RoomBattleWaitingEnter_XC_Msg
625 };
627 /************************************************************************/
628 /* 跨服MapServer信息                  		                            */
629 /************************************************************************/
630 struct SMutiGroupMapServerInfo
666 };
669 /************************************************************************/
670 /* 跨服关卡消息结构定义 MGP-->GL               		                    */
671 /************************************************************************/
672 struct MsgMGRoomBattle
692 };
694 /************************************************************************/
695 /* 跨服关卡消息结构定义 GL-->MGP               		                    */
696 /************************************************************************/
697 struct MsgGMRoomBattle
718 };
719 /************************************************************************/
720 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认进入或取消             */
721 /************************************************************************/
722 struct MsgXGMRoomBattle_ReplyEnter
732 };
733 /************************************************************************/
734 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认广播                   */
735 /************************************************************************/
736 struct MsgXGMRoomBattle_ReplyEnter_BROADCAST
746 };
747 /************************************************************************/
748 /* 跨服关卡消息结构定义 MGP-->GL-->MGP 客户端确认离开，重新返回报名状态 */
749 /************************************************************************/
750 struct MsgXGMRoomBattle_Leave
760 };
761 /************************************************************************/
762 /* 跨服关卡消息结构定义 MGP-->GL-->MGP        		                    */
763 /************************************************************************/
764 struct MsgMGMRoomBattle
781 };
782 /************************************************************************/
783 /* 跨服关卡消息结构定义 MAP-->GL-->MGP        		                    */
784 /************************************************************************/
785 struct MsgXGMRoomBattle
809 };
810 /************************************************************************/
811 /* 跨服关卡消息结构定义 MGP-->GL-->MAP        		                    */
812 /************************************************************************/
813 struct MsgMGXRoomBattle
844 };
845 /************************************************************************/
846 /* 跨服关卡消息结构定义 Client-->MAP        		                    */
847 /************************************************************************/
848 struct MsgCXRoomBattle
874 };
877 /************************************************************************/
878 /* 跨服关卡消息结构定义 MAP-->Client        		                    */
879 /************************************************************************/
880 struct MsgXCRoomBattle

H:\work\source\成吉思汗\mycode\Share\Messages\XGMGuildBattleResult.h 2 KB H 文件 2013/3/9 14:03:00 2018/10/8 21:51:52 2018/10/8 21:51:52 1
8 #include "MPVPBattleDefine.h"
10 // ----------------------------------------------------------------------------
11 // 跨服帮战结果
12 // ----------------------------------------------------------------------------
14 DECLARE_NET_MESSAGE_BEGIN(XGMGuildBattleResult, MESSAGE_XG_MGuildBattleResult)

H:\work\source\成吉思汗\mycode\Share\TAB\TabDefine_Map_Misc.h 57 KB H 文件 2018/10/13 9:49:58 2018/10/8 21:52:15 2018/10/8 21:52:15 2
145 	// 加载人物属性对战车属性影响系数表
146 	void	LoadChariotCoefficientTable();
148 	// 跨服关卡逻辑表
149 	void	LoadRoomLogicTab();
149 	void	LoadRoomLogicTab();
151 	// 跨服关卡配置表
152 	void	LoadRoomConfigTab();
154 	// 家园守护兽技能学习表

H:\work\source\明朝江湖\m3server\world\WorldData\User.h 10 KB H 文件 2012/4/21 11:46:02 2018/8/8 17:21:55 2018/8/8 17:26:52 1
15 	US_NONE = 0 ,		//空
16 	US_HOLDUSERDATA ,	//拥有当前玩家的档案信息
17 	US_CHANGESCENE,		//跨服务器切换场景
18 	US_NORMAL ,			//玩家正在游戏中，一切正常
19 	US_OFFLINE ,		//玩家处于断线状态中

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\common\InterServerComm.h 13 KB H 文件 2013/4/11 5:16:43 2018/8/3 20:29:09 2018/8/3 20:29:09 16
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 		};
184 		/** 其他逻辑服消息发送定义 **/
192 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
193 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
194 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
195 		};
197 		/** 名称服务器操作返回值定义 **/
333 			dcLoadPeriodRideData,		//加载时效坐骑数据
334 			dcSavePeriodRideData,		//保存时效坐骑数据
336 			dcReloadCrossConfig,		//重新加载跨服配置
338 			dcLoadGodWealthData,		//加载财富闯关的事件
339 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\common\db\GuildDb.h 6 KB H 文件 2013/4/11 7:54:39 2018/8/3 20:29:09 2018/8/3 20:29:09 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\common\gate\CustomGateManager.h 4 KB H 文件 2013/4/11 7:54:46 2018/8/3 20:29:09 2018/8/3 20:29:09 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\common\gate\CustomServerGate.h 12 KB H 文件 2013/4/11 7:54:47 2018/8/3 20:29:09 2018/8/3 20:29:09 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 5:15:50 2018/8/3 20:29:10 2018/8/3 20:29:10 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 5:16:24 2018/8/3 20:29:14 2018/8/3 20:29:14 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
71 	enSystemCount,              //逻辑部分用到的最大的

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\LogicEngine.h 14 KB H 文件 2013/4/11 5:16:25 2018/8/3 20:29:14 2018/8/3 20:29:14 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
378 	CDmkjMgr				m_DmkjMgr;
380 	CCorpsComponet			m_CorpsMgr;			//战队管理器
382 	CCrossComponet			m_CrossMgr;			//跨服管理器
384 	CTenDaysActivityComponent m_TenActivityMgr;
386 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 5:16:26 2018/8/3 20:29:14 2018/8/3 20:29:14 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 5:16:29 2018/8/3 20:29:15 2018/8/3 20:29:15 1
396 #include "base/CorpsMgr.h"			//战队管理器
397 #include "base/DmkjMgr.h"			//盗梦空间管理器
398 #include "base/CrossMgr.h"			//跨服管理器
401 //conponent
402 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\base\CrossMgr.h 3 KB H 文件 2013/4/11 7:50:54 2018/8/3 20:29:13 2018/8/3 20:29:13 7
1 #pragma once
2 //跨服管理器
4 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
5 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
50 	CCrossComponet();
51 	~CCrossComponet();
54 	//开始跨服boss战时初始化
55 	void InitCrossBossData();
55 	void InitCrossBossData();
57 	//添加跨服boss数据
58 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
60 	//接受公共服来的boss死亡消息
60 	//接受公共服来的boss死亡消息
61 	void OnCommonCrossBossDie(CDataPacketReader &reader);
63 	//发送跨服boss的数据
64 	void SendCrossBossToClient(CActor* pActor);
66 	//接受公共服来的天下第一战神的消息
75 	//发送天下第一的数据给客户端（公共服）
76 	void SendCrossWorldToClientOp(CActor* pActor);
78 	//发送是否开启跨服的状态
79 	void SendCrossStartState(int bState);
79 	void SendCrossStartState(int bState);
81 	//初始化跨服天下第一的雕像
82 	void ResetWorldFirstNpc();
83 private:
82 	void ResetWorldFirstNpc();
83 private:
84 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
86 	CROSSWORLDFIRSTDATA			m_CrossWorldFirstData;		//天下第一战神的数据
87 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 7:51:03 2018/8/3 20:29:13 2018/8/3 20:29:13 17
363 	//后台删除行会
364 	void LogSenderDelGuild(char* sGuildName, int nRecog);
366 	//更新可以攻城跨服攻城的沙巴克行会
367 	void UpdateCrossSbkGuild();
369 	//发送攻沙行会给其他逻辑服
375 	//收到其他服发来的职位
376 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
378 	//跨服来的消息
379 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
379 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
381 	//跨服沙巴克开始
382 	void StartGuildCrossSbk();
382 	void StartGuildCrossSbk();
384 	//初始化跨服沙巴克城墙
385 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
385 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
387 	//设置跨服城墙被攻击状态
388 	void SetCrossWallState(bool bState);
388 	void SetCrossWallState(bool bState);
390 	//设置跨服城墙的是否死亡的状态状态
391 	void SetCrossSbkWallState(int nIndex,int nState)
392 	{
394 			m_CrossWallState[nIndex].nState = nState;
395 	}
397 	//跨服沙巴克结束
398 	void EndCrossSbkWar();
398 	void EndCrossSbkWar();
400 	//判断跨服是否只有一个行会占领
401 	void OnlyOneGuildInCrossSbk(CScene* pScene);
401 	void OnlyOneGuildInCrossSbk(CScene* pScene);
403 	//判断是否可参加跨服沙巴克的行会
404 	bool IsCanCrossSbkGuild(int nGuildId);
404 	bool IsCanCrossSbkGuild(int nGuildId);
406 	//发送跨服结果给普通逻辑服
407 	void SendCrossSbkResult();
407 	void SendCrossSbkResult();
409 	//获取跨服沙巴克的行会的信息
410 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
410 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
412 	//跨服结束发送跨服城主的信息
413 	void OnSendCrossCityOwn(int nGuildId);
413 	void OnSendCrossCityOwn(int nGuildId);
415 	//收到跨服职位
416 	void OnRevCrossCityPos(CDataPacketReader &reader);
418 	//公共服发送占领沙巴克的行会信息
476 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
478 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
480 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
481 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
483 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
484 private:
485 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 7:51:07 2018/8/3 20:29:14 2018/8/3 20:29:14 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 7:51:12 2018/8/3 20:29:14 2018/8/3 20:29:14 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
153 		stNormal = 0,
154 		stRsCastellan = 1,	//本服沙巴克城主雕像
155 		stCsCastellan = 2,	//跨服沙巴克城主雕像
156 		stRsVocation = 3,	//本服职业雕像
156 		stRsVocation = 3,	//本服职业雕像
157 		stCsVocation = 4,	//跨服职业雕像
158 	};
159 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
182 	//发送到SS保存战力排行
183 	void SaveCsRank();
184 	//加载跨服战力排行数据
185 	void LoadCsRank();
185 	void LoadCsRank();
186 	//清除跨服战力排行数据
187 	void ClearCsRank(INT_PTR nServerId);
189 	//广播所有逻辑服将雕像榜单数据发到session
191 	//广播所有逻辑服重新取下榜单
192 	void BroadLogicToLoadCsRank();
194 	//装载跨服玩家的离线消息
195 	void LoadUserOfflineData(int nServerId, int nActorId);
195 	void LoadUserOfflineData(int nServerId, int nActorId);
197 	//返回跨服玩家的离线下消息
198 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
200 	//设置角色离线数据
220 	
221 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
222 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
223 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 7:51:21 2018/8/3 20:29:14 2018/8/3 20:29:14 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 7:51:32 2018/8/3 20:29:14 2018/8/3 20:29:14 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	//这个是每个等级的配置

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 7:51:36 2018/8/3 20:29:14 2018/8/3 20:29:14 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\config\PropertyConfig.h 18 KB H 文件 2013/4/11 7:51:41 2018/8/3 20:29:14 2018/8/3 20:29:14 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 7:51:54 2018/8/3 20:29:14 2018/8/3 20:29:14 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
226 	//获取角色ID
2237 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2238 	CHeroSystem             m_heroSystem;       //英雄系统
2240 	CCrossSystem			m_CrossSystem;		//跨服子系统
2241 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2243 	CUserEquipment			m_Equiptment;		//装备子系统
2287 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2288 	//////////////////////////////////////////////////////////////////////////
2289 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2290 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2291 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2292 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2293 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2294 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2296 	// 非重配地图复活点
2297 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\entitysystem\ChatSystem.h 27 KB H 文件 2013/4/11 7:52:11 2018/8/3 20:29:14 2018/8/3 20:29:14 5
606 	// 测试session消息广播
607 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
608 	// 设置是否连接跨服
609 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
610 	
614 	//设置自己的转数
615 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
617 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
618 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
619 	// 广播所有逻辑服将雕像榜单数据发到session
731 	//节日活动设置
732 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
734 	//设置可以跨服攻沙的行会id
735 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
737 	//gm设置头衔
756 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
758 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	//刷新跨服的配置
761 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
761 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	//设置跨服的id
766 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
769 	//设置排行选项

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 7:52:15 2018/8/3 20:29:14 2018/8/3 20:29:14 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
58 private:
57 	void OnSignUpCrossSbkOp();
58 private:
59 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
60 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 7:52:54 2018/8/3 20:29:14 2018/8/3 20:29:14 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\networkdata\LogicServerCmd.h 41 KB H 文件 2013/4/11 7:52:58 2018/8/3 20:29:14 2018/8/3 20:29:14 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1391 enum tagCrossSystemCode
1392 {
1393 	cEnterCrossScene = 1,			//请求进入跨服地图
1394 	cGetCrossBossData = 2,			//获取跨服boss的数据
1395 	cGetCrossGuildList = 3,			//请求跨服攻城的行会列表
1396 	cSetCrossSbkPos = 4,			//设置跨服沙巴克职位
1397 	cReturnToRawServer = 5,			//返回到原来的服务器
1397 	cReturnToRawServer = 5,			//返回到原来的服务器
1398 	cSignUpCrossGuildSbk = 6,		//报名跨服沙巴克战
1400 	sSendCrossBossData = 1,			//发送跨服boss的数据
1401 	sSendCrossWorldData = 2,		//发送跨服天下第一给客户端
1402 	sSendCrossGuildList = 3,		//返回跨服攻城的行会列表
1403 	sSendCrossGuildPos = 4,			//返回跨服攻城的职位表
1404 	sSendCrossOpenState = 6,		//是否开启跨服状态
1405 };
1407 enum tagGodWealthSystemCode

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\ActorEventDef.h 11 KB H 文件 2013/4/11 18:54:58 2018/8/3 20:29:15 2018/8/3 20:29:15 4
80 	aeHundredServer = 67,			//百服活动
81 	aeTeamCaller = 68,				//队友召唤
82 	aeCrossOp = 69,					//跨服
83 	aeGodWealth = 70,				//财富闯关
84 	aeFastivalFire = 71,			//鞭炮
281 	cOnUpRideLevel = 1,				//坐骑进阶
282 };
284 //跨服相关操作
285 enum tagCrossOP
286 {
285 enum tagCrossOP
286 {
287 	cEnterCrossOp = 1,				//请求进入跨服场景
288 	cGetCrossWorldState = 2,		//请求跨服天下第一的状态
289 };
291 //财神闯关操作

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\ActorExportFun.h 90 KB H 文件 2013/4/11 18:55:04 2018/8/3 20:29:15 2018/8/3 20:29:15 3
2253 	* Param void * packet: 数据包CActorPacket对象指针
2254 	* Param int nLevel: 广播的玩家最低限制等级
2255 	* Param bool bCsFlag: 是否在跨服服务器广播 true广播 false不广播
2256 	* @Return void:
2257 	* @Remark:
3391 	//击杀boss发送消息
3392 	void onSendKillBossToServer(void *pEntity, int nMonsterid,int nLev,int nNextBossId);
3394 	//跨服逻辑服发送天下第一的消息给普通逻辑服
3395 	void sendCrossWorldOneWinToAll(void *pEntity);
3395 	void sendCrossWorldOneWinToAll(void *pEntity);
3397 	//是否为跨服天下第一战神
3398 	bool bisCrossWorldFirst(void *pEntity);
3400 	//获取当前的关卡

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\ChallengeExport.h 4 KB H 文件 2013/4/11 18:55:08 2018/8/3 20:29:15 2018/8/3 20:29:15 1
28 	cstWuLinZhengBa = 1,	// 武林争霸赛擂台
29 	cstDungeon = 2,			// 地牢决斗擂台
30 	cstCrossServerWar = 3,	// 跨服战
31 };
33 namespace ChallengeFun

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\CScriptDataPacket.h 4 KB H 文件 2013/4/11 18:55:07 2018/8/3 20:29:15 2018/8/3 20:29:15 3
30 	void flush(void* pActorPacket);
32 	/*
33 	* Comments: 向跨服发送刚刚打包进去的数据
34 	* Param void * pack:数据包的指针
35 	* @Return void :
41 	DataPack.writeByte(pack, handle)
42 	...
43 	-- 向跨服发送包
44 	DataPack.flushCs(pack)
45 	...
106 		-- 调用广播接口发送包
107 		Camp.broadCastMsg(pack) 
108 		-- 向跨服发送包
109 		DataPack.flushCs(pack)
110 		...

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\LogDef.h 17 KB H 文件 2013/4/11 18:55:15 2018/8/3 20:29:15 2018/8/3 20:29:15 3
114 		clDropItemGroup = 96,				//丢物品到地上
115 		clChangeuseName = 97,				//玩家改名字
116 		clSignCrossSbk = 98,				//报名跨服沙城战
118 		//货币类型,数量, 来源的备注(比如skill 名字)
119 		clNpcGiveMoney=100,				//NPC给金钱
204 		clFinishPaTa = 184,					//用元宝立即完成战神史册任务
205 		clWCDonate = 185,					//世界贡献度
206 		clCrossAwardYb = 186,				//跨服天下第一奖励
207 		clCrossAwardSbk = 187,				//跨服奖励
208 		clFirstOwnSbkGuildLeader = 188,		//首个回收沙城后周五占领的行会首领奖励元宝
209 		clGodWealthAward = 189,				//财神闯关事件的奖励

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\RankingExport.h 6 KB H 文件 2013/4/11 18:55:19 2018/8/3 20:29:15 2018/8/3 20:29:15 1
231 	void removeId(void* pRank, int id);
233 	/*
234 	* Comments:更新跨服排行榜
235 	* Param const char* sName: 排行榜名称
236 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\SystemExportFun.h 29 KB H 文件 2013/4/11 18:55:21 2018/8/3 20:29:15 2018/8/3 20:29:15 11
195 	void broadcastTipmsg(char * sTipmsg,int nTipmsgType =ttTipmsgWindow);
197 	/*
198 	* Comments: 跨服发布全服系统提示
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
201 	* Param bool bCsFlag: 是否在跨服服务器发布提示 true发布 false不发布
202 	* @Return void:
203 	*/
786 	*/
787 	void updateVocNpcStatue(int nType);
789 	//发送到SS保存跨服排行
790 	void saveCsRank();
790 	void saveCsRank();
791 	//加载跨服排行数据
792 	void loadCsRank();
794 	//在m_CsRankList获取serverId
794 	//在m_CsRankList获取serverId
795 	int getServerIdByCsRank(int nActorId);
797 	//装载跨服玩家的离线消息
798 	void loadUserOfflineDataCs(int nServerId, int nActorId);
800 	//播报消息 nType 1 19点前 2 22点前
1025 	//获取商城物品价格数据
1026 	int getMerchandisePrice(unsigned int nGoodsId, int &btDealGoldType, int &nPrice, int &nQuality, int &nStrong, int &nBind);
1028 	//是否连接到跨服服务器
1029 	bool isStartCommonServer();
1031 	//是否为公共服
1031 	//是否为公共服
1032 	bool isCommonServer();
1034 	//初始化跨服沙巴克城墙
1035 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1035 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1037 	//跨服沙巴克开始
1038 	void startGuildCrossSbk();
1038 	void startGuildCrossSbk();
1040 	//跨服沙巴克结束
1041 	void endCrossSbkWar();
1043 	//获取角色最大等级
1064 	//保存完成某日活动
1065 	void finishTenDaysToFile(int nIndex);
1067 	//开始跨服boss战时初始化
1068 	void initCrossBossData();
1068 	void initCrossBossData();
1070 	//添加跨服boss数据
1071 	void addCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
1073 	//开始天下第一时的初始化

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\SystemParamDef.h 13 KB H 文件 2013/4/11 18:55:22 2018/8/3 20:29:15 2018/8/3 20:29:15 1
171 	smHideHeadMsg=10,       //是否隐藏头顶的信息，1表示隐藏头顶信息（包括名字，头衔，称号，帮派等），0表示不限制
172 	smShowRedWeaponEffect =11,  //是否显示神器的特效，1表示显示，0表示不显示
173 	smIsInCommonServer=12,     //是否在跨服的场景，1表示是，0表示否
174 	smSaveGameAddress = 13,		//是否保存了游戏网页
175 	smFlushStarToLv			= 14,		//刷星到指定星级

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\script\interface\TipmsgID.h 56 KB H 文件 2013/4/11 18:55:27 2018/8/3 20:29:15 2018/8/3 20:29:15 10
763 	tpTransmitPattern,				//"<速传/F%s:%d:%d:%s:%d>"
764 	tpServerIdPattern,				//"[%d区]"
765 	tpCSMsgFilter,					//跨服状态无法使用
767 	tpChannelSecret,				//私聊
768 	tpChannelNear,					//同屏
1233 	tpNoDropItemArea,						//此场不能丢弃物品
1235 	tpCrossSbkEndMsg,						//恭喜%d区<(c0xFF00FF00)%s>在<(n%s)>带领下成功占领沙城！本战区所向披靡！
1236 	tpIsCrossGuildCanNotChange,				//参加跨服沙城战的行会不能禅让会长
1237 	tpSceneCanNotCrossTransfer,             //当前场景无法跨服传送
1238 	
1239 	tpRedPackOffline,						//赠送失败，请在对方在线时赠送
1254 	tpWealthEventRecord2,					//财神降临！【%s】在财神闯关中顺利进入【%s】
1256 	tpChangeNameNotOpen,					//改名功能暂为开启，敬请期待！
1257 	tpCrossServerIsClose,                    //跨服没有开启
1258 	tpIsCrossServering,                    //正在进入跨服务器
1260 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1260 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1262 	tpNoGuildCanNotSignSbk,					//没有行会不能报名跨服沙城战
1263 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1264 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1263 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1264 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1265 	tpNoSingCrossItem,						//没有跨服攻城头像
1266 	tpSignCrossToGuildMem,					//贵行会已报名周四跨服沙城战，请做好充分准备攻下跨服沙城战!
1267 	tpIsSignCrossGuildSbk,					//贵行会已报名跨服沙城战
1268 	tpIsTheEndGodWealthTips,				//您已完成财神闯关的全部关卡，请明天继续从头进行闯关。
1269 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 7:50:34 2018/8/3 20:29:15 2018/8/3 20:29:15 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:16:39 2018/8/3 20:29:15 2018/8/3 20:29:15 4
130 	VOID CatchBroadcastMessage(CDataPacketReader &inPacket);
132 	/*
133 	* Comments: 保存跨服排行榜
134 	* Param CDataPacketReader & inPacket:
135 	* @Return VOID:
138 	VOID CatchSaveCsRank(CDataPacketReader &inPacket);
140 	/*
141 	* Comments: 获取跨服排行榜
142 	* Param CDataPacketReader & inPacket:
143 	* @Return VOID:
146 	VOID CatchLoadCsRank(CDataPacketReader &inPacket);
148 	/*
149 	* Comments: 清除跨服排行数据
150 	* Param CDataPacketReader & inPacket:
151 	* @Return VOID:
154 	VOID CatchClearCsRank(CDataPacketReader &inPacket);
155 	
157 	//设置跨服的数据库ID
158 	VOID SetCommonServerId(CDataPacketReader &inPacket);
159 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\SessionServer\SessionServer.h 6 KB H 文件 2013/4/11 5:16:40 2018/8/3 20:29:15 2018/8/3 20:29:15 1
109 	//踢掉在线的用户
110 	VOID PostKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
112 	//处理剔除跨服用户
113 	void ProcessKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
116 	//获取当前全局会话数量

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-9377\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:16:38 2018/8/3 20:29:15 2018/8/3 20:29:15 3
225 #define SSIM_WITHDRAW_YUANBAO				20011	// 提取元宝
226 #define SSIM_CLOSE_SESSION_BY_ACCOUNTID     20012   //通过accountid关闭会话
228 #define SSIM_KICK_ONLINE_CROSSSERVER_ACTOR     20013   //踢掉在线的跨服用户
231 /*  SQL查询语句定义
232 *******************************************/
255 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
256 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
258 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
259 static LPCSTR szSaveCsRank = "insert into csrank(actorid,actorname,sex,job,serverindex,value) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
260 static LPCSTR szLoadCsRank = "call loadcsrank()";	//获取每个职业战力第一名单
262 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\common\def\GuildDb.h 6 KB H 文件 2013/4/11 8:03:37 2018/8/3 20:29:16 2018/8/3 20:29:16 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\common\def\InterServerComm.h 14 KB H 文件 2013/4/11 8:03:38 2018/8/3 20:29:16 2018/8/3 20:29:16 17
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 			fcSendCrossBattlefieldSignupInfoToCommonServer, ///< 向跨服发送降魔战场的报名信息
183 			fcBroadCrossBattlefieldSignupInfo,	///< 降魔战场广播报名信息
184 		};
194 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
195 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
196 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
197 		};
199 		/** 名称服务器操作返回值定义 **/
337 			dcLoadPeriodRideData,		//加载时效坐骑数据
338 			dcSavePeriodRideData,		//保存时效坐骑数据
340 			dcReloadCrossConfig,		//重新加载跨服配置
342 			dcLoadGodWealthData,		//加载财富闯关的事件
343 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\common\include\CustomGateManager.h 4 KB H 文件 2013/4/11 8:03:40 2018/8/3 20:29:16 2018/8/3 20:29:16 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\common\include\CustomServerGate.h 12 KB H 文件 2013/4/11 8:03:41 2018/8/3 20:29:16 2018/8/3 20:29:16 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 5:17:05 2018/8/3 20:29:16 2018/8/3 20:29:16 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 5:17:39 2018/8/3 20:29:19 2018/8/3 20:29:19 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
70 	enMagicItemSystemId = 48,		//法宝子系统

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\LogicEngine.h 16 KB H 文件 2013/4/11 5:17:40 2018/8/3 20:29:19 2018/8/3 20:29:19 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
400 	CDmkjMgr				m_DmkjMgr;
402 	CCorpsComponet			m_CorpsMgr;			//战队管理器
404 	CCrossComponet			m_CrossMgr;			//跨服管理器
406 	CTenDaysActivityComponent m_TenActivityMgr;
408 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 5:17:41 2018/8/3 20:29:19 2018/8/3 20:29:19 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 5:17:44 2018/8/3 20:29:19 2018/8/3 20:29:19 1
403 #include "base/CorpsMgr.h"			//战队管理器
404 #include "base/DmkjMgr.h"			//盗梦空间管理器
405 #include "base/CrossMgr.h"			//跨服管理器
408 //conponent
409 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\base\CrossMgr.h 5 KB H 文件 2013/4/11 7:59:43 2018/8/3 20:29:18 2018/8/3 20:29:18 9
3 #include <vector>
4 //#include "../misc/AllocForSTL.hpp"
6 //跨服管理器
8 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
9 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
23 #pragma region CrossBoss
24 public:
25 	//开始跨服boss战时初始化
26 	void InitCrossBossData();
26 	void InitCrossBossData();
28 	//添加跨服boss数据
29 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
31 	//接受公共服来的boss死亡消息
31 	//接受公共服来的boss死亡消息
32 	void OnCommonCrossBossDie(CDataPacketReader &reader);
34 	//发送跨服boss的数据
35 	void SendCrossBossToClient(CActor* pActor);
36 private:
55 		}
56 	}TAGCROSSBOSSDATA;
58 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
59 #pragma endregion CrossBoss
61 #pragma region CrossWorldFirst
72 	//发送天下第一的数据给客户端（公共服）
73 	void SendCrossWorldToClientOp(CActor* pActor);
75 	//初始化跨服天下第一的雕像
76 	void ResetWorldFirstNpc();
77 private:
138 	/// 接收session服发过来的同步玩家报名信息
139 	void ReceiveCrossBattlefieldSignupInfoFromLogicServer(CDataPacketReader& reader);
140 	/// 跨服通知同步报名信息
141 	void ReceiveCrossBattlefieldSignupInfoFromCommonServer(CDataPacketReader& reader);
142 	/// 广播报名信息 bNewActivity 新活动拉人
144 	/// 获取当前已报名人数
145 	int GetCurrentCrossBattlefieldPlayerNum();
146 	///// 忘记登录跨服
147 	//void OnLoginCrossBattlefield(CActor* pActor);
148 	
153 	//*/
154 public:
155 	//发送是否开启跨服的状态
156 	void SendCrossStartState(int bState);
157 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 7:59:51 2018/8/3 20:29:18 2018/8/3 20:29:18 18
367 	//后台删除行会
368 	void LogSenderDelGuild(char* sGuildName, int nRecog);
370 	//更新可以攻城跨服攻城的沙巴克行会
371 	void UpdateCrossSbkGuild();
373 	//发送攻沙行会给其他逻辑服
379 	//收到其他服发来的职位
380 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
382 	//跨服来的消息
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
385 	//跨服沙巴克开始
386 	void StartGuildCrossSbk();
386 	void StartGuildCrossSbk();
388 	//初始化跨服沙巴克城墙
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
391 	//设置跨服城墙被攻击状态
392 	void SetCrossWallState(bool bState);
392 	void SetCrossWallState(bool bState);
394 	//设置跨服城墙的是否死亡的状态状态
395 	void SetCrossSbkWallState(int nIndex,int nState)
396 	{
398 			m_CrossWallState[nIndex].nState = nState;
399 	}
401 	//跨服沙巴克结束
402 	void EndCrossSbkWar();
402 	void EndCrossSbkWar();
404 	//判断跨服是否只有一个行会占领
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
407 	//判断是否可参加跨服沙巴克的行会
408 	bool IsCanCrossSbkGuild(int nGuildId);
408 	bool IsCanCrossSbkGuild(int nGuildId);
410 	//发送跨服结果给普通逻辑服
411 	void SendCrossSbkResult();
411 	void SendCrossSbkResult();
413 	//获取跨服沙巴克的行会的信息
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
416 	//跨服结束发送跨服城主的信息
417 	void OnSendCrossCityOwn(int nGuildId);
417 	void OnSendCrossCityOwn(int nGuildId);
419 	//收到跨服职位
420 	void OnRevCrossCityPos(CDataPacketReader &reader);
422 	//公共服发送占领沙巴克的行会信息
434 	//根据行会id获取行会名称
435 	char* GetGuildNameInCross(int nGuildId);
437 	//设置跨服占领行会
438 	void OnSetkfOwnGuildOp(char* sGuildName);
439 private:
483 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
485 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
487 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
488 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
490 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
491 private:
492 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 7:59:56 2018/8/3 20:29:18 2018/8/3 20:29:18 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 8:00:01 2018/8/3 20:29:18 2018/8/3 20:29:18 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
154 		stNormal = 0,
155 		stRsCastellan = 1,	//本服沙巴克城主雕像
156 		stCsCastellan = 2,	//跨服沙巴克城主雕像
157 		stRsVocation = 3,	//本服职业雕像
157 		stRsVocation = 3,	//本服职业雕像
158 		stCsVocation = 4,	//跨服职业雕像
159 	};
160 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
183 	//发送到SS保存战力排行
184 	void SaveCsRank();
185 	//加载跨服战力排行数据
186 	void LoadCsRank();
186 	void LoadCsRank();
187 	//清除跨服战力排行数据
188 	void ClearCsRank(INT_PTR nServerId);
190 	//广播所有逻辑服将雕像榜单数据发到session
192 	//广播所有逻辑服重新取下榜单
193 	void BroadLogicToLoadCsRank();
195 	//装载跨服玩家的离线消息
196 	void LoadUserOfflineData(int nServerId, int nActorId);
196 	void LoadUserOfflineData(int nServerId, int nActorId);
198 	//返回跨服玩家的离线下消息
199 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
201 	//设置角色离线数据
221 	
222 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
223 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
224 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 8:00:10 2018/8/3 20:29:18 2018/8/3 20:29:18 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 8:00:21 2018/8/3 20:29:18 2018/8/3 20:29:18 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	int nGuildCoinGxRate;			//捐献1000行会获得1贡献

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 8:00:25 2018/8/3 20:29:18 2018/8/3 20:29:18 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\config\PropertyConfig.h 19 KB H 文件 2013/4/11 8:00:30 2018/8/3 20:29:18 2018/8/3 20:29:18 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 8:00:44 2018/8/3 20:29:18 2018/8/3 20:29:18 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
225 	inline CMagicItemSystem& GetMagicItemSystem() {return m_MagicItemSystem;}	//法宝系统
2254 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2255 	CHeroSystem             m_heroSystem;       //英雄系统
2257 	CCrossSystem			m_CrossSystem;		//跨服子系统
2258 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2259 	CMagicItemSystem		m_MagicItemSystem;	//法宝子系统
2305 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2306 	//////////////////////////////////////////////////////////////////////////
2307 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2308 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2309 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2310 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2311 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2312 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2314 	// 非重配地图复活点
2315 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\entitysystem\ChatSystem.h 29 KB H 文件 2013/4/11 8:01:02 2018/8/3 20:29:18 2018/8/3 20:29:18 9
608 	// 测试session消息广播
609 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
610 	// 设置是否连接跨服
611 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
612 	
616 	//设置自己的转数
617 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
619 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
620 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
621 	// 广播所有逻辑服将雕像榜单数据发到session
733 	//节日活动设置
734 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
736 	//设置可以跨服攻沙的行会id
737 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
739 	//gm设置头衔
758 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
762 	//刷新跨服的配置
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
767 	//设置跨服的id
768 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
771 	//设置排行选项
807 	//设置是否保存任务到日志服务器
808 	bool GmSetSaveCoinLogFlag(char ** args, INT_PTR nArgsCount, char * sRetMsg);
810 	//清除报名跨服的列表
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
813 	//报名跨服沙城战
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
816 	//设置跨服占领行会
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
819 	//清除跨服的职位
820 	bool GmClearCrossGuildPos(char ** args, INT_PTR nArgsCount, char * sRetMsg);
822 	//清空魔珠背包

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 8:01:05 2018/8/3 20:29:18 2018/8/3 20:29:18 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
60 private:
57 	void OnSignUpCrossSbkOp();
60 private:
61 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
62 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 8:01:46 2018/8/3 20:29:19 2018/8/3 20:29:19 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\networkdata\LogicServerCmd.h 44 KB H 文件 2013/4/11 8:01:51 2018/8/3 20:29:19 2018/8/3 20:29:19 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1426 enum tagCrossSystemCode
1427 {
1428 	cEnterCrossScene		= 1,	//请求进入跨服地图
1429 	cGetCrossBossData		= 2,	//获取跨服boss的数据
1430 	cGetCrossGuildList		= 3,	//请求跨服攻城的行会列表
1431 	cSetCrossSbkPos			= 4,	//设置跨服沙巴克职位
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1433 	cSignUpCrossGuildSbk	= 6,	//报名跨服沙巴克战
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1436 	sSendCrossBossData		= 1,	//发送跨服boss的数据
1437 	sSendCrossWorldData		= 2,	//发送跨服天下第一给客户端
1438 	sSendCrossGuildList		= 3,	//返回跨服攻城的行会列表
1439 	sSendCrossGuildPos		= 4,	//返回跨服攻城的职位表
1440 	sSendCrossOpenState		= 6,	//是否开启跨服状态
1441 	sCrossBattlefieldSignup ,		///< 返回降魔战场报名
1442 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 7:59:22 2018/8/3 20:29:19 2018/8/3 20:29:19 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:17:54 2018/8/3 20:29:19 2018/8/3 20:29:19 4
130 	VOID CatchBroadcastMessage(CDataPacketReader &inPacket);
132 	/*
133 	* Comments: 保存跨服排行榜
134 	* Param CDataPacketReader & inPacket:
135 	* @Return VOID:
138 	VOID CatchSaveCsRank(CDataPacketReader &inPacket);
140 	/*
141 	* Comments: 获取跨服排行榜
142 	* Param CDataPacketReader & inPacket:
143 	* @Return VOID:
146 	VOID CatchLoadCsRank(CDataPacketReader &inPacket);
148 	/*
149 	* Comments: 清除跨服排行数据
150 	* Param CDataPacketReader & inPacket:
151 	* @Return VOID:
154 	VOID CatchClearCsRank(CDataPacketReader &inPacket);
155 	
157 	//设置跨服的数据库ID
158 	VOID SetCommonServerId(CDataPacketReader &inPacket);
159 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\SessionServer\SessionServer.h 6 KB H 文件 2013/4/11 5:17:55 2018/8/3 20:29:19 2018/8/3 20:29:19 1
109 	//踢掉在线的用户
110 	VOID PostKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
112 	//处理剔除跨服用户
113 	void ProcessKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
116 	//获取当前全局会话数量

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-new\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:17:53 2018/8/3 20:29:19 2018/8/3 20:29:19 3
225 #define SSIM_WITHDRAW_YUANBAO				20011	// 提取元宝
226 #define SSIM_CLOSE_SESSION_BY_ACCOUNTID     20012   //通过accountid关闭会话
228 #define SSIM_KICK_ONLINE_CROSSSERVER_ACTOR     20013   //踢掉在线的跨服用户
231 /*  SQL查询语句定义
232 *******************************************/
255 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
256 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
258 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
259 static LPCSTR szSaveCsRank = "insert into csrank(actorid,actorname,sex,job,serverindex,value) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
260 static LPCSTR szLoadCsRank = "call loadcsrank()";	//获取每个职业战力第一名单
262 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\common\def\GuildDb.h 6 KB H 文件 2013/4/11 8:09:46 2018/8/3 20:29:20 2018/8/3 20:29:20 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\common\def\InterServerComm.h 14 KB H 文件 2013/4/11 8:09:47 2018/8/3 20:29:20 2018/8/3 20:29:20 17
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 			fcSendCrossBattlefieldSignupInfoToCommonServer, ///< 向跨服发送降魔战场的报名信息
183 			fcBroadCrossBattlefieldSignupInfo,	///< 降魔战场广播报名信息
184 		};
194 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
195 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
196 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
197 		};
199 		/** 名称服务器操作返回值定义 **/
337 			dcLoadPeriodRideData,		//加载时效坐骑数据
338 			dcSavePeriodRideData,		//保存时效坐骑数据
340 			dcReloadCrossConfig,		//重新加载跨服配置
342 			dcLoadGodWealthData,		//加载财富闯关的事件
343 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\common\include\CustomGateManager.h 4 KB H 文件 2013/4/11 8:09:49 2018/8/3 20:29:20 2018/8/3 20:29:20 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\common\include\CustomServerGate.h 12 KB H 文件 2013/4/11 8:09:51 2018/8/3 20:29:20 2018/8/3 20:29:20 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 5:18:22 2018/8/3 20:29:20 2018/8/3 20:29:20 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 5:18:56 2018/8/3 20:29:23 2018/8/3 20:29:23 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
70 	enMagicItemSystemId = 48,		//法宝子系统

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\LogicEngine.h 16 KB H 文件 2013/4/11 5:18:57 2018/8/3 20:29:23 2018/8/3 20:29:23 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
400 	CDmkjMgr				m_DmkjMgr;
402 	CCorpsComponet			m_CorpsMgr;			//战队管理器
404 	CCrossComponet			m_CrossMgr;			//跨服管理器
406 	CTenDaysActivityComponent m_TenActivityMgr;
408 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 5:18:58 2018/8/3 20:29:23 2018/8/3 20:29:23 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 5:19:01 2018/8/3 20:29:23 2018/8/3 20:29:23 1
403 #include "base/CorpsMgr.h"			//战队管理器
404 #include "base/DmkjMgr.h"			//盗梦空间管理器
405 #include "base/CrossMgr.h"			//跨服管理器
408 //conponent
409 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\base\CrossMgr.h 5 KB H 文件 2013/4/11 8:05:51 2018/8/3 20:29:22 2018/8/3 20:29:22 9
3 #include <vector>
4 //#include "../misc/AllocForSTL.hpp"
6 //跨服管理器
8 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
9 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
23 #pragma region CrossBoss
24 public:
25 	//开始跨服boss战时初始化
26 	void InitCrossBossData();
26 	void InitCrossBossData();
28 	//添加跨服boss数据
29 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
31 	//接受公共服来的boss死亡消息
31 	//接受公共服来的boss死亡消息
32 	void OnCommonCrossBossDie(CDataPacketReader &reader);
34 	//发送跨服boss的数据
35 	void SendCrossBossToClient(CActor* pActor);
36 private:
55 		}
56 	}TAGCROSSBOSSDATA;
58 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
59 #pragma endregion CrossBoss
61 #pragma region CrossWorldFirst
72 	//发送天下第一的数据给客户端（公共服）
73 	void SendCrossWorldToClientOp(CActor* pActor);
75 	//初始化跨服天下第一的雕像
76 	void ResetWorldFirstNpc();
77 private:
138 	/// 接收session服发过来的同步玩家报名信息
139 	void ReceiveCrossBattlefieldSignupInfoFromLogicServer(CDataPacketReader& reader);
140 	/// 跨服通知同步报名信息
141 	void ReceiveCrossBattlefieldSignupInfoFromCommonServer(CDataPacketReader& reader);
142 	/// 广播报名信息 bNewActivity 新活动拉人
144 	/// 获取当前已报名人数
145 	int GetCurrentCrossBattlefieldPlayerNum();
146 	///// 忘记登录跨服
147 	//void OnLoginCrossBattlefield(CActor* pActor);
148 	
153 	//*/
154 public:
155 	//发送是否开启跨服的状态
156 	void SendCrossStartState(int bState);
157 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 8:06:00 2018/8/3 20:29:22 2018/8/3 20:29:22 18
367 	//后台删除行会
368 	void LogSenderDelGuild(char* sGuildName, int nRecog);
370 	//更新可以攻城跨服攻城的沙巴克行会
371 	void UpdateCrossSbkGuild();
373 	//发送攻沙行会给其他逻辑服
379 	//收到其他服发来的职位
380 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
382 	//跨服来的消息
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
385 	//跨服沙巴克开始
386 	void StartGuildCrossSbk();
386 	void StartGuildCrossSbk();
388 	//初始化跨服沙巴克城墙
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
391 	//设置跨服城墙被攻击状态
392 	void SetCrossWallState(bool bState);
392 	void SetCrossWallState(bool bState);
394 	//设置跨服城墙的是否死亡的状态状态
395 	void SetCrossSbkWallState(int nIndex,int nState)
396 	{
398 			m_CrossWallState[nIndex].nState = nState;
399 	}
401 	//跨服沙巴克结束
402 	void EndCrossSbkWar();
402 	void EndCrossSbkWar();
404 	//判断跨服是否只有一个行会占领
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
407 	//判断是否可参加跨服沙巴克的行会
408 	bool IsCanCrossSbkGuild(int nGuildId);
408 	bool IsCanCrossSbkGuild(int nGuildId);
410 	//发送跨服结果给普通逻辑服
411 	void SendCrossSbkResult();
411 	void SendCrossSbkResult();
413 	//获取跨服沙巴克的行会的信息
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
416 	//跨服结束发送跨服城主的信息
417 	void OnSendCrossCityOwn(int nGuildId);
417 	void OnSendCrossCityOwn(int nGuildId);
419 	//收到跨服职位
420 	void OnRevCrossCityPos(CDataPacketReader &reader);
422 	//公共服发送占领沙巴克的行会信息
434 	//根据行会id获取行会名称
435 	char* GetGuildNameInCross(int nGuildId);
437 	//设置跨服占领行会
438 	void OnSetkfOwnGuildOp(char* sGuildName);
439 private:
483 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
485 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
487 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
488 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
490 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
491 private:
492 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 8:06:04 2018/8/3 20:29:22 2018/8/3 20:29:22 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 8:06:09 2018/8/3 20:29:22 2018/8/3 20:29:22 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
154 		stNormal = 0,
155 		stRsCastellan = 1,	//本服沙巴克城主雕像
156 		stCsCastellan = 2,	//跨服沙巴克城主雕像
157 		stRsVocation = 3,	//本服职业雕像
157 		stRsVocation = 3,	//本服职业雕像
158 		stCsVocation = 4,	//跨服职业雕像
159 	};
160 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
183 	//发送到SS保存战力排行
184 	void SaveCsRank();
185 	//加载跨服战力排行数据
186 	void LoadCsRank();
186 	void LoadCsRank();
187 	//清除跨服战力排行数据
188 	void ClearCsRank(INT_PTR nServerId);
190 	//广播所有逻辑服将雕像榜单数据发到session
192 	//广播所有逻辑服重新取下榜单
193 	void BroadLogicToLoadCsRank();
195 	//装载跨服玩家的离线消息
196 	void LoadUserOfflineData(int nServerId, int nActorId);
196 	void LoadUserOfflineData(int nServerId, int nActorId);
198 	//返回跨服玩家的离线下消息
199 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
201 	//设置角色离线数据
221 	
222 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
223 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
224 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 8:06:18 2018/8/3 20:29:22 2018/8/3 20:29:22 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 8:06:29 2018/8/3 20:29:22 2018/8/3 20:29:22 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	int nGuildCoinGxRate;			//捐献1000行会获得1贡献

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 8:06:33 2018/8/3 20:29:22 2018/8/3 20:29:22 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\config\PropertyConfig.h 18 KB H 文件 2013/4/11 8:06:38 2018/8/3 20:29:22 2018/8/3 20:29:22 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 8:06:52 2018/8/3 20:29:22 2018/8/3 20:29:22 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
225 	inline CMagicItemSystem& GetMagicItemSystem() {return m_MagicItemSystem;}	//法宝系统
2242 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2243 	CHeroSystem             m_heroSystem;       //英雄系统
2245 	CCrossSystem			m_CrossSystem;		//跨服子系统
2246 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2247 	CMagicItemSystem		m_MagicItemSystem;	//法宝子系统
2293 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2294 	//////////////////////////////////////////////////////////////////////////
2295 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2296 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2297 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2298 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2299 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2300 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2302 	// 非重配地图复活点
2303 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\entitysystem\ChatSystem.h 29 KB H 文件 2013/4/11 8:07:09 2018/8/3 20:29:23 2018/8/3 20:29:23 9
608 	// 测试session消息广播
609 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
610 	// 设置是否连接跨服
611 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
612 	
616 	//设置自己的转数
617 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
619 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
620 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
621 	// 广播所有逻辑服将雕像榜单数据发到session
733 	//节日活动设置
734 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
736 	//设置可以跨服攻沙的行会id
737 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
739 	//gm设置头衔
758 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
762 	//刷新跨服的配置
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
767 	//设置跨服的id
768 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
771 	//设置排行选项
807 	//设置是否保存任务到日志服务器
808 	bool GmSetSaveCoinLogFlag(char ** args, INT_PTR nArgsCount, char * sRetMsg);
810 	//清除报名跨服的列表
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
813 	//报名跨服沙城战
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
816 	//设置跨服占领行会
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
819 	//清除跨服的职位
820 	bool GmClearCrossGuildPos(char ** args, INT_PTR nArgsCount, char * sRetMsg);
822 	//清空魔珠背包

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 8:07:13 2018/8/3 20:29:23 2018/8/3 20:29:23 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
60 private:
57 	void OnSignUpCrossSbkOp();
60 private:
61 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
62 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 8:07:53 2018/8/3 20:29:23 2018/8/3 20:29:23 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\networkdata\LogicServerCmd.h 44 KB H 文件 2013/4/11 8:07:58 2018/8/3 20:29:23 2018/8/3 20:29:23 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1420 enum tagCrossSystemCode
1421 {
1422 	cEnterCrossScene		= 1,	//请求进入跨服地图
1423 	cGetCrossBossData		= 2,	//获取跨服boss的数据
1424 	cGetCrossGuildList		= 3,	//请求跨服攻城的行会列表
1425 	cSetCrossSbkPos			= 4,	//设置跨服沙巴克职位
1426 	cReturnToRawServer		= 5,	//返回到原来的服务器
1426 	cReturnToRawServer		= 5,	//返回到原来的服务器
1427 	cSignUpCrossGuildSbk	= 6,	//报名跨服沙巴克战
1428 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1428 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1430 	sSendCrossBossData		= 1,	//发送跨服boss的数据
1431 	sSendCrossWorldData		= 2,	//发送跨服天下第一给客户端
1432 	sSendCrossGuildList		= 3,	//返回跨服攻城的行会列表
1433 	sSendCrossGuildPos		= 4,	//返回跨服攻城的职位表
1434 	sSendCrossOpenState		= 6,	//是否开启跨服状态
1435 	sCrossBattlefieldSignup ,		///< 返回降魔战场报名
1436 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 8:05:30 2018/8/3 20:29:23 2018/8/3 20:29:23 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:19:11 2018/8/3 20:29:23 2018/8/3 20:29:23 4
130 	VOID CatchBroadcastMessage(CDataPacketReader &inPacket);
132 	/*
133 	* Comments: 保存跨服排行榜
134 	* Param CDataPacketReader & inPacket:
135 	* @Return VOID:
138 	VOID CatchSaveCsRank(CDataPacketReader &inPacket);
140 	/*
141 	* Comments: 获取跨服排行榜
142 	* Param CDataPacketReader & inPacket:
143 	* @Return VOID:
146 	VOID CatchLoadCsRank(CDataPacketReader &inPacket);
148 	/*
149 	* Comments: 清除跨服排行数据
150 	* Param CDataPacketReader & inPacket:
151 	* @Return VOID:
154 	VOID CatchClearCsRank(CDataPacketReader &inPacket);
155 	
157 	//设置跨服的数据库ID
158 	VOID SetCommonServerId(CDataPacketReader &inPacket);
159 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\SessionServer\SessionServer.h 6 KB H 文件 2013/4/11 5:19:12 2018/8/3 20:29:23 2018/8/3 20:29:23 1
109 	//踢掉在线的用户
110 	VOID PostKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
112 	//处理剔除跨服用户
113 	void ProcessKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
116 	//获取当前全局会话数量

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server-vspk\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:19:10 2018/8/3 20:29:23 2018/8/3 20:29:23 3
225 #define SSIM_WITHDRAW_YUANBAO				20011	// 提取元宝
226 #define SSIM_CLOSE_SESSION_BY_ACCOUNTID     20012   //通过accountid关闭会话
228 #define SSIM_KICK_ONLINE_CROSSSERVER_ACTOR     20013   //踢掉在线的跨服用户
231 /*  SQL查询语句定义
232 *******************************************/
255 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
256 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
258 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
259 static LPCSTR szSaveCsRank = "insert into csrank(actorid,actorname,sex,job,serverindex,value) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
260 static LPCSTR szLoadCsRank = "call loadcsrank()";	//获取每个职业战力第一名单
262 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\common\def\GuildDb.h 6 KB H 文件 2013/4/11 7:43:47 2018/8/3 20:29:35 2018/8/3 20:29:35 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\common\def\InterServerComm.h 14 KB H 文件 2013/4/11 7:43:48 2018/8/3 20:29:35 2018/8/3 20:29:35 17
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 			fcSendCrossBattlefieldSignupInfoToCommonServer, ///< 向跨服发送降魔战场的报名信息
183 			fcBroadCrossBattlefieldSignupInfo,	///< 降魔战场广播报名信息
184 		};
194 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
195 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
196 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
197 		};
199 		/** 名称服务器操作返回值定义 **/
337 			dcLoadPeriodRideData,		//加载时效坐骑数据
338 			dcSavePeriodRideData,		//保存时效坐骑数据
340 			dcReloadCrossConfig,		//重新加载跨服配置
342 			dcLoadGodWealthData,		//加载财富闯关的事件
343 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\common\include\CustomGateManager.h 4 KB H 文件 2013/4/11 7:43:50 2018/8/3 20:29:35 2018/8/3 20:29:35 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\common\include\CustomServerGate.h 12 KB H 文件 2013/4/11 7:43:51 2018/8/3 20:29:35 2018/8/3 20:29:35 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 5:06:31 2018/8/3 20:29:37 2018/8/3 20:29:37 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 5:07:29 2018/8/3 20:29:44 2018/8/3 20:29:44 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
70 	enMagicItemSystemId = 48,		//法宝子系统

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\LogicEngine.h 16 KB H 文件 2013/4/11 5:07:30 2018/8/3 20:29:44 2018/8/3 20:29:44 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
400 	CDmkjMgr				m_DmkjMgr;
402 	CCorpsComponet			m_CorpsMgr;			//战队管理器
404 	CCrossComponet			m_CrossMgr;			//跨服管理器
406 	CTenDaysActivityComponent m_TenActivityMgr;
408 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 5:07:31 2018/8/3 20:29:44 2018/8/3 20:29:44 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 5:07:34 2018/8/3 20:29:44 2018/8/3 20:29:44 1
403 #include "base/CorpsMgr.h"			//战队管理器
404 #include "base/DmkjMgr.h"			//盗梦空间管理器
405 #include "base/CrossMgr.h"			//跨服管理器
408 //conponent
409 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\base\CrossMgr.h 5 KB H 文件 2013/4/11 7:34:26 2018/8/3 20:29:43 2018/8/3 20:29:43 9
3 #include <vector>
4 //#include "../misc/AllocForSTL.hpp"
6 //跨服管理器
8 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
9 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
23 #pragma region CrossBoss
24 public:
25 	//开始跨服boss战时初始化
26 	void InitCrossBossData();
26 	void InitCrossBossData();
28 	//添加跨服boss数据
29 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
31 	//接受公共服来的boss死亡消息
31 	//接受公共服来的boss死亡消息
32 	void OnCommonCrossBossDie(CDataPacketReader &reader);
34 	//发送跨服boss的数据
35 	void SendCrossBossToClient(CActor* pActor);
36 private:
55 		}
56 	}TAGCROSSBOSSDATA;
58 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
59 #pragma endregion CrossBoss
61 #pragma region CrossWorldFirst
72 	//发送天下第一的数据给客户端（公共服）
73 	void SendCrossWorldToClientOp(CActor* pActor);
75 	//初始化跨服天下第一的雕像
76 	void ResetWorldFirstNpc();
77 private:
138 	/// 接收session服发过来的同步玩家报名信息
139 	void ReceiveCrossBattlefieldSignupInfoFromLogicServer(CDataPacketReader& reader);
140 	/// 跨服通知同步报名信息
141 	void ReceiveCrossBattlefieldSignupInfoFromCommonServer(CDataPacketReader& reader);
142 	/// 广播报名信息 bNewActivity 新活动拉人
144 	/// 获取当前已报名人数
145 	int GetCurrentCrossBattlefieldPlayerNum();
146 	///// 忘记登录跨服
147 	//void OnLoginCrossBattlefield(CActor* pActor);
148 	
153 	//*/
154 public:
155 	//发送是否开启跨服的状态
156 	void SendCrossStartState(int bState);
157 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 7:34:35 2018/8/3 20:29:43 2018/8/3 20:29:43 18
367 	//后台删除行会
368 	void LogSenderDelGuild(char* sGuildName, int nRecog);
370 	//更新可以攻城跨服攻城的沙巴克行会
371 	void UpdateCrossSbkGuild();
373 	//发送攻沙行会给其他逻辑服
379 	//收到其他服发来的职位
380 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
382 	//跨服来的消息
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
385 	//跨服沙巴克开始
386 	void StartGuildCrossSbk();
386 	void StartGuildCrossSbk();
388 	//初始化跨服沙巴克城墙
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
391 	//设置跨服城墙被攻击状态
392 	void SetCrossWallState(bool bState);
392 	void SetCrossWallState(bool bState);
394 	//设置跨服城墙的是否死亡的状态状态
395 	void SetCrossSbkWallState(int nIndex,int nState)
396 	{
398 			m_CrossWallState[nIndex].nState = nState;
399 	}
401 	//跨服沙巴克结束
402 	void EndCrossSbkWar();
402 	void EndCrossSbkWar();
404 	//判断跨服是否只有一个行会占领
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
407 	//判断是否可参加跨服沙巴克的行会
408 	bool IsCanCrossSbkGuild(int nGuildId);
408 	bool IsCanCrossSbkGuild(int nGuildId);
410 	//发送跨服结果给普通逻辑服
411 	void SendCrossSbkResult();
411 	void SendCrossSbkResult();
413 	//获取跨服沙巴克的行会的信息
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
416 	//跨服结束发送跨服城主的信息
417 	void OnSendCrossCityOwn(int nGuildId);
417 	void OnSendCrossCityOwn(int nGuildId);
419 	//收到跨服职位
420 	void OnRevCrossCityPos(CDataPacketReader &reader);
422 	//公共服发送占领沙巴克的行会信息
434 	//根据行会id获取行会名称
435 	char* GetGuildNameInCross(int nGuildId);
437 	//设置跨服占领行会
438 	void OnSetkfOwnGuildOp(char* sGuildName);
439 private:
483 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
485 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
487 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
488 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
490 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
491 private:
492 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 7:34:40 2018/8/3 20:29:43 2018/8/3 20:29:43 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 7:34:45 2018/8/3 20:29:43 2018/8/3 20:29:43 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
154 		stNormal = 0,
155 		stRsCastellan = 1,	//本服沙巴克城主雕像
156 		stCsCastellan = 2,	//跨服沙巴克城主雕像
157 		stRsVocation = 3,	//本服职业雕像
157 		stRsVocation = 3,	//本服职业雕像
158 		stCsVocation = 4,	//跨服职业雕像
159 	};
160 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
183 	//发送到SS保存战力排行
184 	void SaveCsRank();
185 	//加载跨服战力排行数据
186 	void LoadCsRank();
186 	void LoadCsRank();
187 	//清除跨服战力排行数据
188 	void ClearCsRank(INT_PTR nServerId);
190 	//广播所有逻辑服将雕像榜单数据发到session
192 	//广播所有逻辑服重新取下榜单
193 	void BroadLogicToLoadCsRank();
195 	//装载跨服玩家的离线消息
196 	void LoadUserOfflineData(int nServerId, int nActorId);
196 	void LoadUserOfflineData(int nServerId, int nActorId);
198 	//返回跨服玩家的离线下消息
199 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
201 	//设置角色离线数据
221 	
222 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
223 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
224 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 7:34:57 2018/8/3 20:29:43 2018/8/3 20:29:43 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 7:35:09 2018/8/3 20:29:43 2018/8/3 20:29:43 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	int nGuildCoinGxRate;			//捐献1000行会获得1贡献

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 7:35:13 2018/8/3 20:29:43 2018/8/3 20:29:43 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\config\PropertyConfig.h 19 KB H 文件 2013/4/11 7:35:18 2018/8/3 20:29:43 2018/8/3 20:29:43 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 7:35:32 2018/8/3 20:29:43 2018/8/3 20:29:43 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
225 	inline CMagicItemSystem& GetMagicItemSystem() {return m_MagicItemSystem;}	//法宝系统
2254 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2255 	CHeroSystem             m_heroSystem;       //英雄系统
2257 	CCrossSystem			m_CrossSystem;		//跨服子系统
2258 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2259 	CMagicItemSystem		m_MagicItemSystem;	//法宝子系统
2305 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2306 	//////////////////////////////////////////////////////////////////////////
2307 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2308 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2309 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2310 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2311 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2312 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2314 	// 非重配地图复活点
2315 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\entitysystem\ChatSystem.h 29 KB H 文件 2013/4/11 7:35:49 2018/8/3 20:29:44 2018/8/3 20:29:44 9
608 	// 测试session消息广播
609 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
610 	// 设置是否连接跨服
611 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
612 	
616 	//设置自己的转数
617 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
619 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
620 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
621 	// 广播所有逻辑服将雕像榜单数据发到session
733 	//节日活动设置
734 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
736 	//设置可以跨服攻沙的行会id
737 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
739 	//gm设置头衔
758 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
762 	//刷新跨服的配置
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
767 	//设置跨服的id
768 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
771 	//设置排行选项
807 	//设置是否保存任务到日志服务器
808 	bool GmSetSaveCoinLogFlag(char ** args, INT_PTR nArgsCount, char * sRetMsg);
810 	//清除报名跨服的列表
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
813 	//报名跨服沙城战
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
816 	//设置跨服占领行会
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
819 	//清除跨服的职位
820 	bool GmClearCrossGuildPos(char ** args, INT_PTR nArgsCount, char * sRetMsg);
822 	//清空魔珠背包

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 7:35:53 2018/8/3 20:29:44 2018/8/3 20:29:44 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
60 private:
57 	void OnSignUpCrossSbkOp();
60 private:
61 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
62 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 7:36:34 2018/8/3 20:29:44 2018/8/3 20:29:44 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\networkdata\LogicServerCmd.h 44 KB H 文件 2013/4/11 7:36:39 2018/8/3 20:29:44 2018/8/3 20:29:44 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1426 enum tagCrossSystemCode
1427 {
1428 	cEnterCrossScene		= 1,	//请求进入跨服地图
1429 	cGetCrossBossData		= 2,	//获取跨服boss的数据
1430 	cGetCrossGuildList		= 3,	//请求跨服攻城的行会列表
1431 	cSetCrossSbkPos			= 4,	//设置跨服沙巴克职位
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1433 	cSignUpCrossGuildSbk	= 6,	//报名跨服沙巴克战
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1436 	sSendCrossBossData		= 1,	//发送跨服boss的数据
1437 	sSendCrossWorldData		= 2,	//发送跨服天下第一给客户端
1438 	sSendCrossGuildList		= 3,	//返回跨服攻城的行会列表
1439 	sSendCrossGuildPos		= 4,	//返回跨服攻城的职位表
1440 	sSendCrossOpenState		= 6,	//是否开启跨服状态
1441 	sCrossBattlefieldSignup ,		///< 返回降魔战场报名
1442 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\ActorEventDef.h 11 KB H 文件 2013/4/11 17:22:23 2018/8/3 20:29:44 2018/8/3 20:29:44 4
80 	aeHundredServer = 67,			//百服活动
81 	aeTeamCaller = 68,				//队友召唤
82 	aeCrossOp = 69,					//跨服
83 	aeGodWealth = 70,				//财富闯关
84 	aeFastivalFire = 71,			//鞭炮
301 	cOnUpRideLevel = 1,				//坐骑进阶
302 };
304 //跨服相关操作
305 enum tagCrossOP
306 {
305 enum tagCrossOP
306 {
307 	cEnterCrossOp = 1,				//请求进入跨服场景
308 	cGetCrossWorldState = 2,		//请求跨服天下第一的状态
309 	ccopCrossBattlefieldSignup,		///< 降魔战场报名
310 	ccopCrossBattlefieldCallToCommonServer, ///< 降魔战场拉玩家到公共服

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\ActorExportFun.h 91 KB H 文件 2013/4/11 17:23:29 2018/8/3 20:29:44 2018/8/3 20:29:44 3
2253 	* Param void * packet: 数据包CActorPacket对象指针
2254 	* Param int nLevel: 广播的玩家最低限制等级
2255 	* Param bool bCsFlag: 是否在跨服服务器广播 true广播 false不广播
2256 	* @Return void:
2257 	* @Remark:
3394 	//击杀boss发送消息
3395 	void onSendKillBossToServer(void *pEntity, int nMonsterid,int nLev,int nNextBossId);
3397 	//跨服逻辑服发送天下第一的消息给普通逻辑服
3398 	void sendCrossWorldOneWinToAll(void *pEntity);
3398 	void sendCrossWorldOneWinToAll(void *pEntity);
3400 	//是否为跨服天下第一战神
3401 	bool bisCrossWorldFirst(void *pEntity);
3403 	//获取当前的关卡

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\ChallengeExport.h 4 KB H 文件 2013/4/11 17:24:00 2018/8/3 20:29:44 2018/8/3 20:29:44 1
28 	cstWuLinZhengBa = 1,	// 武林争霸赛擂台
29 	cstDungeon = 2,			// 地牢决斗擂台
30 	cstCrossServerWar = 3,	// 跨服战
31 };
33 namespace ChallengeFun

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\CScriptDataPacket.h 4 KB H 文件 2013/4/11 17:23:54 2018/8/3 20:29:44 2018/8/3 20:29:44 3
30 	void flush(void* pActorPacket);
32 	/*
33 	* Comments: 向跨服发送刚刚打包进去的数据
34 	* Param void * pack:数据包的指针
35 	* @Return void :
41 	DataPack.writeByte(pack, handle)
42 	...
43 	-- 向跨服发送包
44 	DataPack.flushCs(pack)
45 	...
106 		-- 调用广播接口发送包
107 		Camp.broadCastMsg(pack) 
108 		-- 向跨服发送包
109 		DataPack.flushCs(pack)
110 		...

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\LogDef.h 18 KB H 文件 2013/4/11 17:24:50 2018/8/3 20:29:44 2018/8/3 20:29:44 3
114 		clDropItemGroup = 96,				//丢物品到地上
115 		clChangeuseName = 97,				//玩家改名字
116 		clSignCrossSbk = 98,				//报名跨服沙城战
118 		//货币类型,数量, 来源的备注(比如skill 名字)
119 		clNpcGiveMoney=100,				//NPC给金钱
204 		clFinishPaTa = 184,					//用元宝立即完成战神史册任务
205 		clWCDonate = 185,					//世界贡献度
206 		clCrossAwardYb = 186,				//跨服天下第一奖励
207 		clCrossAwardSbk = 187,				//跨服奖励
208 		clFirstOwnSbkGuildLeader = 188,		//首个回收沙城后周五占领的行会首领奖励元宝
209 		clGodWealthAward = 189,				//财神闯关事件的奖励

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\RankingExport.h 6 KB H 文件 2013/4/11 17:25:22 2018/8/3 20:29:44 2018/8/3 20:29:44 1
231 	void removeId(void* pRank, int id);
233 	/*
234 	* Comments:更新跨服排行榜
235 	* Param const char* sName: 排行榜名称
236 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\SystemExportFun.h 31 KB H 文件 2013/4/11 17:25:44 2018/8/3 20:29:44 2018/8/3 20:29:44 11
195 	void broadcastTipmsg(char * sTipmsg,int nTipmsgType =ttTipmsgWindow);
197 	/*
198 	* Comments: 跨服发布全服系统提示
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
201 	* Param bool bCsFlag: 是否在跨服服务器发布提示 true发布 false不发布
202 	* @Return void:
203 	*/
788 	*/
789 	void updateVocNpcStatue(int nType);
791 	//发送到SS保存跨服排行
792 	void saveCsRank();
792 	void saveCsRank();
793 	//加载跨服排行数据
794 	void loadCsRank();
796 	//在m_CsRankList获取serverId
796 	//在m_CsRankList获取serverId
797 	int getServerIdByCsRank(int nActorId);
799 	//装载跨服玩家的离线消息
800 	void loadUserOfflineDataCs(int nServerId, int nActorId);
802 	//播报消息 nType 1 19点前 2 22点前
1027 	//获取商城物品价格数据
1028 	int getMerchandisePrice(unsigned int nGoodsId, int &btDealGoldType, int &nPrice, int &nQuality, int &nStrong, int &nBind);
1030 	//是否连接到跨服服务器
1031 	bool isStartCommonServer();
1033 	//是否为公共服
1033 	//是否为公共服
1034 	bool isCommonServer();
1036 	//初始化跨服沙巴克城墙
1037 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1037 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1039 	//跨服沙巴克开始
1040 	void startGuildCrossSbk();
1040 	void startGuildCrossSbk();
1042 	//跨服沙巴克结束
1043 	void endCrossSbkWar();
1045 	//获取角色最大等级
1066 	//保存完成某日活动
1067 	void finishTenDaysToFile(int nIndex);
1069 	//开始跨服boss战时初始化
1070 	void initCrossBossData();
1070 	void initCrossBossData();
1072 	//添加跨服boss数据
1073 	void addCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
1075 	//开始天下第一时的初始化

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\SystemParamDef.h 14 KB H 文件 2013/4/11 17:25:48 2018/8/3 20:29:44 2018/8/3 20:29:44 1
85 	smHideHeadMsg=10,       //是否隐藏头顶的信息，1表示隐藏头顶信息（包括名字，头衔，称号，帮派等），0表示不限制
86 	smShowRedWeaponEffect =11,  //是否显示神器的特效，1表示显示，0表示不显示
87 	smIsInCommonServer=12,     //是否在跨服的场景，1表示是，0表示否
88 	smSaveGameAddress = 13,		//是否保存了游戏网页
89 	smFlushStarToLv			= 14,		//刷星到指定星级

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\script\interface\TipmsgID.h 57 KB H 文件 2013/4/11 17:26:55 2018/8/3 20:29:44 2018/8/3 20:29:44 10
763 	tpTransmitPattern,				//"<速传/F%s:%d:%d:%s:%d>"
764 	tpServerIdPattern,				//"[%d区]"
765 	tpCSMsgFilter,					//跨服状态无法使用
767 	tpChannelSecret,				//私聊
768 	tpChannelNear,					//同屏
1234 	tpNoDropItemArea,						//此场不能丢弃物品
1236 	tpCrossSbkEndMsg,						//恭喜%d区<(c0xFF00FF00)%s>在<(n%s)>带领下成功占领沙城！本战区所向披靡！
1237 	tpIsCrossGuildCanNotChange,				//参加跨服沙城战的行会不能禅让会长
1238 	tpSceneCanNotCrossTransfer,             //当前场景无法跨服传送
1239 	
1240 	tpRedPackOffline,						//赠送失败，请在对方在线时赠送
1255 	tpWealthEventRecord2,					//财神降临！【%s】在财神闯关中顺利进入【%s】
1257 	tpChangeNameNotOpen,					//改名功能暂为开启，敬请期待！
1258 	tpCrossServerIsClose,                    //跨服没有开启
1259 	tpIsCrossServering,                    //正在进入跨服务器
1261 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1261 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1263 	tpNoGuildCanNotSignSbk,					//没有行会不能报名跨服沙城战
1264 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1265 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1264 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1265 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1266 	tpNoSingCrossItem,						//没有跨服攻城头像
1267 	tpSignCrossToGuildMem,					//贵行会已报名周四跨服沙城战，请做好充分准备攻下跨服沙城战!
1268 	tpIsSignCrossGuildSbk,					//贵行会已报名跨服沙城战
1269 	tpIsTheEndGodWealthTips,				//您已完成财神闯关的全部关卡，请明天继续从头进行闯关。
1271 	tpAwardTypeMagicBead,				//魔珠

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 7:34:06 2018/8/3 20:29:44 2018/8/3 20:29:44 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:09:56 2018/8/3 20:29:45 2018/8/3 20:29:45 4
130 	VOID CatchBroadcastMessage(CDataPacketReader &inPacket);
132 	/*
133 	* Comments: 保存跨服排行榜
134 	* Param CDataPacketReader & inPacket:
135 	* @Return VOID:
138 	VOID CatchSaveCsRank(CDataPacketReader &inPacket);
140 	/*
141 	* Comments: 获取跨服排行榜
142 	* Param CDataPacketReader & inPacket:
143 	* @Return VOID:
146 	VOID CatchLoadCsRank(CDataPacketReader &inPacket);
148 	/*
149 	* Comments: 清除跨服排行数据
150 	* Param CDataPacketReader & inPacket:
151 	* @Return VOID:
154 	VOID CatchClearCsRank(CDataPacketReader &inPacket);
155 	
157 	//设置跨服的数据库ID
158 	VOID SetCommonServerId(CDataPacketReader &inPacket);
159 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\SessionServer\SessionServer.h 6 KB H 文件 2013/4/11 5:09:57 2018/8/3 20:29:45 2018/8/3 20:29:45 1
109 	//踢掉在线的用户
110 	VOID PostKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
112 	//处理剔除跨服用户
113 	void ProcessKickCrossActor(const INT_PTR nSessionId, const int nServerIndex);
116 	//获取当前全局会话数量

H:\work\source\烈火战神\[src.cool]烈火战神\code\Dragon\server\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:09:55 2018/8/3 20:29:45 2018/8/3 20:29:45 3
225 #define SSIM_WITHDRAW_YUANBAO				20011	// 提取元宝
226 #define SSIM_CLOSE_SESSION_BY_ACCOUNTID     20012   //通过accountid关闭会话
228 #define SSIM_KICK_ONLINE_CROSSSERVER_ACTOR     20013   //踢掉在线的跨服用户
231 /*  SQL查询语句定义
232 *******************************************/
255 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
256 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
258 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
259 static LPCSTR szSaveCsRank = "insert into csrank(actorid,actorname,sex,job,serverindex,value) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
260 static LPCSTR szLoadCsRank = "call loadcsrank()";	//获取每个职业战力第一名单
262 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\common\InterServerComm.h 10 KB H 文件 2013/4/11 5:43:19 2018/8/3 20:29:59 2018/8/3 20:29:59 7
99 			// 保存战力排行榜
100 			cSaveBattlePowerTopRank = 15,
101 			// 获取跨服战力排行榜数据
102 			cLoadBattlePowerTopRank = 16,
103 			// 转发不同逻辑服之间消息 （数据头两个参数必须插入[int目标服务器ID, WORD处理类型]）
103 			// 转发不同逻辑服之间消息 （数据头两个参数必须插入[int目标服务器ID, WORD处理类型]）
104 			cDifferentLogicMessage = 17,
105 			// 清除跨服排行榜
106 			cClearCsRank = 18,
109 			//发送通信心跳包
135 			// 请求传送应答消息
136 			sReqestRransmitAck = 12,
137 			// 获取跨服战力排行榜数据
138 			sLoadBattlePowerTopRank = 13,
139 		};
138 			sLoadBattlePowerTopRank = 13,
139 		};
141 		/** 跨服消息定义 **/
142 		typedef enum eForwardLogicMsgCmd
143 		{
143 		{
144 			fcDefault = 0,	// 默认
145 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
146 			fcRankUpdate,	// 跨服Ranking更新
147 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
148 			fcScriptData,	// 脚本数据包
149 		};

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\common\gate\CustomGateManager.h 4 KB H 文件 2013/4/11 9:14:54 2018/8/3 20:29:59 2018/8/3 20:29:59 1
57 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
58 	 */
60 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
61 	VOID PostKickGateUserByGlobalUser(int nSessionId);
62 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\common\gate\CustomServerGate.h 12 KB H 文件 2013/4/11 9:14:56 2018/8/3 20:29:59 2018/8/3 20:29:59 1
284 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
285 	
286 	//会话踢人下线，在跨服处理的时候和103有点差别
287 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
289 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\LogicServer.h 7 KB H 文件 2013/4/11 5:43:03 2018/8/3 20:30:00 2018/8/3 20:30:00 1
178 	WORD					m_wCommonServerPort;
179 	INT_PTR                 m_nSpID;            //运营商的编号
180 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
181 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
183 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 9:10:56 2018/8/3 20:29:59 2018/8/3 20:29:59 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\base\TopTitleMgr.h 5 KB H 文件 2013/4/11 9:10:58 2018/8/3 20:29:59 2018/8/3 20:29:59 7
172 	void BroadToLoadBattlePowerTopRank();
173 	
174 	//加载跨服战力排行数据
175 	void LoadBattlePowerTopRank();
175 	void LoadBattlePowerTopRank();
177 	//清除跨服战力排行数据
178 	void ClearCsRank(INT_PTR nServerId);
178 	void ClearCsRank(INT_PTR nServerId);
180 	//装载跨服玩家的离线消息
181 	void LoadUserOfflineData(int nServerId, int nActorId);
181 	void LoadUserOfflineData(int nServerId, int nActorId);
183 	//返回跨服玩家的离线下消息
184 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
186 	//设置角色离线数据
194 	//设置NPC外观属性
195 	bool SetNpcStatue();
197 	//设置跨服战力排行第一玩家ID
198 	bool SetTopBPRankActor();
202 public:
209 	WORD								m_RefreshDay;	//保存排行榜刷新日
210 	int									m_nRefCount;		// 引用计数，用于不同排行榜之间更新进行计数
212 	CVector<BPTOPRANK>					m_topBPRank;	//跨服战力排行列表
213 	unsigned int						m_topBPActorId;	//跨服战力排行第一玩家ID
214 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 9:11:08 2018/8/3 20:29:59 2018/8/3 20:29:59 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\config\PropertyConfig.h 12 KB H 文件 2013/4/11 9:11:35 2018/8/3 20:30:00 2018/8/3 20:30:00 1
176 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
177 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
178 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
179 	int						nLogoutReserverTime;		// 
180 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\entity\Actor.h 53 KB H 文件 2013/4/11 9:11:50 2018/8/3 20:30:00 2018/8/3 20:30:00 7
1746 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
1747 	//////////////////////////////////////////////////////////////////////////
1748 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
1749 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
1750 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
1751 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
1752 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
1753 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
1755 	// 非重配地图复活点
1756 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\entitysystem\ChatSystem.h 20 KB H 文件 2013/4/11 9:12:05 2018/8/3 20:30:00 2018/8/3 20:30:00 2
548 	// 测试session消息广播
549 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
550 	// 设置是否连接跨服
551 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
552 	// 测试函数
552 	// 测试函数
553 	bool GmTestFunc(char **args, INT_PTR nArgsCount, char *sRetMsg);
554 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
555 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
556 	// 广播所有逻辑服将雕像榜单数据发到session

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\mgrserv\InterMgrServProto.h 6 KB H 文件 2013/4/11 9:12:40 2018/8/3 20:30:00 2018/8/3 20:30:00 6
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
36 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
37 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
38 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
39 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
41 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
43 //逻辑服务器发给后台的
58 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
59 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
60 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
61 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
62 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
71 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
72 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
73 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
74 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
75 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\networkdata\LogicServerCmd.h 30 KB H 文件 2013/4/11 9:12:46 2018/8/3 20:30:00 2018/8/3 20:30:00 1
187 	sBeatFly =50,         //被击飞
188 	sStartTransmit = 51, // 开始传送
189 	sOpenCommonServer= 52, // 下发跨服开启状态
190 };
194 //buff系统的消息

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 9:10:24 2018/8/3 20:30:00 2018/8/3 20:30:00 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:43:15 2018/8/3 20:30:00 2018/8/3 20:30:00 1
124 	VOID CatchDifferentLogicMessage(CDataPacketReader &inPacket);
126 	/*
127 	* Comments: 清除跨服排行数据
128 	* Param CDataPacketReader & inPacket:
129 	* @Return VOID:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server-out\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:43:14 2018/8/3 20:30:00 2018/8/3 20:30:00 2
262 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
263 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
264 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
265 static LPCSTR szSaveBattlePowerTopRank = "insert into csrank(actorid,actorname,sex,zy,job,serverindex,value,modelid,weaponappear) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
266 static LPCSTR szLoadBattlePowerTopRank = "call loadbattlepowerrank()";	//获取每个职业战力第一名单
268 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\common\InterServerComm.h 11 KB H 文件 2013/4/11 5:42:05 2018/8/3 20:30:24 2018/8/3 20:30:24 12
99 			// 保存战力排行榜
100 			cSaveBattlePowerTopRank = 15,
101 			// 获取跨服战力排行榜数据
102 			cLoadBattlePowerTopRank = 16,
103 			// 转发不同逻辑服之间消息 （数据头两个参数必须插入[int目标服务器ID, WORD处理类型]）
103 			// 转发不同逻辑服之间消息 （数据头两个参数必须插入[int目标服务器ID, WORD处理类型]）
104 			cDifferentLogicMessage = 17,
105 			// 清除跨服排行榜
106 			cClearCsRank = 18,
109 			//发送通信心跳包
135 			// 请求传送应答消息
136 			sReqestRransmitAck = 12,
137 			// 获取跨服战力排行榜数据
138 			sLoadBattlePowerTopRank = 13,
139 		};
138 			sLoadBattlePowerTopRank = 13,
139 		};
141 		/** 跨服消息定义 **/
142 		typedef enum eForwardLogicMsgCmd
143 		{
143 		{
144 			fcDefault = 0,	// 默认
145 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
146 			fcRankUpdate,	// 跨服Ranking更新
147 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
148 			fcScriptData,	// 脚本数据包
148 			fcScriptData,	// 脚本数据包
149 			fcEnterCs,	//下发各个逻辑服进入跨服标志
150 			fcActivityId,	//下发各个逻辑服活动ID
151 		};
161 			cdBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
162 			cdBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
164 			cdGetEnterCommonServer,	//请求跨服服务器获取进入跨服标志
165 			sdGetEnterCommonServer,	//跨服服务器返回请求逻辑服进入跨服标志
166 		};
168 		/** 名称服务器操作返回值定义 **/

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\common\gate\CustomGateManager.h 4 KB H 文件 2013/4/11 9:08:45 2018/8/3 20:30:24 2018/8/3 20:30:24 1
57 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
58 	 */
60 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
61 	VOID PostKickGateUserByGlobalUser(int nSessionId);
62 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\common\gate\CustomServerGate.h 12 KB H 文件 2013/4/11 9:08:47 2018/8/3 20:30:24 2018/8/3 20:30:24 1
284 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
285 	
286 	//会话踢人下线，在跨服处理的时候和103有点差别
287 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
289 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\LogicServer.h 8 KB H 文件 2013/4/11 5:41:10 2018/8/3 20:30:29 2018/8/3 20:30:29 6
124 	inline void GMStopServer() { m_boStopServ = FALSE; }//GM强制关闭服务器
125 	inline void GMCancelStopServer() {m_boStopServ = TRUE; }//取消关机
127 	//跨服开启
128 	void SetStartCommonServer(bool flag);
129 	inline bool IsStartCommonServer() const { return m_boStartCommonServer; }
128 	void SetStartCommonServer(bool flag);
129 	inline bool IsStartCommonServer() const { return m_boStartCommonServer; }
130 	//跨服进入 
131 	inline bool SetEnterCommonServer(bool flag) {return m_boEnterCommonServer = flag ? true : false;}
132 	
132 	
133 	inline bool IsEnterCommonServer() const { return m_boEnterCommonServer; }
135 	//跨服进入 
136 	inline INT_PTR SetCommonServerActivityId(INT_PTR nId) {return m_nCommonServerActivityID = nId;}
137 	inline INT_PTR GetCommonServerActivityId() const {return m_nCommonServerActivityID;}
192 	WORD					m_wCommonServerPort;
193 	INT_PTR                 m_nSpID;            //运营商的编号
194 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
195 	bool					m_boEnterCommonServer;	//是否可以进入到跨服
196 	INT_PTR					m_nCommonServerActivityID;	//跨服活动ID
197 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
199 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 8:46:35 2018/8/3 20:30:28 2018/8/3 20:30:28 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\base\TopTitleMgr.h 5 KB H 文件 2013/4/11 8:46:39 2018/8/3 20:30:28 2018/8/3 20:30:28 7
172 	void BroadToLoadBattlePowerTopRank();
173 	
174 	//加载跨服战力排行数据
175 	void LoadBattlePowerTopRank();
175 	void LoadBattlePowerTopRank();
177 	//清除跨服战力排行数据
178 	void ClearCsRank(INT_PTR nServerId);
178 	void ClearCsRank(INT_PTR nServerId);
180 	//装载跨服玩家的离线消息
181 	void LoadUserOfflineData(int nServerId, int nActorId);
181 	void LoadUserOfflineData(int nServerId, int nActorId);
183 	//返回跨服玩家的离线下消息
184 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
186 	//设置角色离线数据
194 	//设置NPC外观属性
195 	bool SetNpcStatue();
197 	//设置跨服战力排行第一玩家ID
198 	bool SetTopBPRankActor();
202 public:
209 	WORD								m_RefreshDay;	//保存排行榜刷新日
210 	int									m_nRefCount;		// 引用计数，用于不同排行榜之间更新进行计数
212 	CVector<BPTOPRANK>					m_topBPRank;	//跨服战力排行列表
213 	unsigned int						m_topBPActorId;	//跨服战力排行第一玩家ID
214 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 8:46:56 2018/8/3 20:30:28 2018/8/3 20:30:28 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\config\PropertyConfig.h 12 KB H 文件 2013/4/11 8:47:18 2018/8/3 20:30:28 2018/8/3 20:30:28 2
181 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
182 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
183 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
184 	int						nLogoutReserverTime;		// 玩家在跨服下线后保持时间（秒为单位），超过这个时间下次再上线就回到原始服务器 
185 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验
186 	float					fBattleJumpPowerConsRate;	//战斗状态跳跃消耗轻功百分比 jumpConsume*fBattleJumpPowerConsRate

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\entity\Actor.h 55 KB H 文件 2013/4/11 8:47:30 2018/8/3 20:30:28 2018/8/3 20:30:28 7
1801 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
1802 	//////////////////////////////////////////////////////////////////////////
1803 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
1804 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
1805 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
1806 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
1807 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
1808 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
1810 	// 非重配地图复活点
1811 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\entitysystem\ChatSystem.h 20 KB H 文件 2013/4/11 8:47:44 2018/8/3 20:30:28 2018/8/3 20:30:28 3
551 	// 测试session消息广播
552 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
553 	// 设置是否连接跨服
554 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);
554 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);
555 	// 设置能进入跨服
556 	bool GmSetEnterCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);
557 	// 测试函数
557 	// 测试函数
558 	bool GmTestFunc(char **args, INT_PTR nArgsCount, char *sRetMsg);
559 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
560 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
561 	// 广播所有逻辑服将雕像榜单数据发到session

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\mgrserv\InterMgrServProto.h 6 KB H 文件 2013/4/11 8:48:15 2018/8/3 20:30:29 2018/8/3 20:30:29 6
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
36 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
37 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
38 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
39 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
41 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
43 //逻辑服务器发给后台的
58 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
59 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
60 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
61 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
62 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
71 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
72 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
73 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
74 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
75 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\networkdata\LogicServerCmd.h 30 KB H 文件 2013/4/11 8:48:20 2018/8/3 20:30:29 2018/8/3 20:30:29 1
187 	sBeatFly =50,         //被击飞
188 	sStartTransmit = 51, // 开始传送
189 	sOpenCommonServer= 52, // 下发跨服开启状态
190 };
194 //buff系统的消息

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 8:46:04 2018/8/3 20:30:29 2018/8/3 20:30:29 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\SessionServer\SessionClient.h 5 KB H 文件 2013/4/11 5:41:23 2018/8/3 20:30:29 2018/8/3 20:30:29 1
124 	VOID CatchDifferentLogicMessage(CDataPacketReader &inPacket);
126 	/*
127 	* Comments: 清除跨服排行数据
128 	* Param CDataPacketReader & inPacket:
129 	* @Return VOID:

H:\work\source\烈火战神\[src.cool]烈火战神\code\JianXiaoJiangHu\server\SessionServer\SSProto.h 9 KB H 文件 2013/4/11 5:41:22 2018/8/3 20:30:29 2018/8/3 20:30:29 2
262 static LPCSTR szGetSASeriesInfo = "call getvaseriesinfo(%I64u)"; // 查询增值服务器序列号信息
263 static LPCSTR szDeleteSASeries = "call deletevaseries(%I64u, %d, %d, \"%s\")"; // 删除增值序列号
264 static LPCSTR szDeleteCSRank = "call deletecsrank(%d)";	//删除跨服排行[客户端服务器ID]
265 static LPCSTR szSaveBattlePowerTopRank = "insert into csrank(actorid,actorname,sex,zy,job,serverindex,value,modelid,weaponappear) values";	//更新跨服战力排行[角色ID,服务器ID,职业,战力]
266 static LPCSTR szLoadBattlePowerTopRank = "call loadbattlepowerrank()";	//获取每个职业战力第一名单
268 #endif

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\common\def\GuildDb.h 6 KB H 文件 2013/4/11 9:30:02 2018/8/3 20:30:45 2018/8/3 20:30:45 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\common\def\InterServerComm.h 14 KB H 文件 2013/4/11 9:30:03 2018/8/3 20:30:45 2018/8/3 20:30:45 17
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 			fcSendCrossBattlefieldSignupInfoToCommonServer, ///< 向跨服发送降魔战场的报名信息
183 			fcBroadCrossBattlefieldSignupInfo,	///< 降魔战场广播报名信息
184 		};
194 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
195 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
196 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
197 		};
199 		/** 名称服务器操作返回值定义 **/
337 			dcLoadPeriodRideData,		//加载时效坐骑数据
338 			dcSavePeriodRideData,		//保存时效坐骑数据
340 			dcReloadCrossConfig,		//重新加载跨服配置
342 			dcLoadGodWealthData,		//加载财富闯关的事件
343 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\common\include\CustomGateManager.h 4 KB H 文件 2013/4/11 9:30:06 2018/8/3 20:30:45 2018/8/3 20:30:45 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\common\include\CustomServerGate.h 12 KB H 文件 2013/4/11 9:30:09 2018/8/3 20:30:45 2018/8/3 20:30:45 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 6:02:40 2018/8/3 20:30:45 2018/8/3 20:30:45 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 6:02:56 2018/8/3 20:30:46 2018/8/3 20:30:46 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
70 	enMagicItemSystemId = 48,		//法宝子系统

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\LogicEngine.h 16 KB H 文件 2013/4/11 6:02:57 2018/8/3 20:30:46 2018/8/3 20:30:46 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
400 	CDmkjMgr				m_DmkjMgr;
402 	CCorpsComponet			m_CorpsMgr;			//战队管理器
404 	CCrossComponet			m_CrossMgr;			//跨服管理器
406 	CTenDaysActivityComponent m_TenActivityMgr;
408 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 6:02:58 2018/8/3 20:30:46 2018/8/3 20:30:46 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 6:03:01 2018/8/3 20:30:47 2018/8/3 20:30:47 1
403 #include "base/CorpsMgr.h"			//战队管理器
404 #include "base/DmkjMgr.h"			//盗梦空间管理器
405 #include "base/CrossMgr.h"			//跨服管理器
408 //conponent
409 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\base\CrossMgr.h 5 KB H 文件 2013/4/11 9:24:04 2018/8/3 20:30:46 2018/8/3 20:30:46 9
3 #include <vector>
4 //#include "../misc/AllocForSTL.hpp"
6 //跨服管理器
8 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
9 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
23 #pragma region CrossBoss
24 public:
25 	//开始跨服boss战时初始化
26 	void InitCrossBossData();
26 	void InitCrossBossData();
28 	//添加跨服boss数据
29 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
31 	//接受公共服来的boss死亡消息
31 	//接受公共服来的boss死亡消息
32 	void OnCommonCrossBossDie(CDataPacketReader &reader);
34 	//发送跨服boss的数据
35 	void SendCrossBossToClient(CActor* pActor);
36 private:
55 		}
56 	}TAGCROSSBOSSDATA;
58 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
59 #pragma endregion CrossBoss
61 #pragma region CrossWorldFirst
72 	//发送天下第一的数据给客户端（公共服）
73 	void SendCrossWorldToClientOp(CActor* pActor);
75 	//初始化跨服天下第一的雕像
76 	void ResetWorldFirstNpc();
77 private:
138 	/// 接收session服发过来的同步玩家报名信息
139 	void ReceiveCrossBattlefieldSignupInfoFromLogicServer(CDataPacketReader& reader);
140 	/// 跨服通知同步报名信息
141 	void ReceiveCrossBattlefieldSignupInfoFromCommonServer(CDataPacketReader& reader);
142 	/// 广播报名信息 bNewActivity 新活动拉人
144 	/// 获取当前已报名人数
145 	int GetCurrentCrossBattlefieldPlayerNum();
146 	///// 忘记登录跨服
147 	//void OnLoginCrossBattlefield(CActor* pActor);
148 	
153 	//*/
154 public:
155 	//发送是否开启跨服的状态
156 	void SendCrossStartState(int bState);
157 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 9:24:13 2018/8/3 20:30:46 2018/8/3 20:30:46 18
367 	//后台删除行会
368 	void LogSenderDelGuild(char* sGuildName, int nRecog);
370 	//更新可以攻城跨服攻城的沙巴克行会
371 	void UpdateCrossSbkGuild();
373 	//发送攻沙行会给其他逻辑服
379 	//收到其他服发来的职位
380 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
382 	//跨服来的消息
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
383 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
385 	//跨服沙巴克开始
386 	void StartGuildCrossSbk();
386 	void StartGuildCrossSbk();
388 	//初始化跨服沙巴克城墙
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
389 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
391 	//设置跨服城墙被攻击状态
392 	void SetCrossWallState(bool bState);
392 	void SetCrossWallState(bool bState);
394 	//设置跨服城墙的是否死亡的状态状态
395 	void SetCrossSbkWallState(int nIndex,int nState)
396 	{
398 			m_CrossWallState[nIndex].nState = nState;
399 	}
401 	//跨服沙巴克结束
402 	void EndCrossSbkWar();
402 	void EndCrossSbkWar();
404 	//判断跨服是否只有一个行会占领
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
405 	void OnlyOneGuildInCrossSbk(CScene* pScene);
407 	//判断是否可参加跨服沙巴克的行会
408 	bool IsCanCrossSbkGuild(int nGuildId);
408 	bool IsCanCrossSbkGuild(int nGuildId);
410 	//发送跨服结果给普通逻辑服
411 	void SendCrossSbkResult();
411 	void SendCrossSbkResult();
413 	//获取跨服沙巴克的行会的信息
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
414 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
416 	//跨服结束发送跨服城主的信息
417 	void OnSendCrossCityOwn(int nGuildId);
417 	void OnSendCrossCityOwn(int nGuildId);
419 	//收到跨服职位
420 	void OnRevCrossCityPos(CDataPacketReader &reader);
422 	//公共服发送占领沙巴克的行会信息
434 	//根据行会id获取行会名称
435 	char* GetGuildNameInCross(int nGuildId);
437 	//设置跨服占领行会
438 	void OnSetkfOwnGuildOp(char* sGuildName);
439 private:
483 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
485 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
487 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
488 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
490 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
491 private:
492 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 9:24:20 2018/8/3 20:30:46 2018/8/3 20:30:46 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 9:24:26 2018/8/3 20:30:46 2018/8/3 20:30:46 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
154 		stNormal = 0,
155 		stRsCastellan = 1,	//本服沙巴克城主雕像
156 		stCsCastellan = 2,	//跨服沙巴克城主雕像
157 		stRsVocation = 3,	//本服职业雕像
157 		stRsVocation = 3,	//本服职业雕像
158 		stCsVocation = 4,	//跨服职业雕像
159 	};
160 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
183 	//发送到SS保存战力排行
184 	void SaveCsRank();
185 	//加载跨服战力排行数据
186 	void LoadCsRank();
186 	void LoadCsRank();
187 	//清除跨服战力排行数据
188 	void ClearCsRank(INT_PTR nServerId);
190 	//广播所有逻辑服将雕像榜单数据发到session
192 	//广播所有逻辑服重新取下榜单
193 	void BroadLogicToLoadCsRank();
195 	//装载跨服玩家的离线消息
196 	void LoadUserOfflineData(int nServerId, int nActorId);
196 	void LoadUserOfflineData(int nServerId, int nActorId);
198 	//返回跨服玩家的离线下消息
199 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
201 	//设置角色离线数据
221 	
222 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
223 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
224 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 9:24:36 2018/8/3 20:30:46 2018/8/3 20:30:46 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 9:25:03 2018/8/3 20:30:46 2018/8/3 20:30:46 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	int nGuildCoinGxRate;			//捐献1000行会获得1贡献

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 9:25:11 2018/8/3 20:30:46 2018/8/3 20:30:46 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\config\PropertyConfig.h 19 KB H 文件 2013/4/11 9:25:19 2018/8/3 20:30:46 2018/8/3 20:30:46 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 9:25:38 2018/8/3 20:30:46 2018/8/3 20:30:46 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
225 	inline CMagicItemSystem& GetMagicItemSystem() {return m_MagicItemSystem;}	//法宝系统
2254 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2255 	CHeroSystem             m_heroSystem;       //英雄系统
2257 	CCrossSystem			m_CrossSystem;		//跨服子系统
2258 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2259 	CMagicItemSystem		m_MagicItemSystem;	//法宝子系统
2305 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2306 	//////////////////////////////////////////////////////////////////////////
2307 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2308 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2309 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2310 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2311 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2312 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2314 	// 非重配地图复活点
2315 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\entitysystem\ChatSystem.h 29 KB H 文件 2013/4/11 9:26:06 2018/8/3 20:30:46 2018/8/3 20:30:46 9
608 	// 测试session消息广播
609 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
610 	// 设置是否连接跨服
611 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
612 	
616 	//设置自己的转数
617 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
619 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
620 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
621 	// 广播所有逻辑服将雕像榜单数据发到session
733 	//节日活动设置
734 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
736 	//设置可以跨服攻沙的行会id
737 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
739 	//gm设置头衔
758 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
762 	//刷新跨服的配置
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
767 	//设置跨服的id
768 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
771 	//设置排行选项
807 	//设置是否保存任务到日志服务器
808 	bool GmSetSaveCoinLogFlag(char ** args, INT_PTR nArgsCount, char * sRetMsg);
810 	//清除报名跨服的列表
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
811 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
813 	//报名跨服沙城战
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
814 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
816 	//设置跨服占领行会
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
817 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
819 	//清除跨服的职位
820 	bool GmClearCrossGuildPos(char ** args, INT_PTR nArgsCount, char * sRetMsg);
822 	//清空魔珠背包

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 9:26:12 2018/8/3 20:30:46 2018/8/3 20:30:46 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
60 private:
57 	void OnSignUpCrossSbkOp();
60 private:
61 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
62 };

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 9:27:24 2018/8/3 20:30:46 2018/8/3 20:30:46 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\networkdata\LogicServerCmd.h 44 KB H 文件 2013/4/11 9:27:33 2018/8/3 20:30:46 2018/8/3 20:30:46 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1426 enum tagCrossSystemCode
1427 {
1428 	cEnterCrossScene		= 1,	//请求进入跨服地图
1429 	cGetCrossBossData		= 2,	//获取跨服boss的数据
1430 	cGetCrossGuildList		= 3,	//请求跨服攻城的行会列表
1431 	cSetCrossSbkPos			= 4,	//设置跨服沙巴克职位
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1432 	cReturnToRawServer		= 5,	//返回到原来的服务器
1433 	cSignUpCrossGuildSbk	= 6,	//报名跨服沙巴克战
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1434 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1436 	sSendCrossBossData		= 1,	//发送跨服boss的数据
1437 	sSendCrossWorldData		= 2,	//发送跨服天下第一给客户端
1438 	sSendCrossGuildList		= 3,	//返回跨服攻城的行会列表
1439 	sSendCrossGuildPos		= 4,	//返回跨服攻城的职位表
1440 	sSendCrossOpenState		= 6,	//是否开启跨服状态
1441 	sCrossBattlefieldSignup ,		///< 返回降魔战场报名
1442 	

H:\work\source\烈火战神\[src.cool]烈火战神\code\Phoenix\server\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 9:23:38 2018/8/3 20:30:47 2018/8/3 20:30:47 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\common\def\GuildDb.h 6 KB H 文件 2013/4/11 2:29:44 2018/8/3 20:30:57 2018/8/3 20:30:57 2
13 static const LPCTSTR g_szGuildSbkCmd = _T("GuildSbkCmd");
14 static const LPCTSTR g_szGuildSbkCityCmdFile = _T("GuildSbkCmd.txt");
16 static const LPCTSTR g_szGuildCrossList = _T("GuildCrossList");			//跨服的行会列表
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
17 static const LPCTSTR g_szGuildCrossListFile = _T("GuildCrossList.txt");
19 static const LPCTSTR g_szGuildCrossPos = _T("GuildCrossPos");			//跨服的职位表
20 static const LPCTSTR g_szGuildCrossPosFile = _T("GuildCrossPos.txt");
22 static const LPCTSTR g_szGuildCrossSbkOwn = _T("GuildCrossSbkOwn");

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\common\def\InterServerComm.h 13 KB H 文件 2013/4/11 2:29:45 2018/8/3 20:30:58 2018/8/3 20:30:58 17
104 			// 保存战力排行榜
105 			cSaveCsRank = 16,
106 			// 获取跨服战力排行榜数据
107 			cLoadCsRank = 17,
107 			cLoadCsRank = 17,
108 			// 清除跨服排行榜
109 			cClearCsRank = 18,
111 			//逻辑服发来的，准备检测用户名和密码
146 			// 请求传送应答消息
147 			sReqestRransmitAck = 12,
149 			// 获取跨服战力排行榜数据
150 			sLoadCsRank = 13,
151 			
161 			// 转发战区的消息
162 			sRecvGroupMessage = 17,
164 			//踢掉在线的跨服用户
165 			sKickCrossServerUser=18,
166 		};
165 			sKickCrossServerUser=18,
166 		};
168 		/** 跨服消息定义 **/
169 		typedef enum eForwardLogicMsgCmd
170 		{
170 		{
171 			fcDefault = 0,	// 默认
172 			fcBroadcastTipmsg,	// 跨服发布全服系统提示
173 			fcRankUpdate,	// 跨服Ranking更新
174 			fcWorldBroadCastMsg,	// 跨服世界广播消息包
175 			fcScriptData,	// 脚本数据包
175 			fcScriptData,	// 脚本数据包
176 			fcCrossBossDie,		//跨服boss被杀广播
177 			fcCrossWorldFirstOne,		//跨服天下第一战神
178 			fcCrossASbkOwnMsg,			//跨服沙巴克占领消息
179 			fcCrossPosToServer,			//发送跨服沙巴克职位给各服务器
180 			fcBroadToCrossSbkGuild,		//广播可以攻沙的跨服的行会
181 			fcBroadSetCrossSbkPos,		//广播设置跨服沙巴克职位
182 			fcSendCrossBattlefieldSignupInfoToCommonServer, ///< 向跨服发送降魔战场的报名信息
183 			fcBroadCrossBattlefieldSignupInfo,	///< 降魔战场广播报名信息
184 		};
194 			lcBroadToSaveCsRank,	//广播所有逻辑服将雕像榜单数据发到session
195 			lcBroadToLoadCsRank,	//广播所有逻辑服重新取下榜单
196 			lcSendGuildToForwardLogic,		//发送行会列表到跨服服务器
197 		};
199 		/** 名称服务器操作返回值定义 **/
335 			dcLoadPeriodRideData,		//加载时效坐骑数据
336 			dcSavePeriodRideData,		//保存时效坐骑数据
338 			dcReloadCrossConfig,		//重新加载跨服配置
340 			dcLoadGodWealthData,		//加载财富闯关的事件
341 			dcSaveGodWealthData,		//保存财富闯关事件

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\common\include\CustomGateManager.h 4 KB H 文件 2013/4/11 2:29:47 2018/8/3 20:30:58 2018/8/3 20:30:58 1
65 	 * 当网关处管理器理内部消息并检查到对应会话ID的用户存在的时候，会调用网关管理器自身的的OnResultGateUserExists函数
66 	 */
68 	//根据账号的ID把一个玩家踢下线，和关闭在跨服的处理有点差别
69 	VOID PostKickGateUserByGlobalUser(int nSessionId);
70 	

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\common\include\CustomServerGate.h 12 KB H 文件 2013/4/11 2:29:48 2018/8/3 20:30:58 2018/8/3 20:30:58 1
294 	static const UINT SGIM_CLOSE_USER_SOCKET_GSID	= 103;
295 	
296 	//会话踢人下线，在跨服处理的时候和103有点差别
297 	static const UINT SGIM_KICK_USER_SOCKET_GSID	= 104;
299 };

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\DBServer\DBConfig.h 1 KB H 文件 2013/4/11 2:21:18 2018/8/3 20:30:58 2018/8/3 20:30:58 1
27 	*/
28 	bool ReadConfig();
30 	//装置跨服配置文件
31 	bool LoadCrossServerConfig();
34 public:

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\LogicDef.h 6 KB H 文件 2013/4/11 2:21:37 2018/8/3 20:31:00 2018/8/3 20:31:00 1
66 	enHeroSystemId =44,             //英雄子系统
67 	enCarrierSystemId = 45,			//载具子系统
68 	enCrossServerSystem = 46,		//跨服子系统
69 	enGodWealthSystemID = 47,		//财神闯关子系统
70 	enMagicItemSystemId = 48,		//法宝子系统

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\LogicEngine.h 15 KB H 文件 2013/4/11 2:21:38 2018/8/3 20:31:00 2018/8/3 20:31:00 2
243 	//返回战队管理器
244 	inline CCorpsComponet& GetCorpsManager() {return m_CorpsMgr;}
246 	//返回跨服管理器
247 	inline CCrossComponet& GetCrossManager() {return m_CrossMgr;}
249 	//设置服务器多少秒后自动停机维护，单位是秒
383 	CDmkjMgr				m_DmkjMgr;
385 	CCorpsComponet			m_CorpsMgr;			//战队管理器
387 	CCrossComponet			m_CrossMgr;			//跨服管理器
389 	CTenDaysActivityComponent m_TenActivityMgr;
391 	CCombatRankComponent    m_CombatRankMgr;

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\LogicServer.h 10 KB H 文件 2013/4/11 2:21:39 2018/8/3 20:31:00 2018/8/3 20:31:00 5
75 	*/
76 	inline int GetCommonServerId() const { return m_nCommonServerId; }
78 	//获取登陆到跨服的最小端口
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
79 	inline int GetCommonMinPort() {return m_minCommonPort;}
81 	//获取登陆到跨服的最大端口
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
82 	inline int GetCommonMaxPort() {return m_maxCommonPort;}
84 	//获取登陆到跨服的随机端口
85 	int GetCommonServerRandPort();
87 	/*
202 	void SetGmCreateIndex(int nIndex) {m_CreateIndex = nIndex;}
204 	int GetGmCreateIndex() {return m_CreateIndex;}
206 	//后台发送重新加载跨服配置
207 	void ReloadCrossConfig();
209 	//设置是否开起改名功能
276 	
277 	INT_PTR                 m_nSpID;            //运营商的编号
278 	bool					m_boStartCommonServer;	//是否连接到跨服服务器
279 	CMiniDateTime			m_serverCombineTime;	// 服务器合区时间
281 	int						m_CreateIndex;			//gm设置的创号的入口id

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\StdAfx.h 13 KB H 文件 2013/4/11 2:21:42 2018/8/3 20:31:00 2018/8/3 20:31:00 1
398 #include "base/CorpsMgr.h"			//战队管理器
399 #include "base/DmkjMgr.h"			//盗梦空间管理器
400 #include "base/CrossMgr.h"			//跨服管理器
403 //conponent
404 #include "scene/SceneDef.h"

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\base\CrossMgr.h 4 KB H 文件 2013/4/11 2:27:08 2018/8/3 20:30:59 2018/8/3 20:30:59 9
1 #pragma once
2 //跨服管理器
4 static const LPCTSTR g_szCrossWorldFirst = _T("CrossWorldOne");
5 static const LPCTSTR g_szCrossWorldFirstFile = _T("CrossWorldOne.txt");
19 #pragma region CrossBoss
20 public:
21 	//开始跨服boss战时初始化
22 	void InitCrossBossData();
22 	void InitCrossBossData();
24 	//添加跨服boss数据
25 	void AddCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
27 	//接受公共服来的boss死亡消息
27 	//接受公共服来的boss死亡消息
28 	void OnCommonCrossBossDie(CDataPacketReader &reader);
30 	//发送跨服boss的数据
31 	void SendCrossBossToClient(CActor* pActor);
32 private:
51 		}
52 	}TAGCROSSBOSSDATA;
54 	CVector<TAGCROSSBOSSDATA>  m_CrossBossData;				//跨服boss的数据
55 #pragma endregion CrossBoss
57 #pragma region CrossWorldFirst
68 	//发送天下第一的数据给客户端（公共服）
69 	void SendCrossWorldToClientOp(CActor* pActor);
71 	//初始化跨服天下第一的雕像
72 	void ResetWorldFirstNpc();
73 private:
122 	/// 接收session服发过来的同步玩家报名信息
123 	void ReceiveCrossBattlefieldSignupInfoFromLogicServer(CDataPacketReader& reader);
124 	/// 跨服通知同步报名信息
125 	void ReceiveCrossBattlefieldSignupInfoFromCommonServer(CDataPacketReader& reader);
126 	/// 广播报名信息
128 	/// 获取当前已报名人数
129 	int GetCurrentCrossBattlefieldPlayerNum();
130 	///// 忘记登录跨服
131 	//void OnLoginCrossBattlefield(CActor* pActor);
132 protected:
135 #pragma endregion CrossBattlefield
137 public:
138 	//发送是否开启跨服的状态
139 	void SendCrossStartState(int bState);
140 };

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\base\GuildManger.h 12 KB H 文件 2013/4/11 2:27:17 2018/8/3 20:30:59 2018/8/3 20:30:59 18
363 	//后台删除行会
364 	void LogSenderDelGuild(char* sGuildName, int nRecog);
366 	//更新可以攻城跨服攻城的沙巴克行会
367 	void UpdateCrossSbkGuild();
369 	//发送攻沙行会给其他逻辑服
375 	//收到其他服发来的职位
376 	void OnRetOtherServerSbkPos(CDataPacketReader &reader,int nOtherServerId);
378 	//跨服来的消息
379 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
379 	void OtherLogicServerRetData(int nCmd, int nOtherServerId, CDataPacketReader &reader);
381 	//跨服沙巴克开始
382 	void StartGuildCrossSbk();
382 	void StartGuildCrossSbk();
384 	//初始化跨服沙巴克城墙
385 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
385 	void InitCrossSbkWall(int nIndex,int nState,int nMp,EntityHandle nHandle);
387 	//设置跨服城墙被攻击状态
388 	void SetCrossWallState(bool bState);
388 	void SetCrossWallState(bool bState);
390 	//设置跨服城墙的是否死亡的状态状态
391 	void SetCrossSbkWallState(int nIndex,int nState)
392 	{
394 			m_CrossWallState[nIndex].nState = nState;
395 	}
397 	//跨服沙巴克结束
398 	void EndCrossSbkWar();
398 	void EndCrossSbkWar();
400 	//判断跨服是否只有一个行会占领
401 	void OnlyOneGuildInCrossSbk(CScene* pScene);
401 	void OnlyOneGuildInCrossSbk(CScene* pScene);
403 	//判断是否可参加跨服沙巴克的行会
404 	bool IsCanCrossSbkGuild(int nGuildId);
404 	bool IsCanCrossSbkGuild(int nGuildId);
406 	//发送跨服结果给普通逻辑服
407 	void SendCrossSbkResult();
407 	void SendCrossSbkResult();
409 	//获取跨服沙巴克的行会的信息
410 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
410 	void OnRevCrossSbkOwn(CDataPacketReader &reader);
412 	//跨服结束发送跨服城主的信息
413 	void OnSendCrossCityOwn(int nGuildId);
413 	void OnSendCrossCityOwn(int nGuildId);
415 	//收到跨服职位
416 	void OnRevCrossCityPos(CDataPacketReader &reader);
418 	//公共服发送占领沙巴克的行会信息
430 	//根据行会id获取行会名称
431 	char* GetGuildNameInCross(int nGuildId);
433 	//设置跨服占领行会
434 	void OnSetkfOwnGuildOp(char* sGuildName);
435 private:
479 	int								m_fDefendSbkGuild;			//首个连续占领沙巴克行会id
481 	int								m_nFirstAwardGuildId;		//沙巴克回收后每周五占领奖励行会id
483 	int								m_CrossSbkGuildId;			//可以参加跨服沙巴克的行会id
484 	int								m_CrossSbkOwnGuild;			//跨服占领的沙巴克行会id
486 	CVector<SBKGUARDWALLDATA>		m_CrossWallState;			//跨服城墙状态
487 private:
488 	CVector<UserOperData>			m_UserOperList;

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\base\RankingMgr.h 2 KB H 文件 2013/4/11 2:27:21 2018/8/3 20:30:59 2018/8/3 20:30:59 2
39 	void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\base\TopTitleMgr.h 6 KB H 文件 2013/4/11 2:27:26 2018/8/3 20:30:59 2018/8/3 20:30:59 8
22 	}
23 }TOPTITLERANKINFO,*PTOPTITLERANKINFO;
25 //跨服排行榜结构
26 typedef struct tagRankData
27 {
154 		stNormal = 0,
155 		stRsCastellan = 1,	//本服沙巴克城主雕像
156 		stCsCastellan = 2,	//跨服沙巴克城主雕像
157 		stRsVocation = 3,	//本服职业雕像
157 		stRsVocation = 3,	//本服职业雕像
158 		stCsVocation = 4,	//跨服职业雕像
159 	};
160 	* Param INT_PTR nActorId: 设置actorid actorid==0空雕像
183 	//发送到SS保存战力排行
184 	void SaveCsRank();
185 	//加载跨服战力排行数据
186 	void LoadCsRank();
186 	void LoadCsRank();
187 	//清除跨服战力排行数据
188 	void ClearCsRank(INT_PTR nServerId);
190 	//广播所有逻辑服将雕像榜单数据发到session
192 	//广播所有逻辑服重新取下榜单
193 	void BroadLogicToLoadCsRank();
195 	//装载跨服玩家的离线消息
196 	void LoadUserOfflineData(int nServerId, int nActorId);
196 	void LoadUserOfflineData(int nServerId, int nActorId);
198 	//返回跨服玩家的离线下消息
199 	void ReturnUserOfflineData(int nDestServerId, int nActorId);
201 	//设置角色离线数据
221 	
222 	CVector<RANKDATA>					m_RawRankList;						// 本服职业战力排行
223 	CVector<RANKDATA>					m_CsRankList;						// 跨服职业战力排行
224 };

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\commonserver\CommonServer.h 3 KB H 文件 2013/4/11 2:27:34 2018/8/3 20:31:00 2018/8/3 20:31:00 1
2 #define COMMON_SERVER_H_
4 /*
5 	功能：此类是跨服服务器用于连接普通的逻辑服务器的连接Server类。公共逻辑服务器在启动引擎的时候
6 	创建此对象，并且在指定的地址上监听来自普通逻辑服务器的连接。建立和普通服务器的连接之后，就由
7 	CCommonServerClient类负责和客户端的连接处理。CCommonServer只是负责连接的建立和管理，不

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\config\GuildProvider.h 4 KB H 文件 2013/4/11 2:27:46 2018/8/3 20:31:00 2018/8/3 20:31:00 2
87 	int nHelpNeedCoin;				//求救需要的行会资金
88 	int nSbkSceenId;				//皇宫场景的id
90 	int nCrossSbkSceenId;			//跨服的沙巴克场景
92 	int nSbkAccupyAwardYb;			//开服第一个占领的行会头领奖励的元宝
94 	int nSbkOwnerTitleId;			//沙城霸主的头衔id
97 	int nSbkOwnDays;				//连续占领沙巴克多少天有奖励
99 	int nSendCmdNeedCoin;			//发送沙巴克指令需要的行会资金
101 	int m_nCrossItemId;				//跨服攻城头像
102 	int m_nCanSignDays;				//开服10天后才可以报名
104 	int nGuildCoinGxRate;			//捐献1000行会获得1贡献

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\config\MiscProvider.h 5 KB H 文件 2013/4/11 2:27:49 2018/8/3 20:31:00 2018/8/3 20:31:00 2
7 	stNormal = 0,
8 	stRsCastellan = 1,	//本服沙巴克城主雕像
9 	stCsCastellan = 2,	//跨服沙巴克城主雕像
10 	stRsVocation = 3,	//本服职业雕像
10 	stRsVocation = 3,	//本服职业雕像
11 	stCsVocation = 4,	//跨服职业雕像
12 };
13 class CRanking;

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\config\PropertyConfig.h 18 KB H 文件 2013/4/11 2:27:55 2018/8/3 20:31:00 2018/8/3 20:31:00 1
193 	int                     nTeacherGiftminGridCount;   //领取师徒奖励需要的最少的背包格子的数目
194 	int                     nPetMaxSkillSlotCount;     //宠物最大的技能的槽位的数目
195 	int						nCommonSrvEntrSceneId;		// 跨服服务器入口场景ID
196 	int						nLogoutReserverTime;		// 
197 	int						nMainQuestPetExpMaxLv;		//主线任务中，等级内宠物可以得到经验

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\entity\Actor.h 70 KB H 文件 2013/4/11 2:28:08 2018/8/3 20:31:00 2018/8/3 20:31:00 9
221 	inline CCorpsSystem& GetCorpsSystem() {return m_CorpsSystem;}	//获取战队子系统
222 	inline CCarrierSystem& GetCarrierSystem() {return m_CarrierSystem;}		//获取载具子系统
223 	inline CCrossSystem& GetCrossSystem() {return m_CrossSystem;}			//跨服子系统
224 	inline CGodWealthSystem& GetGodWealthSystem() {return m_GodWealthSystem;}	//
225 	inline CMagicItemSystem& GetMagicItemSystem() {return m_MagicItemSystem;}	//法宝系统
2238 	CDiamondSystem			m_diamondSystem;	//宝石子系统
2239 	CHeroSystem             m_heroSystem;       //英雄系统
2241 	CCrossSystem			m_CrossSystem;		//跨服子系统
2242 	CGodWealthSystem		m_GodWealthSystem;	//财富闯关子系统
2243 	CMagicItemSystem		m_MagicItemSystem;	//法宝子系统
2289 	WORD					m_nFubenRelivePosY;		//副本复活点的y坐标
2290 	//////////////////////////////////////////////////////////////////////////
2291 	// 下面的三个复活点是给跨服服务器用。不用存盘，在进入跨服传送广场的时候需要设置一下。
2292 	ScenePosInfo			m_commsrvRelivePointPos;	// 跨服服务器普通场景复活点位置信息
2293 	ScenePosInfo			m_commsrvFBRelivePointPos;	// 跨服服务器副本复活点位置信息
2294 	ScenePosInfo			m_commsrvCityPointPos;		// 跨服服务器回城点信息
2295 	ScenePosInfo			m_commsrvPosBeforeEnterFB;	// 跨服服务器进入副本前的位置信息
2296 	ScenePosInfo			m_rawsrcScenePos;			// 在跨服服务器中记录角色在原始服务器的原始场景位置信息
2298 	// 非重配地图复活点
2299 	WORD					m_nNotReloadMapSceneId;	//普通场景中，非重配地图的场景id

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\entitysystem\ChatSystem.h 28 KB H 文件 2013/4/11 2:28:25 2018/8/3 20:31:00 2018/8/3 20:31:00 9
606 	// 测试session消息广播
607 	bool TestSessionBroad(char **args, INT_PTR nArgsCount, char *sRetMsg);
608 	// 设置是否连接跨服
609 	bool GmStartCommonServer(char **args, INT_PTR nArgsCount, char *sRetMsg);	
610 	
614 	//设置自己的转数
615 	bool GmSetActorCircle(char **args, INT_PTR nArgsCount,char * sRetMsg);
617 	// 删除跨服榜单 带destServerId参数指定删除某个服务器的榜单
618 	bool GmClearCsRank(char **args, INT_PTR nArgsCount, char *sRetMsg);
619 	// 广播所有逻辑服将雕像榜单数据发到session
731 	//节日活动设置
732 	bool GmSetHoliday(char ** args, INT_PTR nArgsCount, char * sRetMsg);
734 	//设置可以跨服攻沙的行会id
735 	bool GmSetCanCrossGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
737 	//gm设置头衔
756 	bool GmResetDmkjYB(char ** args, INT_PTR nArgsCount, char * sRetMsg);
758 	bool GmKillMonster(char ** args, INT_PTR nArgsCount, char * sRetMsg);
760 	//刷新跨服的配置
761 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
761 	bool GmSetCrossConfig(char ** args, INT_PTR nArgsCount, char * sRetMsg);
763 	bool GmSetCrossCommonId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
765 	//设置跨服的id
766 	bool GmSetCommonServerId(char ** args, INT_PTR nArgsCount, char * sRetMsg);
769 	//设置排行选项
805 	//设置是否保存任务到日志服务器
806 	bool GmSetSaveCoinLogFlag(char ** args, INT_PTR nArgsCount, char * sRetMsg);
808 	//清除报名跨服的列表
809 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
809 	bool GmClearCrossGuildList(char ** args, INT_PTR nArgsCount, char * sRetMsg);
811 	//报名跨服沙城战
812 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
812 	bool GmSignupCrossSbk(char ** args, INT_PTR nArgsCount, char * sRetMsg);
814 	//设置跨服占领行会
815 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
815 	bool GmSetkfOwnGuild(char ** args, INT_PTR nArgsCount, char * sRetMsg);
817 	//清除跨服的职位
818 	bool GmClearCrossGuildPos(char ** args, INT_PTR nArgsCount, char * sRetMsg);
820 private:

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\entitysystem\CrossSystem.h 2 KB H 文件 2013/4/11 2:28:28 2018/8/3 20:31:00 2018/8/3 20:31:00 13
1 #pragma once
2 //跨服子系统
4 class CCrossSystem:
5 	public CEntitySubSystem<enCrossServerSystem,CCrossSystem,CActor>
17 	//击杀boss发送消息
18 	void OnSendKillBossToServer(int nMonsterid,int nLev,int nNextBossId);
20 	//发送跨服boss的数据
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
21 	void SendCrossBossDataToClient(CDataPacketReader &packet);
23 	//跨服逻辑服发送天下第一的消息给普通逻辑服
24 	void SendCrossWorldOneWinToAll();
26 	//发送天下第一战神给客户端
26 	//发送天下第一战神给客户端
27 	void SendCrossWorldFirstToClient();
29 	//是否为跨服天下第一战神
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
30 	bool BisCrossWorldFirst() {return m_bCrossWorldOne;}
32 	//下发跨服攻城行会的列表
33 	void SendCrossGuildListToClient();
33 	void SendCrossGuildListToClient();
35 	//下发跨服城的职位信息
36 	void SendCrossCityOwnMsg();
36 	void SendCrossCityOwnMsg();
38 	//设置跨服沙城职位
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
39 	void OnSetCrossSbkPosOp(CDataPacketReader &packet);
41 	//发送设置的跨服职位给其他服务器
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
42 	void OnSendCrossSbkPosToServer(int nPos,CActor* pActor);
44 	//是否在跨服天下第一的场景
45 	bool IsInCrossWorldScene();
45 	bool IsInCrossWorldScene();
47 	//发送是否开启跨服标志
48 	void SendCrossOpenState();
48 	void SendCrossOpenState();
50 	//是否跨服沙巴克占领着
51 	bool IsCrossSbkCityOwn(int nGuildId);
53 	//返回到原来的服务器
53 	//返回到原来的服务器
54 	void OnReturnToRawServerOp();
56 	//报名参加跨服沙城战
57 	void OnSignUpCrossSbkOp();
60 private:
57 	void OnSignUpCrossSbkOp();
60 private:
61 	bool			m_bCrossWorldOne;							//是否为跨服天下第一
62 };

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\mgrserv\InterMgrServProto.h 9 KB H 文件 2013/4/11 2:29:07 2018/8/3 20:31:00 2018/8/3 20:31:00 12
24 #define 	MSS_RELEASESHUTUP      10014 //解禁言（数据段为编码后的角色名称）
25 #define 	MSS_RELOAD_FUNCTION    10015 //刷新功能脚本
26 #define 	MSS_APPLY_ACROSS_SERVER_RET  10016//后台返回的申请跨服结果  Tag  0 为成功, 1 为失败  数据段为:  申请的角色名
27 #define 	MSS_GET_ARENA_SCORE_RANK  10017 //后台引擎请求获取擂台积分排行榜
28 #define 	MSS_RELOAD_LOGIN_SCRIPT      10018 //后台重新加载登陆脚本
35 #define 	MSS_OPEN_GAMBLE          10025 // 开启赌博系统
36 #define 	MSS_CLOSE_GAMBLE          10026 // 关闭赌博系统
37 #define		MSS_OPEN_COMMONSERVER		10027 // 开启跨服
38 #define		MSS_CLOSE_COMMONSERVER		10028 // 关闭跨服
39 #define     MSS_SEND_OFFMSGTOACOTOR		10029	//后台给玩家直接发送离线消息 数据段为:(角色名称 + \n + 回复的消息内容)
40 #define		MSS_OPEN_COMPENSATE			10030	//后台开启补偿 数据段为：(param为补偿方案ID Tag表示补偿时间(分钟))
51 #define		MSS_DELAY_COMBINE			10041	//后台设置合服倒计时(param为时间（小时），最后跟开启时间,格式如：2013-01-01 10:0:0)
52 #define		MSS_GET_NOTICESTR			10042	//后台请求公告列表
53 #define		MSS_SET_REFRESHCORSS		10043	//后台刷新跨服配置
54 #define		MSS_SET_COMMON_SRVID		10044	// 设置跨服的服务器ID
55 #define		MSS_GET_COMMON_SRVID		10045	//获取跨服的服务器Id
56 #define		MSS_SET_SURPRISERET			10046	//后台设置惊喜回馈(Tag:库ID（ID=0表示查看开启状态），param为持续的时间（小时）（持续时间为0表示关闭），最后跟开启时间,格式如：2013-01-01 10:0:0)
57 #define 	MSS_RESET_GAMBLE			10047	//重置盗梦元宝消耗
77 #define 	MCS_RELEASESHUTUP_RET    20014 //返回解禁言结果(tag为0表示成功)
78 #define 	MCS_RELOAD_FUNCTION_RET  20015 //刷新功能脚本结果(tag为0表示成功)
79 #define 	MCS_APPLY_ACROSS_SERVER  20016 //引擎转发给后台管理器的申请跨服消息  Recog  操作流水号, Tag  服务器ID 数据段内容为:  账号名称/角色名称
80 #define 	MCS_GET_ARENA_SCORE_RANK_RET 20017 //后台引擎请求获取擂台积分排行榜结果 Param  记录的条数（最大值为50，最小值为0）
81 //数据段为 加密后的排行信息格式为:  角色ID/角色名/国家ID/胜利场数/失败场数/积分值 + #13
89 #define 	MCS_OPEN_GAMBLE           20025 // 开启赌博系统
90 #define 	MCS_CLOSE_GAMBLE          20026 // 关闭赌博系统
91 #define		MCS_OPEN_COMMONSERVER		20027 // 开启跨服
92 #define		MCS_CLOSE_COMMONSERVER		20028 // 关闭跨服
93 #define     MCS_SEND_OFFMSGTOACOTOR		20029	//返回后台给玩家直接发送离线消息结果(tag为0表示成功)
94 #define		MCS_OPEN_COMPENSATE_RET		20030	//后台开启补偿返回 (tag为0表示成功 否则返回当前开启的补偿方案ID) 
105 #define		MCS_DELAY_COMBINE_RET		20041	//后台设置合服倒计时返回(tag为0表示成功，1表示设置失败)
106 #define		MCS_RETURN_NOTICESTR		20042	//返回后台请求公告列表
107 #define		MCS_RETURN_REFRESHCORSS		20043	//返回后台刷新跨服配置(tag为0表示成功，1表示设置失败)
108 #define		MCS_RETURN_SET_COMMON_SRVID		20044	// 设置跨服的服务器ID，返回
109 #define		MCS_RETURN_GET_COMMON_SRVID		20045	//获取跨服的服务器Id,返回
110 #define		MCS_RETURN_SET_SURPRISERET		20046	//后台设置惊喜回馈返回(tag为0表示成功，1表示设置失败，2表示已开启，3没开启)
111 #define 	MCS_RESET_GAMBLE			20047	//重置盗梦元宝消耗(tag为0表示成功，1表示设置失败)

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\networkdata\LogicServerCmd.h 43 KB H 文件 2013/4/11 2:29:12 2018/8/3 20:31:00 2018/8/3 20:31:00 11
189 	sBeatFly =50,         //被击飞
190 	sStartTransmit = 51, // 开始传送
191 	sOpenCommonServer= 52, // 下发跨服开启状态
193 	sSpecialEntityAppear =53,       //一些特殊的生物出现
195 	
1393 enum tagCrossSystemCode
1394 {
1395 	cEnterCrossScene		= 1,	//请求进入跨服地图
1396 	cGetCrossBossData		= 2,	//获取跨服boss的数据
1397 	cGetCrossGuildList		= 3,	//请求跨服攻城的行会列表
1398 	cSetCrossSbkPos			= 4,	//设置跨服沙巴克职位
1399 	cReturnToRawServer		= 5,	//返回到原来的服务器
1399 	cReturnToRawServer		= 5,	//返回到原来的服务器
1400 	cSignUpCrossGuildSbk	= 6,	//报名跨服沙巴克战
1401 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1401 	cCrossBattlefieldSignup ,		///< 降魔战场报名
1403 	sSendCrossBossData		= 1,	//发送跨服boss的数据
1404 	sSendCrossWorldData		= 2,	//发送跨服天下第一给客户端
1405 	sSendCrossGuildList		= 3,	//返回跨服攻城的行会列表
1406 	sSendCrossGuildPos		= 4,	//返回跨服攻城的职位表
1407 	sSendCrossOpenState		= 6,	//是否开启跨服状态
1408 	sCrossBattlefieldSignup ,		///< 返回降魔战场报名
1409 	

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\ActorEventDef.h 11 KB H 文件 2013/4/11 2:33:42 2018/8/3 20:31:00 2018/8/3 20:31:00 4
80 	aeHundredServer = 67,			//百服活动
81 	aeTeamCaller = 68,				//队友召唤
82 	aeCrossOp = 69,					//跨服
83 	aeGodWealth = 70,				//财富闯关
84 	aeFastivalFire = 71,			//鞭炮
291 	cOnUpRideLevel = 1,				//坐骑进阶
292 };
294 //跨服相关操作
295 enum tagCrossOP
296 {
295 enum tagCrossOP
296 {
297 	cEnterCrossOp = 1,				//请求进入跨服场景
298 	cGetCrossWorldState = 2,		//请求跨服天下第一的状态
299 	ccopCrossBattlefieldSignup,		///< 降魔战场报名
300 };

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\ActorExportFun.h 90 KB H 文件 2013/4/11 2:33:43 2018/8/3 20:31:00 2018/8/3 20:31:00 3
2253 	* Param void * packet: 数据包CActorPacket对象指针
2254 	* Param int nLevel: 广播的玩家最低限制等级
2255 	* Param bool bCsFlag: 是否在跨服服务器广播 true广播 false不广播
2256 	* @Return void:
2257 	* @Remark:
3391 	//击杀boss发送消息
3392 	void onSendKillBossToServer(void *pEntity, int nMonsterid,int nLev,int nNextBossId);
3394 	//跨服逻辑服发送天下第一的消息给普通逻辑服
3395 	void sendCrossWorldOneWinToAll(void *pEntity);
3395 	void sendCrossWorldOneWinToAll(void *pEntity);
3397 	//是否为跨服天下第一战神
3398 	bool bisCrossWorldFirst(void *pEntity);
3400 	//获取当前的关卡

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\ChallengeExport.h 4 KB H 文件 2013/4/11 2:33:45 2018/8/3 20:31:00 2018/8/3 20:31:00 1
28 	cstWuLinZhengBa = 1,	// 武林争霸赛擂台
29 	cstDungeon = 2,			// 地牢决斗擂台
30 	cstCrossServerWar = 3,	// 跨服战
31 };
33 namespace ChallengeFun

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\CScriptDataPacket.h 4 KB H 文件 2013/4/11 2:33:44 2018/8/3 20:31:00 2018/8/3 20:31:00 3
30 	void flush(void* pActorPacket);
32 	/*
33 	* Comments: 向跨服发送刚刚打包进去的数据
34 	* Param void * pack:数据包的指针
35 	* @Return void :
41 	DataPack.writeByte(pack, handle)
42 	...
43 	-- 向跨服发送包
44 	DataPack.flushCs(pack)
45 	...
106 		-- 调用广播接口发送包
107 		Camp.broadCastMsg(pack) 
108 		-- 向跨服发送包
109 		DataPack.flushCs(pack)
110 		...

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\LogDef.h 17 KB H 文件 2013/4/11 2:33:48 2018/8/3 20:31:00 2018/8/3 20:31:00 3
114 		clDropItemGroup = 96,				//丢物品到地上
115 		clChangeuseName = 97,				//玩家改名字
116 		clSignCrossSbk = 98,				//报名跨服沙城战
118 		//货币类型,数量, 来源的备注(比如skill 名字)
119 		clNpcGiveMoney=100,				//NPC给金钱
204 		clFinishPaTa = 184,					//用元宝立即完成战神史册任务
205 		clWCDonate = 185,					//世界贡献度
206 		clCrossAwardYb = 186,				//跨服天下第一奖励
207 		clCrossAwardSbk = 187,				//跨服奖励
208 		clFirstOwnSbkGuildLeader = 188,		//首个回收沙城后周五占领的行会首领奖励元宝
209 		clGodWealthAward = 189,				//财神闯关事件的奖励

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\RankingExport.h 6 KB H 文件 2013/4/11 2:33:50 2018/8/3 20:31:00 2018/8/3 20:31:00 1
231 	void removeId(void* pRank, int id);
233 	/*
234 	* Comments:更新跨服排行榜
235 	* Param const char* sName: 排行榜名称
236 	* @Return void:

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\SystemExportFun.h 30 KB H 文件 2013/4/11 2:33:51 2018/8/3 20:31:00 2018/8/3 20:31:00 11
195 	void broadcastTipmsg(char * sTipmsg,int nTipmsgType =ttTipmsgWindow);
197 	/*
198 	* Comments: 跨服发布全服系统提示
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
199 	* Param char * sTipmsg: tipmsg的指针
200 	* Param int nTipmsgType: 公告的显示类型，聊天栏，还是弹出框等
201 	* Param bool bCsFlag: 是否在跨服服务器发布提示 true发布 false不发布
202 	* @Return void:
203 	*/
786 	*/
787 	void updateVocNpcStatue(int nType);
789 	//发送到SS保存跨服排行
790 	void saveCsRank();
790 	void saveCsRank();
791 	//加载跨服排行数据
792 	void loadCsRank();
794 	//在m_CsRankList获取serverId
794 	//在m_CsRankList获取serverId
795 	int getServerIdByCsRank(int nActorId);
797 	//装载跨服玩家的离线消息
798 	void loadUserOfflineDataCs(int nServerId, int nActorId);
800 	//播报消息 nType 1 19点前 2 22点前
1025 	//获取商城物品价格数据
1026 	int getMerchandisePrice(unsigned int nGoodsId, int &btDealGoldType, int &nPrice, int &nQuality, int &nStrong, int &nBind);
1028 	//是否连接到跨服服务器
1029 	bool isStartCommonServer();
1031 	//是否为公共服
1031 	//是否为公共服
1032 	bool isCommonServer();
1034 	//初始化跨服沙巴克城墙
1035 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1035 	void initCrossSbkWall(void* pEntity,int nIndex,int nState,int nMp);
1037 	//跨服沙巴克开始
1038 	void startGuildCrossSbk();
1038 	void startGuildCrossSbk();
1040 	//跨服沙巴克结束
1041 	void endCrossSbkWar();
1043 	//获取角色最大等级
1064 	//保存完成某日活动
1065 	void finishTenDaysToFile(int nIndex);
1067 	//开始跨服boss战时初始化
1068 	void initCrossBossData();
1068 	void initCrossBossData();
1070 	//添加跨服boss数据
1071 	void addCrossBossData(int nBossId,int nLev,char* sName,int nActorId,int nServerIndex,int nType);
1073 	//开始天下第一时的初始化

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\SystemParamDef.h 13 KB H 文件 2013/4/11 2:33:51 2018/8/3 20:31:00 2018/8/3 20:31:00 1
171 	smHideHeadMsg=10,       //是否隐藏头顶的信息，1表示隐藏头顶信息（包括名字，头衔，称号，帮派等），0表示不限制
172 	smShowRedWeaponEffect =11,  //是否显示神器的特效，1表示显示，0表示不显示
173 	smIsInCommonServer=12,     //是否在跨服的场景，1表示是，0表示否
174 	smSaveGameAddress = 13,		//是否保存了游戏网页
175 	smFlushStarToLv			= 14,		//刷星到指定星级

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\script\interface\TipmsgID.h 56 KB H 文件 2013/4/11 2:33:53 2018/8/3 20:31:00 2018/8/3 20:31:00 10
763 	tpTransmitPattern,				//"<速传/F%s:%d:%d:%s:%d>"
764 	tpServerIdPattern,				//"[%d区]"
765 	tpCSMsgFilter,					//跨服状态无法使用
767 	tpChannelSecret,				//私聊
768 	tpChannelNear,					//同屏
1234 	tpNoDropItemArea,						//此场不能丢弃物品
1236 	tpCrossSbkEndMsg,						//恭喜%d区<(c0xFF00FF00)%s>在<(n%s)>带领下成功占领沙城！本战区所向披靡！
1237 	tpIsCrossGuildCanNotChange,				//参加跨服沙城战的行会不能禅让会长
1238 	tpSceneCanNotCrossTransfer,             //当前场景无法跨服传送
1239 	
1240 	tpRedPackOffline,						//赠送失败，请在对方在线时赠送
1255 	tpWealthEventRecord2,					//财神降临！【%s】在财神闯关中顺利进入【%s】
1257 	tpChangeNameNotOpen,					//改名功能暂为开启，敬请期待！
1258 	tpCrossServerIsClose,                    //跨服没有开启
1259 	tpIsCrossServering,                    //正在进入跨服务器
1261 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1261 	tpWealthEventNotfinish,					//本次的财神事件还没完成,不能进行下一步
1263 	tpNoGuildCanNotSignSbk,					//没有行会不能报名跨服沙城战
1264 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1265 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1264 	tpNotGuildPosCanNotSignUp,				//只有副掌门以上的职位才可以报名
1265 	tpCanNotSignTimeNotUp,					//只有星期三并且开服10天后才可以报名
1266 	tpNoSingCrossItem,						//没有跨服攻城头像
1267 	tpSignCrossToGuildMem,					//贵行会已报名周四跨服沙城战，请做好充分准备攻下跨服沙城战!
1268 	tpIsSignCrossGuildSbk,					//贵行会已报名跨服沙城战
1269 	tpIsTheEndGodWealthTips,				//您已完成财神闯关的全部关卡，请明天继续从头进行闯关。
1271 	tpAwardTypeMagicBead,				//魔珠

H:\work\source\烈火战神\[src.cool]烈火战神\diablotcgp\trunk\Diablo\server\LogicServer\Tool\RankingMgr.h 2 KB H 文件 2013/4/11 2:26:48 2018/8/3 20:31:00 2018/8/3 20:31:00 2
39 	//void NotifyUpdate();
41 	/*
42 	* Comments:向所有跨服服务器发送通知，排行榜改变了
43 	* Param LPCSTR sName:排行榜的名称
44 	* @Return void:
46 	//void NotifyRankUpdateCs(LPCSTR sName);
48 	/*
49 	* Comments:更新跨服排行榜
50 	* Param CDataPacketReader &packet:
51 	* @Return void:

H:\work\source\烈焰\lieyan\server_src\src\gameserver\BattleCommClient.h 2 KB H 文件 2014/3/18 12:28:24 2018/8/6 23:30:32 2018/8/6 23:30:32 2
1 /************************************************************************/
2 /* 跨服战服务器链接                                                     */
3 /************************************************************************/
5 #ifndef __BATTLECOMMCLIENT_H
28 	void OnConnect();
29 	void OnDisconnect();
31 	//	获得世界服务器在跨服服务器中的ID
32 	void ReciveBattleInfoToGameServer(WorldPacket& recvData);
33 	void HandleUpdatePlayerInfo(WorldPacket& recvDate);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\BattleCommHandler.h 2 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 2
1 /************************************************************************/
2 /* 跨服战                                                               */
3 /************************************************************************/
5 #ifndef __BATTLECOMMHANDLER_H
56 	void ConnectionDropped(uint32 ID);
57 	void SendGameServerPacket(WorldPacket& sendData , uint32 nServerID);
58 	//	转发跨服战数据给世界服务器
59 	void SendUpdatePlayerInfoToGameServer(WorldSession * pSession);
60 	WorldSocket* GetSocketByRequest(uint32 id)

H:\work\source\烈焰\lieyan\server_src\src\gameserver\BattleOpcodes.h 1 KB H 文件 2014/3/18 12:28:24 2018/8/6 23:30:32 2018/8/6 23:30:32 7
1 /************************************************************************/
2 /* 跨服战                                                               */
3 /************************************************************************/
5 #ifndef __BATTLE_OPCODES_H
9 {
10 	BSMSG_BATTLE_BEGIN					= 1000,
11 	BSMSG_REQBSERVER_SERVERID			= 1001,	//	传递跨服战服务器地址
12 	BSMSG_REQBSERVER_PING				= 1002,	//	跨服战与普通服务器间心跳包
13 	BSMSG_REQ_GETGUILDINFO				= 1003, //	拉取公会信息
14 	BSMSG_RLT_GETGUILDINFO				= 1004,	//	获得公会信息
13 	BSMSG_REQ_GETGUILDINFO				= 1003, //	拉取公会信息
14 	BSMSG_RLT_GETGUILDINFO				= 1004,	//	获得公会信息
15 	BSMSG_UPDATEPLAYERINFO				= 1005,	//	保存玩家跨服战数据
16 	BSMSG_LOADPLAYERINFO				= 1006,	//	请求拉取数据
16 	BSMSG_LOADPLAYERINFO				= 1006,	//	请求拉取数据
17 	BSMSG_BATTLESERVER_LOADPLAYERINFO	= 1007, //	设置跨服战玩家数据
18 	BSMSG_BATTLESERVER_QUIT_NOTICE		= 1008, //	没登录前退出跨服战通知
19 	BSMSG_BATTLESERVER_QUIT				= 1009, //	通知跨服战，让该角色退出
21 	BSMSG_BATTLE_END					= 1010,
23 };

H:\work\source\烈焰\lieyan\server_src\src\gameserver\Guild.h 23 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
686 		void GetGuildLogs(WorldSession* pClient,uint8 pagesize,uint8 page);
687         void ExchangeGold(WorldSession* pClient, uint32 donateNum);
689 		//跨服战
690 		void NewSaveForNet(WorldPacket& data);
691 	protected:

H:\work\source\烈焰\lieyan\server_src\src\gameserver\Item.h 19 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 3
180 	OPERA_TPE_GET_EXCHANGE	= 16, //兑换装备
181 	OPERA_TPE_GET_SPLIT		= 17, //拆解装备
182 	OPERA_TPE_GET_BATTLE	= 18, //跨服战获得
184 	//更新
185 	OPERA_TPE_UPDATE_RESET	= 100, //装备重置
196 	OPERA_TPE_LOSE_UPGRADE	= 209, //装备升级
197 	OPERA_TPE_LOSE_DONATE	= 210, //捐献装备
198 	OPERA_TPE_LOSE_BATTLE	= 211, //跨服战丢失
200 	
202 };
395 		//! DB Serialization
396 		void LoadFromDB(Field* fields, Player* plr, bool light);
397 		//跨服战
398 		void LoadFromNet(uint32* arrItemID, std::string* _string, Player* plr, bool light);
399 		void SaveToNet(WorldPacket& sendData);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\ItemInterface.h 11 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
77 		void mSaveItemsToDatabase(bool first, QueryBuffer* buf,StringBuffer& ss);
78 		
79 		//	跨服战
80 		void mLoadItemsFromNet(WorldPacket& recvData);
81 		void mSaveItemsFromNet(bool first, vector<Item*>& vItem);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\LocalDefine.h 19 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
441 	CT_GUILD_DRAW_GIFT		= 30, // 公会领取
442 	CT_GUILD_BACK_GIFTS		= 31, // 回收红包
443 	CT_USE_BATTLE			= 32, // 跨服战产出
444 };
446 enum e_privateshop_status

H:\work\source\烈焰\lieyan\server_src\src\gameserver\ObjectMgr.h 12 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
326 	uint32 m_next_save_achievements;
327 	time_t m_next_sort_guildvec;
329 	// 跨服战登陆列表
330 	Mutex	m_BattleLock;
331 	std::map<uint32, uint32> m_mapBattleLogin;

H:\work\source\烈焰\lieyan\server_src\src\gameserver\Opcodes.h 122 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 8
1261 	NEW_CS_MSG_LOGOUT								= 0x51F,	//	登出
1262     NEW_CS_SC_MSG_SET_PLAYER_PROTECT                = 0x520,	//	密码锁
1263 	//跨服战信息
1264 	NEW_CS_SC_MSG_BATTLE_SERVERADRESS				= 0x521,	//	跨服战信息
1265 	NEW_SC_CS_MSG_BATTLE_ENTERSERVER				= 0x522,	//	进入跨服战判断
1266 	NEW_CS_SC_MSG_BATTLE_LOGIN_PLAYER				= 0x523,	//	跨服战
1267 	NEW_CS_SC_MSG_BATTLE_GETPLAYERID				= 0x524,	//	跨服战获得角色ID
1268 	NEW_CS_SC_MSG_LOGIN_FROMBATTLE					= 0x525,	//	跨服战跳转到世界服务器
1269 	NEW_CS_SC_MSG_LOGIN_ENTERBATTLE					= 0x526,	//	进入跨服战服务器 
1270 	NEW_CS_SC_MSG_QUIT_BATTLE						= 0x527,	//	通知客户端退出跨服战
1272 // 角色信息
1273 	NEW_CS_SC_MSG_GET_PLAYER_INFORMATION			= 0x578,	//	登陆角色基本信息

H:\work\source\烈焰\lieyan\server_src\src\gameserver\Player.h 98 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
1366 		bool LoadFromDB(uint32 guid);
1367 		void LoadFromDBProc(QueryResultVector & results);
1368 		//	跨服战
1369 		void LoadFromNetServer(WorldPacket &recvData, uint32 nServerID, uint32 nAccountID);
1370 		bool NewSavePlayerForNet(uint32 nOldGuidID, WorldPacket& sendData);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\PlayerAchievement.h 3 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 2
70 	//加载成就
71 	void LoadFromDB(QueryResult* result);
73 	//	跨服战
74 	void LoadFromNet(WorldPacket& recvData);
76 	//杀死怪
99 	void DrawAll();
100 	void SaveToDB(bool bNewCharacter,QueryBuffer* buf,StringBuffer& ss);
101 	// 跨服战
102 	void NewSaveForNet(WorldPacket &data);
103 	void NewSaveActiveForNet(WorldPacket& sendData);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\StdAfx.h 6 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
223 #include "DataBaseLog.h "
224 // --> add
226 // -->add by xst 跨服战
227 #include "BattleOpcodes.h"
228 #include "BattleCommClient.h"

H:\work\source\烈焰\lieyan\server_src\src\gameserver\World.h 25 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
967 		void SaveGlobalTalkLevelLimit();
968 		void OnHttpCallback(bool result, const char* content, PHttpStruct pHttpStruct);
970 		//	跨服战重连保存玩家数据
971 		void DisconnetAndSavePlayer(uint32 nServerID);
972 		uint32 IsBattle()

H:\work\source\烈焰\lieyan\server_src\src\gameserver\WorldSession.h 29 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
677 		void HandleMovementOpcodes(WorldPacket & recvPacket);
678 		void HandleMoveTeleportAckOpcode(WorldPacket & recv_data);
680 		//	跨服战
681 		void HandleGetBattleServerInfo(WorldPacket& recvPacket);
682 		void HandleGetBattlePlayerID(WorldPacket& recvPacket);

H:\work\source\烈焰\lieyan\server_src\src\gameserver\WorldSocket.h 6 KB H 文件 2014/3/18 12:28:22 2018/8/6 23:30:32 2018/8/6 23:30:32 1
82 		void _HandlePing(WorldPacket* recvPacket);
84 		void _testlogon(WorldPacket* recvPacket);
86 		//	跨服战
87 		void _HandleBattleLogon(WorldPacket* recvPacket);
88 		void _HandleLogonGameFromBattle(WorldPacket* recvPacket);

H:\work\source\白蛇传源代码\[src.cool]白蛇传源代码\Server Core\Server Core\NewServer\Protocol\msgid.h 37 KB H 文件 2011/9/22 19:02:26 2018/8/20 14:33:01 2018/8/20 14:33:01 1
739 	MSG_GSGAMEMSG_END = 4999,
741 	//////////////////////////////////////////////////////////////////////////
742 	// IM Server 相关消息(跨服聊天，拍卖，邮寄，家族，公会银行等等)
743 	MSG_IMGAMEMSG_BEGIN = 5000,
745 	C2S_WHISPERTALK_REQUEST = MSG_IMGAMEMSG_BEGIN,	//私聊

H:\work\source\神仙传《www.zztri.com》\神仙传\GAME\Project1\SERVERS\Common\ChatBase.h 3 KB H 文件 2011/4/12 15:19:03 2018/5/9 22:13:17 2018/5/9 22:13:17 1
24 	CHAT_MSG_TYPE_SYSTEM,		// 系统
25 	CHAT_MSG_TYPE_WORLDPLUS,	// 跑马
26 	CHAT_MSG_TYPE_WORLD,		// 跨服
27 	CHAT_MSG_TYPE_LINE,			// 全服
28 	//----------------------------------------

H:\work\source\神仙传《www.zztri.com》\神仙传\GAME\Project1\ZoneClientEditor\Source\Gameplay\ClientGameplayState.h 15 KB H 文件 2010/3/22 9:23:16 2018/5/9 22:13:27 2018/5/9 22:13:27 2
117 	bool                        m_bNavigation;                          //是否寻径中
118 	U32							mFindPathID;							//寻径ID
119 	std::vector<U32>			mStrideServerPath;						//跨服寻径ID
120 	bool						mbStrideServer;							//跨服寻径标志
121 	VocalStatus*                pVocalStatus;                           //吟唱状态
122 	bool						m_isInCopymap;							//是否在副本中

H:\work\source\神仙传《www.zztri.com》\神仙传\GAME\Project1\ZoneClientEditor\Source\Gameplay\Data\RouteRepository.h 3 KB H 文件 2010/3/22 9:23:20 2018/5/9 22:13:27 2018/5/9 22:13:27 1
44 	RouteMap m_RouteMap;
45 };
46 //跨服寻径
47 struct  StrideServerPath
48 {

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\CenterServer\include\ZWOperator.h 3 KB H 文件 2015/3/14 1:48:44 2018/8/15 23:55:14 2018/8/15 23:55:14 2
57 	int_32 m_nId;
58 	int_32 m_LayerNum;	//堆叠数量
59 	int_32 m_Index;		//在跨服背包中的索引
60 };
62 //struct BangWeight 
96 	int_32		OnGetCharPersonalChatInfo(CZWNetData* pNetData);
98 	int_32		OnDispatchNetDataToOtherPlayer(CZWNetData* pNetData);
100 	//跨服相关
102 	int_32		OnAddBangLog( CZWNetData* pNetData );//增加帮派动态
103 protected:

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\Common\ZWDataStructure.h 23 KB H 文件 2015/3/14 1:39:43 2018/8/15 23:55:14 2018/8/15 23:55:14 2
106 	int_32							m_nGateID;			// Gate ID
107 	int_32							m_nStatus;		// 1 - 正常 0 - 异常
108 	byte_8							m_IsKFServer;		// 1 - 跨服 0 - 非跨服
109 }COMMON_SERVER_INFO;
110 typedef std::list<COMMON_SERVER_INFO> ZWCommonServerInfoList;

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\Common\ZWPDUDefines.h 91 KB H 文件 2015/3/14 1:39:43 2018/8/15 23:55:14 2018/8/15 23:55:14 11
2 #define __ZW_PDU_DEFINES_H_
4 /************************************************************************/
5 /*  说明：59000 - 60000为跨服通讯指令包处理                                                                     */
6 /************************************************************************/
7 enum KF_PDU_SERVER_TYPE
289 	GS_CS_REQUEST_ADD_BANG_LOG,				//游戏服向中心服请求增加帮派日志
290 	GS_CS_REQUEST_REWARD_ALL_BANG_MEMBERS,			//游戏服向中心服请求发送奖励邮件
292 	GS_KFS_REQUEST_REGISTER_SERVER,					// 注册游戏服务器到跨服服务器
293 	KFS_GS_RESPONE_REGISTER_SERVER,					// 注册游戏服务器到跨服服务器反馈
295 	GS_KFS_REQUEST_SYNC_CHAR_INFO,					// 同步角色数据
296 	KFS_GS_RESPONT_SYNC_CHAR_INFO,					// 同步角色数据反馈
295 	GS_KFS_REQUEST_SYNC_CHAR_INFO,					// 同步角色数据
296 	KFS_GS_RESPONT_SYNC_CHAR_INFO,					// 同步角色数据反馈
298 	GS_KFS_REQUEST_LEAVE_KF,						// 离开跨服
299 	KFS_GS_RESPONE_LEAVE_KF,						// 响应离开跨服
301 	GS_KFS_SYNC_WUDAOHUI_RANK,						// 同步武道会排行到跨服中转服务器
302 	KFS_GS_SYNC_WUDAOHUI_RANK,						// 同步武道会排行到各个区
304 	GS_CS_SYNC_CITYMASTERINFO,							// 同步盟主信息到中心服务器
398 	//CL_GT_REQUEST_SWITCH_LINE,	// 切换服务器线
399 	//GT_CL_RESPONSE_SWITCH_LINE, // 返回切换结果
400 	// 跨服
401 	CL_GS_REQUEST_ENTER_KF				= 61011,	// 请求进入跨服
402 	GS_CL_RESPONT_ENTER_KF				= 61012,	// 响应进入跨服
403 	CL_GS_REQUEST_LEAVE_KF				= 61072,	// 请求离开跨服
404 	GS_CL_RESPONT_LEAVE_KF				= 61073,	// 响应离开跨服
405 	
407 	CL_GS_REQUEST_CHAR_LIST = 61100, // 获得角色信息，这个时候应当是一个列表

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\Common\ZWServerTypeDef.h 1 KB H 文件 2015/3/14 1:39:43 2018/8/15 23:55:14 2018/8/15 23:55:14 1
12 	ZW_SERVER_TYPE_LOGIN,		// LOGIN 登录服务器
13 	ZW_SERVER_TYPE_MONITOR,		// MOINITOR 监控工具类型
15 	ZW_SERVER_TYPE_KUAFU,       // 跨服
16 };
18 //enum ZW_SERVER_STATUS

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\Common\ZWSqlDef.h 35 KB H 文件 2015/3/14 1:39:43 2018/8/15 23:55:14 2018/8/15 23:55:14 1
1434 extern  char* LoadPaoShang;
1435 extern  char* DetelePaoShang;
1436 // 跨服
1437 extern  char*		loadCharGameInfo;
1439 extern  char*		loadKFStartCharIdInfo;

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\KuaFuCharManager.h 5 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:27 2018/8/15 23:55:27 17
17 typedef map<int_32, KuaFuCharList> ServerCharListMap;
18 typedef ServerCharListMap::iterator	ServerCharListMapIter;
21 // 跨服角色原服信息
22 struct KuaFuCharSourceServerInfo
23 {
22 struct KuaFuCharSourceServerInfo
23 {
24 	// 跨服角色ID
25 	CharID_t kuafuCharID;
26 	// 原服角色ID
89 {
90 private:
91 	// 跨服角色实例表
92 	KuaFuCharMap m_kuaFuCharMap;
92 	KuaFuCharMap m_kuaFuCharMap;
94 	// 跨服角色原服信息表
95 	KuaFuCharSourceServerInfoMap m_kfCharSourceServerInfoMap;
96 public:
103 	void ClearUp();
105 public:
106 	// 发送跨服角色数据
107 	void SendKuaFuCharJsonData(CZWObj_Char* INpChar, int_32 INhdID);
109 	// 发送退出消息
109 	// 发送退出消息
110 	void SendLogonOut(CZWObj_Char* INpChar);
112 	// 打包跨服角色数据
113 	void PacketKuaFuCharAllData(CZWObj_Char* INpChar, Json::Value& OUTdata);
113 	void PacketKuaFuCharAllData(CZWObj_Char* INpChar, Json::Value& OUTdata);
115 	// 解析跨服角色数据
116 	void UnPacketKuaFuCharAllData(CZWObj_Char* INpChar, Json::Value& OUTdata);
118 	// 获取角色所属用户信息
118 	// 获取角色所属用户信息
119 	void GetCharUserData(CZWObj_Char* INpChar, UserData& userData);
121 	// 获取角色跨服编号
122 	int_32 GetCharKuaFuID(CZWObj_Char* INpChar);
124 	// 获取角色原服务器编号
128 	void PacketLocalServerInfo(CZWObj_Char* INpChar, UserData& userData, Json::Value& OUTdata);
130 	// 角色所属用户信息
131 	// 跨服活动数据
132 	void PacketHDInfo(CZWObj_Char* INpChar, KuaFuHDInfo& INhdInfo, Json::Value& OUTdata);
134 	// 武林盟主信息
140 	// 打包角色二级属性
141 	void PacketKuaFuCharFightAttr(CZWObj_Char* INpChar, Json::Value& OUTdata);
143 	// 打包跨服角色装备信息
144 	void PacketKuaFuCharEquip(CZWObj_Char* INpChar, Json::Value& OUTdata);
144 	void PacketKuaFuCharEquip(CZWObj_Char* INpChar, Json::Value& OUTdata);
146 	// 打包跨服角色培养信息
147 	void PacketKuaFuCharTrain(CZWObj_Char* INpChar, Json::Value& OUTdata);
147 	void PacketKuaFuCharTrain(CZWObj_Char* INpChar, Json::Value& OUTdata);
149 	// 打包跨服角色武魂信息
150 	void PacketKuaFuCharWuHun(CZWObj_Char* INpChar, Json::Value& OUTdata);
150 	void PacketKuaFuCharWuHun(CZWObj_Char* INpChar, Json::Value& OUTdata);
152 	// 打包跨服角色所有侠侣数据
153 	void PacketKuaFuCharAllXiaLv(CZWObj_Char* INpChar, Json::Value& OUTdata);
153 	void PacketKuaFuCharAllXiaLv(CZWObj_Char* INpChar, Json::Value& OUTdata);
155 	// 打包跨服侠侣信息
156 	void PacketKuaFuXiaLvBase(CZWObj_XiaLv* INpXiaLv, Json::Value& OUTdata);
156 	void PacketKuaFuXiaLvBase(CZWObj_XiaLv* INpXiaLv, Json::Value& OUTdata);
158 	// 打包跨服侠侣装备信息
159 	void PacketKuaFuXiaLvEquip(CZWObj_XiaLv* INpXiaLv, Json::Value& OUTdata);
159 	void PacketKuaFuXiaLvEquip(CZWObj_XiaLv* INpXiaLv, Json::Value& OUTdata);
161 	// 打包跨服侠侣武魂信息
162 	void PacketKuaFuXiaLvWuHun(CZWObj_XiaLv* INpXiaLv, Json::Value& OUTdata);
164 	// 打包坐骑信息
170 	// 打包技能信息(包括法宝技能和绝学技能)
171 	void PacketKuaFuCharSkill(CZWObj_Char* INpChar, Json::Value& OUTdata);
173 	// 打包跨服角色称号信息
174 	void PacketKuaFuCharTitle(CZWObj_Char* INpChar, Json::Value& OUTdata);
176 	// 打包挂机信息

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\KuaFuManager.h 3 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:27 2018/8/15 23:55:27 16
24 	// 状态
25 	int_32 state;
26 	// 连接到跨服的角色数量
27 	int_32 inKuaFuCharCount;
29 	ConnectedServerInfo()
42 struct KuaFuServerInfo 
43 {
44 	// 跨服服务器编号
45 	int_32 kuaFuServerID;
45 	int_32 kuaFuServerID;
46 	// 跨服游戏服务器IP
47 	string kfGameServerIP;
47 	string kfGameServerIP;
48 	// 跨服游戏服务器端口
49 	int_32 kfGameServerPort;
49 	int_32 kfGameServerPort;
50 	// 跨服登录服务器IP
51 	string kfLogonServerIP;
51 	string kfLogonServerIP;
52 	// 跨服登录服务器端口
53 	int_32 kfLogonServerPort;
54 	// 数据库IP
58 	// 在线数量
59 	int_32 charCount;
60 	// 连接跨服的服务器信息列表
61 	ConnectedServerInfoMap connectedServerInfoMap;
63 	KuaFuServerInfo()
78 {
79 private:
80 	// 跨服服务器信息
81 	KuaFuServerInfo m_kuaFuServerInfo;
82 	// 
87 	~KuaFuManager();
88 public:
89 	// 跨服消息处理
90 	int_32 OnKuaFuOperator(CZWObj_Char* INpChar, CZWNetData* INpNetData);
90 	int_32 OnKuaFuOperator(CZWObj_Char* INpChar, CZWNetData* INpNetData);
92 	// 跨服消息反馈
93 	int_32 OnKuaFuRespons(CZWNetData* INpNetData);
93 	int_32 OnKuaFuRespons(CZWNetData* INpNetData);
95 	// 进入跨服
96 	int_32 OnEnterKuaFuServer(CZWObj_Char* INpChar, CZWNetData* INpNetData);
96 	int_32 OnEnterKuaFuServer(CZWObj_Char* INpChar, CZWNetData* INpNetData);
98 	// 离开跨服
99 	int_32 OnLeaveKuaFuServer(CZWObj_Char* INpChar, CZWNetData* INpNetData);
101 	// 注册服务器成功
107 	// 同步武道会排行
108 	int_32 OnSyncWuDaoHuiRank(CZWNetData* INpNetData);
110 	// 同步离开跨服
111 	int_32 OnSyncLeaveKFServer(CZWNetData* INpNetData);
112 public:
113 	// 初始化
114 	void Initial();
116 	// 本服是否是跨服服务器
117 	bool IsKuaFuServer();
119 	// 加载配置
120 	void LoadKuaFuConfig();
122 public:
123 	// 进入跨服活动
124 	void EnterKuaFuHD(CZWObj_Char* INpChar, int_32 INhdID);
124 	void EnterKuaFuHD(CZWObj_Char* INpChar, int_32 INhdID);
126 	// 是否是跨服有效协议
127 	bool IsValidProcInKuaFu(ProcID_t INprocID);
129 	// 是否提示

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\WuDaoHuiRank.h 5 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:27 2018/8/15 23:55:27 2
194 	// 同步周排行奖励
195 	void SyncWeekReward(string INname, int_32 INrankOrder);
197 	// 同步当前跨服排行奖励
198 	void SyncCurDayKFRankReward();
198 	void SyncCurDayKFRankReward();
200 	// 发放当日跨服排行奖励
201 	void SyncKFRankReward(string INname, int_32 INrankOrder);
203 	// 武道会排行数据打包

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWCharBag.h 14 KB H 文件 2015/3/14 1:40:31 2018/8/15 23:55:27 2018/8/15 23:55:27 1
85 	ZW_CHAR_BAG_TYPE_STALL		= 2,		// 摊位 -- 临时的，不会保存到数据库
86 	ZW_CHAR_BAG_TYPE_DEPOT		= 3,		// 仓库
87 	ZW_CHAR_BAG_TYPE_KUAFU      = 4,        // 跨服背包
89 	ZW_CHAR_BAG_TYPE_HUNSHI     = 5,        // 魂石背包
90 	ZW_CHAR_BAG_TYPE_LIEHUN     = 6,        // 猎魂背包

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWCharGameGoal.h 5 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:27 2018/8/15 23:55:27 1
46 34、成为城主（攻城战胜利，且是帮主）-------------TODO    1-目前没有该功能
47 35、竞技场达到指定排名（排名）
48 36、跨服（第一）-------------TODO   1-目前没有该功能
49 37、世界BOSS第一（活动结束时输出榜第一）
50 38、鲜花榜第一（刷新全服排行榜时第一）-------------TODO   1-目前没有该功能

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWGameServerBase.h 3 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:28 2018/8/15 23:55:28 2
96 	//CZWGameServerSession*			m_pGateServerSession;
97 	CZWCenterClientSession*			m_pCenterClientSession;
99 	// 增加的跨服服务器连接
100 	CZWKuaFuClientSession*			m_pKuaFuClientSession;
101 protected:
106 public:
107 public:
108 	// 跨服链接单独管理
109 	bool CheckKuaFuServerConnectStatus();
110 	bool ConnectToKuaFuServer();

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWKFConnectMgr.h 2 KB H 文件 2015/3/14 1:40:31 2018/8/15 23:55:28 2018/8/15 23:55:28 2
1 #ifndef _ZW_KF_CONNECT_MGR_H_
2 #define _ZW_KF_CONNECT_MGR_H_
4 #define DEF_KUAFU_TICKTIME		(60*1000)	// 跨服相关的检查时间间隔
5 #define ZW_KF_LINE				1			// 1线
5 #define ZW_KF_LINE				1			// 1线
7 struct KF_SERVER_DATA						//保存跨服中转器的数据
8 {
9 	void CleanUp()

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWLogDataDef.h 30 KB H 文件 2015/3/14 1:40:30 2018/8/15 23:55:28 2018/8/15 23:55:28 4
74 	ZW_CURRENCY_WAY_GOLDEN_EGG_ADD_GOLD	= 47,	// 砸金蛋获得礼金奖励
75 	ZW_CURRENCY_WAY_BUY_GOLDEN_EGG		= 48,	// 购买金蛋消耗
76 	ZW_CURRENCY_WAY_KF_ADD_MONEY		= 49,	// 跨服战场所获铜钱奖励
77 	ZW_CURRENCY_WAY_MAKE_MOUNT_DEL		= 50,	// 制作坐骑消耗
78 	ZW_CURRENCY_WAY_LIMITE_SHOPPING		= 51,	// 单人限时限量抢购
305 	ZW_ITME_OP_WAY_REWARD_MOUNT_MENGZHU				= 57,	//盟主奖励坐骑
307 	ZW_TIME_OP_WAY_GET_OUT_MING_WEN					= 58,	//取出铭文
309 	ZW_ITME_OP_WAY_KF_BAG_DISCARD					= 59,	// 跨服背包中丢弃
310 	ZW_ITME_OP_WAY_BAG_TO_KFBAG						= 60,	// 从背包中到跨服背包
311 	ZW_ITME_OP_WAY_KFBAG_TO_BAG						= 61,	// 从跨服背包中到背包
312 	ZW_ITME_OP_WAY_LIMITE_SHOPPING					= 62,	// 单人限时限量抢购
313 	ZW_ITME_OP_WAY_MOUNT_IDENTIFY					= 63,	//鉴定坐骑给坐骑

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\include\ZWObj_Char.h 90 KB H 文件 2015/3/14 1:40:31 2018/8/15 23:55:28 2018/8/15 23:55:28 1
412 	std::string					m_CreateCharDateTime;		// 创建角色的日期
413 };
416 // 角色个人基本属性 -- 跨服数据结构
417 struct ZW_KF_CharBaseInfo
418 {

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\J2Fresh\ServerFresh\GameServer\src\ZWDataStructure.h 23 KB H 文件 2015/3/14 1:48:29 2018/8/15 23:55:29 2018/8/15 23:55:29 2
106 	int_32							m_nGateID;			// Gate ID
107 	int_32							m_nStatus;		// 1 - 正常 0 - 异常
108 	byte_8							m_IsKFServer;		// 1 - 跨服 0 - 非跨服
109 }COMMON_SERVER_INFO;
110 typedef std::list<COMMON_SERVER_INFO> ZWCommonServerInfoList;

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project\CenterServer\include\Operator.h 3 KB H 文件 2015/3/14 1:51:59 2018/8/15 23:55:34 2018/8/15 23:55:34 1
33 	int_32 m_nId;
34 	int_32 m_LayerNum;	//堆叠数量
35 	int_32 m_Index;		//在跨服背包中的索引
36 };
38 //struct BangWeight 

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project\Common\PDUDefines.h 61 KB H 文件 2015/3/14 1:51:36 2018/8/15 23:55:34 2018/8/15 23:55:34 8
1 #ifndef __TPOC_PDU_DEFINES_H_
2 #define __TPOC_PDU_DEFINES_H_
4 #define  TPOC_KF_LINE  9 //暂定9线为跨服线
6 /************************************************************************/
6 /************************************************************************/
7 /*  说明：59000 - 60000为跨服通讯指令包处理                                                                     */
8 /************************************************************************/
9 enum KF_PDU_SERVER_TYPE
14 	*	登录时命令字
15 	*/
16 	KF_GS_KS_LOGIN = 59000,					//玩家登陆跨服服务器
17 	KF_GS_KS_LOGOUT,						//玩家从跨服服务器中登出
18 };
20 /*
315 	CL_GT_REQUEST_EXIT_LINE		= 61009,						// 退线
316 	GT_CL_RESPONSE_EXIT_LINE	= 61010,						// 退线返回
318 	// 请求进入跨服服务器
319 	CL_GS_REQUEST_ENTER_KF_LINE = 61011,                        // 请求进入跨服线
320 	GS_CL_RESPONSE_CAN_ENTER_KF_LINE = 61012,                   // 告诉玩家可以开始切换线到跨服战场了
321     GS_CL_NOTIFY_EXIT_KF_LINE        = 61013,                   // 通知玩家离开跨服线
325 	// 阵营
326 	CL_GS_SELECT_CAMP			= 61040,					// 选择阵营

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project\Common\ServerTypeDef.h 1 KB H 文件 2015/3/14 1:51:36 2018/8/15 23:55:34 2018/8/15 23:55:34 1
12 	TPOC_SERVER_TYPE_LOGIN,		// LOGIN 登录服务器
13 	TPOC_SERVER_TYPE_MONITOR,		// MOINITOR 监控工具类型
15 	TPOC_SERVER_TYPE_KUAFU,       // 跨服
16 };
18 //enum TPOC_SERVER_STATUS

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project\GameServer\include\LogDataDef.h 36 KB H 文件 2015/3/14 1:51:40 2018/8/15 23:55:34 2018/8/15 23:55:34 4
73 	TPOC_CURRENCY_WAY_GOLDEN_EGG_ADD_GOLD	= 47,	// 砸金蛋获得礼金奖励
74 	TPOC_CURRENCY_WAY_BUY_GOLDEN_EGG		= 48,	// 购买金蛋消耗
75 	TPOC_CURRENCY_WAY_KF_ADD_MONEY		= 49,	// 跨服战场所获铜钱奖励
76 	TPOC_CURRENCY_WAY_MAKE_MOUNT_TRAIN		= 50,	// 坐骑升阶
77 	TPOC_CURRENCY_WAY_LIMITE_SHOPPING		= 51,	// 单人限时限量抢购
347 	TPOC_ITME_OP_WAY_REWARD_MOUNT_MENGZHU				= 57,	//盟主奖励坐骑
349 	TPOC_TIME_OP_WAY_GET_OUT_MING_WEN					= 58,	//取出铭文
351 	TPOC_ITME_OP_WAY_KF_BAG_DISCARD					= 59,	// 跨服背包中丢弃
352 	TPOC_ITME_OP_WAY_BAG_TO_KFBAG						= 60,	// 从背包中到跨服背包
353 	TPOC_ITME_OP_WAY_KFBAG_TO_BAG						= 61,	// 从跨服背包中到背包
354 	TPOC_ITME_OP_WAY_LIMITE_SHOPPING					= 62,	// 单人限时限量抢购
355 	TPOC_ITME_OP_WAY_MOUNT_IDENTIFY					= 63,	//鉴定坐骑给坐骑

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project_bus\CenterServer\include\Operator.h 3 KB H 文件 2015/3/14 1:34:56 2018/8/15 23:55:38 2018/8/15 23:55:38 1
33 	int_32 m_nId;
34 	int_32 m_LayerNum;	//堆叠数量
35 	int_32 m_Index;		//在跨服背包中的索引
36 };
38 //struct BangWeight 

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project_bus\Common\PDUDefines.h 61 KB H 文件 2015/3/14 1:34:24 2018/8/15 23:55:38 2018/8/15 23:55:38 8
1 #ifndef __TPOC_PDU_DEFINES_H_
2 #define __TPOC_PDU_DEFINES_H_
4 #define  TPOC_KF_LINE  9 //暂定9线为跨服线
6 /************************************************************************/
6 /************************************************************************/
7 /*  说明：59000 - 60000为跨服通讯指令包处理                                                                     */
8 /************************************************************************/
9 enum KF_PDU_SERVER_TYPE
14 	*	登录时命令字
15 	*/
16 	KF_GS_KS_LOGIN = 59000,					//玩家登陆跨服服务器
17 	KF_GS_KS_LOGOUT,						//玩家从跨服服务器中登出
18 };
20 /*
315 	CL_GT_REQUEST_EXIT_LINE		= 61009,						// 退线
316 	GT_CL_RESPONSE_EXIT_LINE	= 61010,						// 退线返回
318 	// 请求进入跨服服务器
319 	CL_GS_REQUEST_ENTER_KF_LINE = 61011,                        // 请求进入跨服线
320 	GS_CL_RESPONSE_CAN_ENTER_KF_LINE = 61012,                   // 告诉玩家可以开始切换线到跨服战场了
321     GS_CL_NOTIFY_EXIT_KF_LINE        = 61013,                   // 通知玩家离开跨服线
325 	// 阵营
326 	CL_GS_SELECT_CAMP			= 61040,					// 选择阵营

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project_bus\Common\ServerTypeDef.h 1 KB H 文件 2015/3/14 1:34:24 2018/8/15 23:55:38 2018/8/15 23:55:38 1
12 	TPOC_SERVER_TYPE_LOGIN,		// LOGIN 登录服务器
13 	TPOC_SERVER_TYPE_MONITOR,		// MOINITOR 监控工具类型
15 	TPOC_SERVER_TYPE_KUAFU,       // 跨服
16 };
18 //enum TPOC_SERVER_STATUS

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\project_bus\GameServer\include\LogDataDef.h 36 KB H 文件 2015/3/14 1:34:32 2018/8/15 23:55:38 2018/8/15 23:55:38 4
73 	TPOC_CURRENCY_WAY_GOLDEN_EGG_ADD_GOLD	= 47,	// 砸金蛋获得礼金奖励
74 	TPOC_CURRENCY_WAY_BUY_GOLDEN_EGG		= 48,	// 购买金蛋消耗
75 	TPOC_CURRENCY_WAY_KF_ADD_MONEY		= 49,	// 跨服战场所获铜钱奖励
76 	TPOC_CURRENCY_WAY_MAKE_MOUNT_TRAIN		= 50,	// 坐骑升阶
77 	TPOC_CURRENCY_WAY_LIMITE_SHOPPING		= 51,	// 单人限时限量抢购
347 	TPOC_ITME_OP_WAY_REWARD_MOUNT_MENGZHU				= 57,	//盟主奖励坐骑
349 	TPOC_TIME_OP_WAY_GET_OUT_MING_WEN					= 58,	//取出铭文
351 	TPOC_ITME_OP_WAY_KF_BAG_DISCARD					= 59,	// 跨服背包中丢弃
352 	TPOC_ITME_OP_WAY_BAG_TO_KFBAG						= 60,	// 从背包中到跨服背包
353 	TPOC_ITME_OP_WAY_KFBAG_TO_BAG						= 61,	// 从跨服背包中到背包
354 	TPOC_ITME_OP_WAY_LIMITE_SHOPPING					= 62,	// 单人限时限量抢购
355 	TPOC_ITME_OP_WAY_MOUNT_IDENTIFY					= 63,	//鉴定坐骑给坐骑

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\CenterServer\include\ZWOperator.h 4 KB H 文件 2015/3/14 1:37:20 2018/8/15 23:55:43 2018/8/15 23:55:43 2
56 	int_32 m_nId;
57 	int_32 m_LayerNum;	//堆叠数量
58 	int_32 m_Index;		//在跨服背包中的索引
59 };
61 //struct BangWeight 
101 	
102 	int_32		OnCompareBattle(CZWNetData* pNetData);	
103 	//跨服相关
104 	int_32      OnTransmitCharInfoToKFServer(CZWNetData* pNetData);
105 	int_32      OnTransmitCharInfoToKFServerRet(CZWNetData* pNetData);

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\Common\ZWGameDefine.h 44 KB H 文件 2015/3/14 1:35:58 2018/8/15 23:55:44 2018/8/15 23:55:44 1
632 #define ZW_FIGHT_ZHENYING_MAPID1			3001 //阵营战场地图ID1
633 #define ZW_FIGHT_ZHENYING_MAPID2			3002 //阵营战场地图ID2
635 #define ZW_FIGHT_ZHENYING_MAPID_KF          3001 //跨服战场阵营战场地图
637 #define  RESOURCE_BJKX_MAPID 53001	//元气副本
638 #define  RESOURCE_HWLD_MAPID 53002	//经验副本

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\Common\ZWKFSetting.h 1 KB H 文件 2015/3/14 1:35:58 2018/8/15 23:55:44 2018/8/15 23:55:44 3
1 #ifndef __ZW_LOGIN_DB_FETCH_H_
2 #define __ZW_LOGIN_DB_FETCH_H_
3 //跨服战场配置
4 enum ZW_KF_FIGHT_TYPE
5 {
4 enum ZW_KF_FIGHT_TYPE
5 {
6 	ZW_KF_FIGHT_TYPE_ZHENGYING = 1,   //跨服阵营战
7 	ZW_KF_FIGHT_TYPE_TIANXIADIYI = 2,  //跨服天下第一战
8 };
13 #endif //__ZW_LOGIN_DB_FETCH_H_

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\Common\ZWPDUDefines.h 91 KB H 文件 2015/3/14 1:35:58 2018/8/15 23:55:44 2018/8/15 23:55:44 16
1 #ifndef __ZW_PDU_DEFINES_H_
2 #define __ZW_PDU_DEFINES_H_
4 #define  ZW_KF_LINE  9 //暂定9线为跨服线
6 /************************************************************************/
6 /************************************************************************/
7 /*  说明：59000 - 60000为跨服通讯指令包处理                                                                     */
8 /************************************************************************/
9 enum KF_PDU_SERVER_TYPE
14 	*	登录时命令字
15 	*/
16 	KF_GS_KS_LOGIN = 59000,					//玩家登陆跨服服务器
17 	KF_GS_KS_LOGOUT,						//玩家从跨服服务器中登出
18 };
20 /*
347 	CL_GT_REQUEST_EXIT_LINE		= 61009,						// 退线
348 	GT_CL_RESPONSE_EXIT_LINE	= 61010,						// 退线返回
350 	// 请求进入跨服服务器
351 	CL_GS_REQUEST_ENTER_KF_LINE = 61011,                        // 请求进入跨服线
352 	GS_CL_RESPONSE_CAN_ENTER_KF_LINE = 61012,                   // 告诉玩家可以开始切换线到跨服战场了
353     GS_CL_NOTIFY_EXIT_KF_LINE        = 61013,                   // 通知玩家离开跨服线
357 	// 阵营
358 	CL_GS_SELECT_CAMP			= 61040,					// 选择阵营
1081 	CL_GS_MOVE_ITEM_IN_DEPOT					= 63460,	// 在仓库中移动物品
1082 	CL_GS_DESTORY_DEPOT_ITEM					= 63461,	// 销毁仓库物品
1084 	//跨服背包相关
1085 	CL_GS_GET_KF_BAG_INFO						= 63463,	// 获取跨服背包信息
1086 	CL_GS_ADD_ITEM_TO_KF_BAG					= 63464,	// 存物品到跨服背包，绑定物品可以放入跨服背包
1087 	CL_GS_GET_ITEM_FROM_KF_BAG					= 63465,	// 从跨服背包中取物品
1088 	CL_GS_BATCH_KF_BAG							= 63466,	// 批量存取物品
1089 	CL_GS_MOVE_ITEM_IN_KF_BAG					= 63467,
1089 	CL_GS_MOVE_ITEM_IN_KF_BAG					= 63467,
1090 	CL_GS_DESTORY_KF_BAG_ITEM					= 63468,
1092 	GS_CL_NOTIFY_KF_BAG_ITEM_INFO				= 63469,	// 通知跨服背包数据信息
1093 	GS_CL_NOTIFY_KF_BAG_ITEM_CHANGE				= 63470,	// 通知跨服背包脏数据
1095 	CL_GS_GET_AWARD								= 63471,	// 获取收益
1095 	CL_GS_GET_AWARD								= 63471,	// 获取收益
1097 	GS_CL_NOTIFY_KF_BAG_AWARD_INFO				= 63472,	// 通知跨服背包中的奖励信息
1099 	GS_CL_SHOW_RECEIVE_MI_BAO_ITCON				= 63473,	// 通知客户端是否显示领取时装按钮
1100 	// VIP请求

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\Common\ZWServerTypeDef.h 1 KB H 文件 2015/3/14 1:35:58 2018/8/15 23:55:44 2018/8/15 23:55:44 1
12 	ZW_SERVER_TYPE_LOGIN,		// LOGIN 登录服务器
13 	ZW_SERVER_TYPE_MONITOR,		// MOINITOR 监控工具类型
15 	ZW_SERVER_TYPE_KUAFU,       // 跨服
16 };
18 //enum ZW_SERVER_STATUS

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\Common\ZWSqlDef.h 93 KB H 文件 2015/3/14 1:35:58 2018/8/15 23:55:44 2018/8/15 23:55:44 6
256 							VALUES(%I64d,%I64d,%d,%d,%d,%d,%d,%d,%d,1,%d,%d,%d,%d,%d,3,%d)";
257 //---------------------------------------------------------------
258 // 加载跨服背包物品
259 static char*		LoadKFBagItem		= 
260 "SELECT * FROM `t_char_kf_bag_item` WHERE CharId=%I64d";
259 static char*		LoadKFBagItem		= 
260 "SELECT * FROM `t_char_kf_bag_item` WHERE CharId=%I64d";
262 // 加载跨服背包中的装备
263 static char*		LoadKFBagEquip		= 
264 "SELECT * FROM `t_char_kf_bag_item` WHERE `CharId`=%I64d";
263 static char*		LoadKFBagEquip		= 
264 "SELECT * FROM `t_char_kf_bag_item` WHERE `CharId`=%I64d";
266 //跨服奖励相关
267 static char*		LoadKFAwardData		= 
268 "SELECT * FROM `t_char_kf_award` WHERE CharId=%I64d";
306 //%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,\
307 //%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d)"; // 69
309 // 直接插入跨服背包
310 static char*		InsertKFBagItem			=
311 "insert t_char_kf_bag_item(CharId,GateId,LineId,Serial,ItemClass,ItemType,ItemId,LayerNum,IndexInContainer) \
347 static char*		DeleteAllDepotEquip		= 
348 "DELETE FROM t_char_depot_equip WHERE CharId=%I64d";
351 // 删除跨服背包物品
352 static char*		DeleteAllKFBagItem		= 
353 "DELETE FROM t_char_kf_bag_item WHERE CharId=%I64d";
352 static char*		DeleteAllKFBagItem		= 
353 "DELETE FROM t_char_kf_bag_item WHERE CharId=%I64d";
355 // 删除跨服背包装备
356 static char*		DeleteAllKFBagEquip		= 
357 "DELETE FROM t_char_kf_bag_equip WHERE CharId=%I64d";

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\GameServer\include\ZWCharBag.h 15 KB H 文件 2015/3/14 1:36:40 2018/8/15 23:55:44 2018/8/15 23:55:44 3
38 #define ZW_HUNSHI_BAG_INIT_SIZE		15			//魂石背包默认开启格子数
40 #define ZW_ONE_BAG_PLATTE_NUM		32			// 物品栏每个面板中物品个数
41 #define ZW_KF_BAG_PLATTE_NUM		30			// 跨服背包中物品个数
44 enum ZW_SUISHENG_TYPE
45 {
92 	ZW_CHAR_BAG_TYPE_STALL		= 2,		// 摊位 -- 临时的，不会保存到数据库
93 	ZW_CHAR_BAG_TYPE_DEPOT		= 3,		// 仓库
94 	ZW_CHAR_BAG_TYPE_KUAFU      = 4,        // 跨服背包
96 	ZW_CHAR_BAG_TYPE_HUNSHI     = 5,        // 魂石背包
97 	ZW_CHAR_BAG_TYPE_LIEHUN     = 6,        // 猎魂背包
394 	bool SaveDepotToDataBase( std::list<std::string>& SqlStringList, CharID_t CharId );
395 	bool DeleteAllDepotFromDataBase( std::list<std::string>& SqlStringList, CharID_t CharId );
397 	// 跨服背包相关
398 	bool LoadKFBagToDataBase( CharID_t CharId );
399 	bool SaveKFBagToDataBase (std::list<std::string>& SqlStringList,CharID_t CharId );

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\GameServer\include\ZWLogDataDef.h 34 KB H 文件 2015/3/14 1:36:40 2018/8/15 23:55:45 2018/8/15 23:55:45 4
73 	ZW_CURRENCY_WAY_GOLDEN_EGG_ADD_GOLD	= 47,	// 砸金蛋获得礼金奖励
74 	ZW_CURRENCY_WAY_BUY_GOLDEN_EGG		= 48,	// 购买金蛋消耗
75 	ZW_CURRENCY_WAY_KF_ADD_MONEY		= 49,	// 跨服战场所获铜钱奖励
76 	ZW_CURRENCY_WAY_MAKE_MOUNT_DEL		= 50,	// 制作坐骑消耗
77 	ZW_CURRENCY_WAY_LIMITE_SHOPPING		= 51,	// 单人限时限量抢购
346 	ZW_ITME_OP_WAY_REWARD_MOUNT_MENGZHU				= 57,	//盟主奖励坐骑
348 	ZW_TIME_OP_WAY_GET_OUT_MING_WEN					= 58,	//取出铭文
350 	ZW_ITME_OP_WAY_KF_BAG_DISCARD					= 59,	// 跨服背包中丢弃
351 	ZW_ITME_OP_WAY_BAG_TO_KFBAG						= 60,	// 从背包中到跨服背包
352 	ZW_ITME_OP_WAY_KFBAG_TO_BAG						= 61,	// 从跨服背包中到背包
353 	ZW_ITME_OP_WAY_LIMITE_SHOPPING					= 62,	// 单人限时限量抢购
354 	ZW_ITME_OP_WAY_MOUNT_IDENTIFY					= 63,	//鉴定坐骑给坐骑

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\GameServer\include\ZWObj_Char.h 84 KB H 文件 2015/3/14 1:36:40 2018/8/15 23:55:45 2018/8/15 23:55:45 7
360 	int_32						m_nShenXingTimes;
361 };
364 // 角色个人基本属性 -- 跨服数据结构
365 struct ZW_KF_CharBaseInfo
366 {
790 	//跳跃请求
791 	int_32 OnCharJump(CZWNetData* data);
793 	// 跨服背包相关
794 	int_32 OnKFBagOperator(CZWNetData* data);
795 	void LoadKFAwardInfoFromDB( CharID_t CharId );
859 	CZWCharBag* GetCharEquipBag() { return &m_CharEquipBag; } // 装备栏
860 	CZWCharBag* GetCharDepot()	{ return &m_CharDepot; } //仓库
861 	CZWCharBag* GetCharKFBag()  { return &m_CharKFBag; } //跨服背包
862 	CZWTask *   GetCharTask() { return &m_CharTask; }
863 	
880 	ZWShortCutBarData		m_ShortCutBarData[ZW_MAX_SHORT_CUT_NUM];	// 快捷栏
881 	CZWCharBag				m_CharDepot;			// 人物仓库
882 	CZWCharBag              m_CharKFBag;            // 跨服背包
884 	//任务相关
885 	CZWTask                 m_CharTask;
1061 	void UpdateDepotChange();
1062 	void UpdateDepotMoneyChange();
1064 	// 跨服背包通知相关
1065 	void UpdateKFBagChange();
1067 	CZWNetData* PackageEquipInfo(CZWDynamicObj *pObj);
1264 	void				SaveDepotData( std::list<std::string>& SqlStringList );	// 保存仓库数据
1265 	void				DeleteDepotData( std::list<std::string>& SqlStringList );
1267 	void				LoadKFBagData();	// 加载跨服背包数据
1268 	void				SaveKFBagData( std::list<std::string>& SqlStringList );	// 保存跨服背包数据
1269 	void				DeleteKFBagData( std::list<std::string>& SqlStringList );
1271 	void				LoadShortCutBarData();

H:\work\source\笑傲仙侠\[src.cool]笑傲仙侠\server\XaxxFresh\Server\KFServer\include\ZWKFSession.h 1 KB H 文件 2015/3/14 1:35:57 2018/8/15 23:55:46 2018/8/15 23:55:46 1
7 #define MEM_DATASIZE 2041 // 2041 = 2048 - 7, 7 = 4+2+1
9 /************************************************************************/
10 /* 该类代表一个原服服务器与跨服服务器的会话
11 /* 负责管理服务器的所有玩家会话，并将相应的网络包分发给对应的玩家会话
12 /************************************************************************/

H:\work\source\红途\红途整套www.so165.com\红途整套\server\server\ScenesServer\FuBenMgr.h 3 KB H 文件 2010/10/11 14:43:26 2018/9/25 17:38:49 2018/9/25 17:38:49 1
56     ///检查副本有效性 单服副本使用
57     bool checkValid(SceneUser *pUser, DWORD fbType, Cmd::FBActionType actType);
59     ///检查副本有效性 跨服副本使用
60     bool checkUserValid(SceneUser *pUser, DWORD fbType, Cmd::FBActionType actType);
62     bool checkLeaderInFB(SceneUser *pUser, DWORD fbType);

H:\work\source\红途\红途整套www.so165.com\红途整套\server\server\ScenesServer\SceneUser.h 37 KB H 文件 2010/10/11 14:43:22 2018/9/25 17:38:49 2018/9/25 17:38:49 1
236 		//在国外死亡复活到本国凤凰城,写死了^_^
237 		DWORD deathBackToMapID;
239 		//跨服跳地图在Session未返回时的临时记录
240 		char wait_gomap_name[MAX_NAMESIZE];
242 		void setDiplomatState(BYTE newstate);

H:\work\source\超神传\[src.cool]超神传\vxCommon\DB_Struct.h 88 KB H 文件 2012/6/7 11:34:01 2018/9/13 15:12:58 2018/9/13 15:12:58 1
1304 	INT			m_nBanType;//0代表无禁言 1代表只禁言世界频道 2代表只能私聊和好友 3禁言所有频道
1305 	UINT		m_nTimeEnd;//截止时间 这里放一个 是为了在线解禁时间更新
1306 	INT			m_nTeamID;//玩家队伍id 因为队伍id跨服同步有延迟
1307 	INT			m_nIsLeader;//是否队长
1308 	WORLD_POS   m_nPos;

H:\work\source\超神传\[src.cool]超神传\vxCommon\PacketDefine.h 53 KB H 文件 2012/6/8 18:31:50 2018/9/13 15:12:58 2018/9/13 15:12:58 2
186         PACKET_CG_LOCK_TARGET = 170 ,										//玩家锁定目标
187         PACKET_GW_GUILD_STORE = 171 ,										//帮派仓库操作
188         PACKET_WG_ASK_PLAYER_FULL_INFO = 172 ,                 // W->G跨服请求角色详细信息
189         PACKET_GC_NEWPLAYER = 173 ,									//有新的其他玩家进入自己的视野范围
190         PACKET_CG_TEAMSETPICKRULER = 174 ,									//设置队伍分配方式
427         PACKET_GC_GIFT_ACTIVATE = 411 ,							//激活礼包
428         PACKET_CG_STALLSHOPNAME = 412 ,									//通知服务器店铺改名
429         PACKET_GW_RET_PLAYER_FULL_INFO = 413 ,                 // W->G跨服返回角色详细信息
430         PACKET_WG_FINGER = 414 ,											//查找玩家的结果
431         PACKET_GC_CHARIMPACT = 415 ,										//角色附加效果

H:\work\source\超神传\[src.cool]超神传\vxCommon\Packets\GWCheckAndChangeScene.h 2 KB H 文件 2012/6/4 9:51:46 2018/9/13 15:13:00 2018/9/13 15:13:00 1
38         BYTE					m_Dir;
39         BYTE					m_Flag;
40 		//跨服查询可能需要的信息 0-玩家teamid 1-玩家guildid 2-玩家level 3-玩家class 4-玩家sex 5-是否队长 
41 		INT					m_uPramas[10];
42     };

H:\work\source\超神传\[src.cool]超神传\vxCommon\Packets\WGAskEnterScene.h 2 KB H 文件 2012/6/4 9:51:47 2018/9/13 15:13:00 2018/9/13 15:13:00 1
40 		BYTE				m_Dir;
41 		BYTE				m_Flag;
42 		//跨服查询可能需要的信息 0-玩家teamid 1-玩家guildid 2-玩家level 3-玩家class 4-玩家sex 5-是否队长 6-是否是帮派会长 7-是否登陆时判断
43 		INT					m_uPramas[10];
44 		INT				m_bInWorld;

H:\work\source\超神传\[src.cool]超神传\vxCommon\Packets\WGNotifyUser.h 3 KB H 文件 2012/6/4 9:51:47 2018/9/13 15:13:00 2018/9/13 15:13:00 1
40     enum NOTIFY_USER_CAUSES
41     {
42         NUC_CHANGESCENE,        // 跨服切换场景,从老服务器踢掉
43         NUC_USER_ID_INVALID,    // 请求的玩家数据存在,但ID非法
44         NUC_HEARTBEAT_NO_USER,  // 请求心跳的玩家并不存在

H:\work\source\超神传\超神传源码资源\vxCommon\DB_Struct.h 88 KB H 文件 2012/6/7 11:34:01 2014/3/11 22:48:40 2014/3/11 22:48:40 1
1304 	INT			m_nBanType;//0代表无禁言 1代表只禁言世界频道 2代表只能私聊和好友 3禁言所有频道
1305 	UINT		m_nTimeEnd;//截止时间 这里放一个 是为了在线解禁时间更新
1306 	INT			m_nTeamID;//玩家队伍id 因为队伍id跨服同步有延迟
1307 	INT			m_nIsLeader;//是否队长
1308 	WORLD_POS   m_nPos;

H:\work\source\超神传\超神传源码资源\vxCommon\PacketDefine.h 53 KB H 文件 2012/6/8 18:31:50 2014/3/11 22:48:42 2014/3/11 22:48:42 2
186         PACKET_CG_LOCK_TARGET = 170 ,										//玩家锁定目标
187         PACKET_GW_GUILD_STORE = 171 ,										//帮派仓库操作
188         PACKET_WG_ASK_PLAYER_FULL_INFO = 172 ,                 // W->G跨服请求角色详细信息
189         PACKET_GC_NEWPLAYER = 173 ,									//有新的其他玩家进入自己的视野范围
190         PACKET_CG_TEAMSETPICKRULER = 174 ,									//设置队伍分配方式
427         PACKET_GC_GIFT_ACTIVATE = 411 ,							//激活礼包
428         PACKET_CG_STALLSHOPNAME = 412 ,									//通知服务器店铺改名
429         PACKET_GW_RET_PLAYER_FULL_INFO = 413 ,                 // W->G跨服返回角色详细信息
430         PACKET_WG_FINGER = 414 ,											//查找玩家的结果
431         PACKET_GC_CHARIMPACT = 415 ,										//角色附加效果

H:\work\source\超神传\超神传源码资源\vxCommon\Packets\GWCheckAndChangeScene.h 2 KB H 文件 2012/6/4 9:51:46 2014/3/11 22:48:43 2014/3/11 22:48:43 1
38         BYTE					m_Dir;
39         BYTE					m_Flag;
40 		//跨服查询可能需要的信息 0-玩家teamid 1-玩家guildid 2-玩家level 3-玩家class 4-玩家sex 5-是否队长 
41 		INT					m_uPramas[10];
42     };

H:\work\source\超神传\超神传源码资源\vxCommon\Packets\WGAskEnterScene.h 2 KB H 文件 2012/6/4 9:51:47 2014/3/11 22:48:43 2014/3/11 22:48:43 1
40 		BYTE				m_Dir;
41 		BYTE				m_Flag;
42 		//跨服查询可能需要的信息 0-玩家teamid 1-玩家guildid 2-玩家level 3-玩家class 4-玩家sex 5-是否队长 6-是否是帮派会长 7-是否登陆时判断
43 		INT					m_uPramas[10];
44 		INT				m_bInWorld;

H:\work\source\超神传\超神传源码资源\vxCommon\Packets\WGNotifyUser.h 3 KB H 文件 2012/6/4 9:51:47 2014/3/11 22:48:43 2014/3/11 22:48:43 1
40     enum NOTIFY_USER_CAUSES
41     {
42         NUC_CHANGESCENE,        // 跨服切换场景,从老服务器踢掉
43         NUC_USER_ID_INVALID,    // 请求的玩家数据存在,但ID非法
44         NUC_HEARTBEAT_NO_USER,  // 请求心跳的玩家并不存在

H:\work\source\辉煌\[src.cool]辉煌OL\code\Server\GameServer\mapgroupkernel\UserData.h 23 KB H 文件 2010/1/6 16:09:06 2018/9/26 20:24:37 2018/9/26 20:24:37 1
173 	//char            szSvrState[STATC_BUFSIZE];  //什么国家的.其他跟据配置设定
174 	WORD			wOwnStateNo;		// 所属的国家,
175 	WORD            wStateNo;//国家编号在哪个国家...跨服务器的时候才用到        
176 	int				nYBgold;			// 绑定元宝 [12/5/2008 12:13 赵文源]
178 	DWORD			dwLogonCount;		// 玩家登陆次数 [Chancy___2009/1/22 11:23:00]

H:\work\source\辉煌\[src.cool]辉煌OL\code\Server\GameServer\share\networkdef.h 12 KB H 文件 2010/1/14 16:35:20 2018/9/26 20:24:39 2018/9/26 20:24:39 1
54 // GONGFAN [11/22/2008]
55 const unsigned short _MSG_SYSNOTICE		=_MSG_GENERAL+60; //全GS公告
56 const unsigned short _MSG_TOGSPRIVATE	=_MSG_GENERAL+61; //跨服私聊
57 const unsigned short _MSG_SUPERLOUDSPEAKER = _MSG_GENERAL+62;// 超级大喇叭 [zhaowenyuan3/11/2009] 
59 // new info in cq

H:\work\source\辉煌\[src.cool]辉煌OL\code\Server\MsgServer\Define.h 8 KB H 文件 2010/1/6 16:09:12 2018/9/26 20:24:41 2018/9/26 20:24:41 1
73 const unsigned short _MSG_TOJUMPSERVER	=_MSG_GENERAL+59;
74 const unsigned short _MSG_SYSNOTICE	=_MSG_GENERAL+60; //全GS公告
75 const unsigned short _MSG_TOGSPRIVATE	=_MSG_GENERAL+61; //跨服私聊
76 const unsigned short _MSG_SUPERLOUDSPEAKER = _MSG_GENERAL+62;// 超级大喇叭 [zhaowenyuan3/11/2009] 
78 const unsigned short _MSG_GM		=_MSG_GENERAL+100;

